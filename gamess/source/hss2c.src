C 18 Apr 16 - HN  - NEW MODULE FOR PCM HESSIANS
C
C*MODULE HSS2   *DECK DDERIS
C>
C>    @brief   Two integral derivative
C>
C>    @details Driver for two integral 
C>
C>    @author Yuji Imahuku
C>    - Mar, 2015- Subroutine written
C>
      SUBROUTINE DDERIS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DOUBLE PRECISION MCSCF,METHMC
      PARAMETER (MXGTOT=20000, MXSH=5000,MXATM=2000, 
     *           MXAO=8192,MXRT=100,MXNORO=250)
      PARAMETER (ONE=1.0D+00)
      PARAMETER (MXGRID=10)
      LOGICAL NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,UROHF,GVBTYP,
     *        ROGVB,MCCI,GUGACI,HFSCF,GOPARR,DSKWRK,MASWRK,
     *        FIRST,SECND,CPHF,BOTH,MFIRST,MSECND,MCPHF,
     *        PACK2E,OUT,DBG,SOME,CANONC,FCORE,FORS,EKT,LINSER,
     *        BDEFAULT,BFIRST,BSECOND,POLAR,SG1
C      
      COMMON /CHFINF/ CHFSLV,CPTYPE,NWDCHF,POLAR,NSPLIT
      COMMON /DERARG/ LEG,LEH,LFC,LFD,LDA,LDB,LDC,LV,LWRK,
     1                LDTOT,LDSPN,LDSHL,LSHLJ,LSHLK,LDHAM,LEPSA,LDM2,
     2                LIDM2,NBUF,NC
      COMMON /DERMEM/ IWFN,ICLB,INIJG,IGINT,IFINT,ISINT,IIJKLG, 
     1 IDAB,ICHRG,IXY,IXZ,IYZ,IX,IY,IZ,ISJ,ISK,ISL,IGIJKL,IGNKL,IGNM,
     2 IDIJ,IDKL,IB00,IB01,IB10,IC00,ID00,IF00,
     3 IAAI,IAAJ,IBBK,IBBL,IFI,IFJ,IFK,IFL,
     4 ISII,ISJJ,ISKK,ISLL,ISIJ,ISIK,ISIL,ISJK,ISJL,ISKL,
     5 IDIJSI,IDIJSJ,IDKLSK,IDKLSL,IABV,ICV,IRW
      COMMON /DERPAR/ IDER,JDER,KDER,LDER,NDER
      COMMON /DETWFN/ WSTATE(MXRT),SPINS(MXRT),CRIT,PRTTOL,S,SZ,
     *                GRPDET,STSYM,GLIST,DWPARM,
     *                NFLGDM(MXRT),IWTS(MXRT),NCORSV,NCOR,NACT,NORB,
     *                MNA,MNB,K,KSTX,IROOT,IPURES,MAXW1,NITER,MAXP,
     *                NCIDET,IGPDET,KSTSYM,NFTGCI,IDWEIGH,
     *                fstate(mxrt),ifts(mxrt)
      COMMON /DFGRID/ DFTTHR,DFTGTHR,SWOFF,SW0,BSLRD(137),NDFTFG,
     *                NRAD,NTHE,NPHI,NRAD0,NTHE0,NPHI0,
     *                NANGPT(MXGRID),NANGPT0(MXGRID),SG1,JANS
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /FMCOM / X(1)
      COMMON /GUGWFN/ NFZC,NMCC,NDOC,NAOS,NBOS,NALP,NVAL,NNEXT,NFZV,
     *                IFORS,IEXCIT,ICICI,NOIRR
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /HSSPAR/ FIRST,SECND,CPHF,BOTH,MFIRST,MSECND,MCPHF
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /INFOA / NAT,ICH,MUL,NUM,NX,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /INTFIL/ NINTMX,NHEX,NTUPL,PACK2E,INTTYP,IGRDTYP
      COMMON /INTOPT/ ISCHWZ,IECP,NECP,IEFLD
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MCACT / MAXSHL,NNACT,MIJKL 
      COMMON /MCINP / METHMC,CISTEP,FINALCI,ACURCY,ENGTOL,DAMP,
     *                MICIT,NWRDMC,NORBMC,NOROT(2,MXNORO),MOFRZ(15),
     *                NPFLG(10),NOFO,MCFMO,IDIABAT,
     *                CANONC,FCORE,FORS,EKT,LINSER
      COMMON /MCPAR / NFZCX,NMCCOR,NCI,NOC,NORBX,NUM1
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /OUTPUT/ NPRINT,ITOL,ICUT,NORMF,NORMP,NOPK
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL
      COMMON /SCFPAR/ NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,
     *                UROHF,GVBTYP,ROGVB,MCCI,GUGACI
      COMMON /SHLBAS/ MAXTYP,MAXNUM
      COMMON /SYMERI/ LTX,LTY,LTZ,LUX,LUY,LUZ
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
      DIMENSION LENSHL(5)
      DATA LENSHL      / 1, 4,10,20,35/
      DATA MCSCF /8HMCSCF    /
      DATA RHF,UHF,ROHF,GVB/8HRHF     ,8HUHF     ,8HROHF    ,8HGVB     /
      DATA GUGA,ALDET,GENCI,ORMAS,GMCCI
     *       /8HGUGA    ,8HALDET   ,8HGENCI   ,8HORMAS   ,8HGMCCI   /
!      DATA RNONE/8HNONE    /
      DATA HSS2/8HHSS2    /      , CHECK/8HCHECK   /
      DATA SDEFAULT/8HDEFAULT  /,SFIRST/8HFIRST   /,SSECOND/8HSECOND  / 
      DATA TEN   /1.0D+01/
      DATA RLN10 /2.30258D+00/
      DATA TYPEAO/8HAO      /
C
      CALTYP = SDEFAULT
      BDEFAULT = CALTYP.EQ.SDEFAULT
      BFIRST   = CALTYP.EQ.SFIRST
      BSECOND  = CALTYP.EQ.SSECOND
      IF(.NOT.(BDEFAULT.OR.BFIRST.OR.BSECOND)) CALL ABRT
C
C     ----- DRIVER FOR 2 ELECTRON (GRAD+HESS) TERMS -----
C     THESE ARE INTEGRAL SECOND DERIVATIVES, AND FOCK DERIVATIVES.
C
      OUT = MASWRK  .AND.  EXETYP.EQ.HSS2
      SOME = MASWRK  .AND.  NPRINT.NE.-5
C
      CALL BASCHK(MAXTYP)
      IF(MAXTYP.GT.5) THEN
         IF(MASWRK) WRITE(IW,*)
     *        'ALAS, GRADIENT INTEGRALS PROGRAMMED FOR SPDFG ONLY'
         CALL ABRT
      END IF
C
C     FILE FOR DERIVATIVE FOCK MATRICES
C
      NFT18 = 18
C
C     ----- THIS CODE FOR GRADIENT + HESSIAN ( -NDER- = 2 ) -----
C
      NDER=0
      IF(MFIRST) NDER = 1
      IF(MSECND) NDER = 2
C
      IF(BDEFAULT) THEN
         RHFTYP  = SCFTYP.EQ.RHF.AND.CITYP.NE.GUGA
         UHFTYP  = SCFTYP.EQ.UHF
         ROHFTYP = SCFTYP.EQ.ROHF
         UROHF   = UHFTYP.OR.(ROHFTYP.AND.CPTYPE.EQ.TYPEAO)
         GVBTYP  = SCFTYP.EQ.GVB
         ROGVB   = (ROHFTYP.OR.GVBTYP).AND..NOT.UROHF
         MCCI    = SCFTYP.EQ.MCSCF
         GUGACI  = CITYP .EQ.GUGA
         HFSCF   = (RHFTYP .OR. UHFTYP .OR. 
     *              ROHFTYP) .AND. CITYP.NE.GUGA
      ELSE
         RHFTYP  = .TRUE.
         UHFTYP  = .FALSE.
         ROHFTYP = .FALSE.
         UROHF   = .FALSE.
         GVBTYP  = .FALSE.
         ROGVB   = .FALSE.
         MCCI    = .FALSE.
         GUGACI  = .FALSE.
         HFSCF   = .TRUE.
      END IF
C            
C     ----- CODE VALID ONLY FOR CLOSED-SHELL CASES -----
C
C         CARRY OUT EXPLICIT BACK TRANSFORMATION FOR -CI- FUNCTIONS
C
      IF(GUGACI) CALL TRF2DM
C
      NC= NAT*3
      NXYZ2 = 9*(NAT*NAT+NAT)/2
      NEGH = NC + NXYZ2
      L1= NUM
      L2=(NUM*(NUM+1))/2
      L3= NUM*NUM
C
      MAXSHL=LENSHL(MAXTYP+1)
      IF(MAXSHL.LT.4) MAXSHL=4
C
C     ----- CALCULATE THE NUMBER OF MCSCF CORE AND ACTIVE ORBITALS -----
C
      NCI = 0
      IF(MCCI) THEN
         IF(CISTEP.EQ.ALDET) NCI = NACT
         IF(CISTEP.EQ.GENCI) NCI = NACT
         IF(CISTEP.EQ.ORMAS) NCI = NACT
         IF(CISTEP.EQ.GMCCI) NCI = NACT
         IF(CISTEP.EQ.GUGA)  NCI = NDOC+NAOS+NBOS+NALP+NVAL+NNEXT
         IF(CISTEP.EQ.ALDET) NMCCOR = NCORSV
         IF(CISTEP.EQ.GENCI) NMCCOR = NCORSV
         IF(CISTEP.EQ.ORMAS) NMCCOR = NCORSV
         IF(CISTEP.EQ.GMCCI) NMCCOR = NCORSV
         IF(CISTEP.EQ.GUGA)  NMCCOR = NMCC
      END IF
C
      NOCORE = .FALSE.
      NOOPEN = .FALSE.
C
      IF(GVBTYP) THEN
         NOCORE=NCO.EQ.0
         NOOPEN=NSETO.EQ.0  .AND.  NPAIR.EQ.0
      END IF
C
C     ----- INITIALIZATION -----
C
      LENGTH=NEGH+NC*NC+NC*L2
      IF(UROHF) LENGTH=LENGTH+NC*L2 
C
      IF(SOME) WRITE(IW,9998)
      RTOL=RLN10*ITOL
      DTOL=TEN**(-ITOL)
C
C       CALCULATE THE AMOUNT OF MEMORY NEEDED AND SET THE POINTERS
C       FOR BOTH PACKAGES
C
      CALL VALFM(LOADFM)
C
      CALL JKDMRY(IADDR,LENGTH,LOADFM)
C
      CALL GOTFM(NGOTMX)
C
C     ----- SCF WAVEFUNCTIONS -----
C
      LEGH  = IWFN
      LEG   = LEGH
      LEH   = LEG   + NC
      LFC   = LEH   + NXYZ2
      LFD   = LFC   + NC*NC
c     LDA   = LFD   + NC*L2
c     IF(UROHF) LDA   = LFD   + NC*L2*2
      LDA   = IADDR
      LDB   = LDA   + L2
      LDC   = LDB   + L2
      LDTOT = LDC   + L2
      LDSPN = LDTOT + L2
      LAST  = LDSPN + L2
      IF(RHFTYP .OR. GUGACI) THEN
         LDTOT = LDA   + L2
         LAST  = LDTOT + L2
         LDB   = LAST
         LDC   = LAST
         LDSPN = LAST
      END IF
C
      IF(MCCI) LAST = LDSPN
C
      LTX  = LAST
      LTY  = LTX + 35*35
      LTZ  = LTY + 35*35
      LUX  = LTZ + 35*35
      LUY  = LUX + 35*35
      LUZ  = LUY + 35*35
      LAST = LUZ + 35*35
C
      IF(ROGVB) THEN        
         LDSHL  = LAST
         LSHLJ  = LDSHL  + L2*NHAM
         LSHLK  = LSHLJ  + L2*NHAM*NC
         LDHAM  = LSHLK  + L2*NHAM*NC
         LEPSA  = LDHAM  + 3*NPAIR*NC
         LAST   = LEPSA  + L3
      ELSE
         LDSHL = LAST
         LSHLJ = LAST
         LSHLK = LAST
         LDHAM = LAST
         LEPSA = LAST
      END IF
C
      LV    = LAST
      LWRK  = LV    + L3
      IF(UROHF) LWRK = LV   + L3*2
      LAST  = LWRK  + L1
      IF(MCCI .OR. GUGACI) LAST = LWRK   + L3
C
      LDM2  = LAST
      IF(GUGACI) THEN
         NBUF=1
         LIDM2 = LDM2 + NBUF*NINTMX
      ELSE IF (MCCI) THEN
         NBUF=1
         NNACT = (NCI**2+NCI)/2
         MIJKL = (NNACT**2+NNACT)/2
         LTPDM = LDM2  + NBUF*NINTMX
         LHBDM = LTPDM + (NCI*NCI)*(NCI*NCI)
         LHCD  = LHBDM + L2*NNACT
         LDLAG = LHCD  + NC
         LGD   = LDLAG + L3*NC
         LFVD  = LGD   + MIJKL*NC
         LIDM2 = LFVD  + L2*NC + MAXSHL*(NCI**3) +
     *           (MAXSHL**2)*(NCI**2) + NCI*(MAXSHL**3) +
     *           MAXSHL**4 + 4*NCI*(MAXSHL**3)
      ELSE     
         NBUF=0
      END IF 
      LAST  = LIDM2 + NBUF*NINTMX
C
C     ----- GET CORE MEMORY -----
C
      NEED = LAST-LOADFM-1
      IF(NEED.GT.NGOTMX) THEN
         WRITE(IW,9999)
         CALL ABRT
      END IF
      CALL GETFM(NEED)
C
      IF(EXETYP.EQ.CHECK) GO TO 900
C
C     ----- READ WAVEFUNCTION INFORMATION -----
C
      CALL JKDHF(X(LDA),X(LDB),X(LDC),X(LDTOT),X(LDSPN),X(LV),
     *           X(LDSHL),IA,L1,L2,L3,HFSCF)
      CALL JDDHF(X(LFC),NC,X(LFD),L2,L1,X(LEGH),NFT18)
C
C
C     ----- READ MCSCF WAVEFUNCTION INFORMATION -----
C
      IF(MCCI) THEN
        CALL JKDMC(X(LDB),X(LDC),X(LV),X(LTPDM),
     *             X(LDTOT),X(LIDM2),X(LDM2),IA,L1,NMCCOR,NCI)
        CALL MCINI(X(LV),X(LDLAG),X(LFD),X(LHCD),
     *             X(LFVD),X(LGD),X(LDB),X(LTPDM),X(LHBDM),IA,L1,
     *             L2,L3,NMCCOR,NCI,NNACT,MIJKL,NC,NFT18)
      END IF
C
C     ----- READ INTEGRAL BOUNDS ON -DAF- -----
C
      NSH2=(NSHELL*(NSHELL+1))/2
C
      IF(ISCHWZ.EQ.1) THEN
         CALL DAREAD(IDAF,IODA,X(ICLB),NSH2,54,0)
      ELSE
         DO I=0,NSH2-1
            X(ICLB+I) = ONE
         END DO
      END IF
C
C     ----- CALCULATE 2E-DERIVATIVE TERM -----
C
      CALL JDDER
C
C     ----- RESET CORE MEMORY -----
C
  900 CONTINUE
C
      CALL RETFM(NEED)
C
C     For analytic second order derivative of DFT
      IF (NDFTFG.EQ.1) THEN
c       IF(MASWRK) write(IW,*) "Enter DFT specific term for Hessian"
        CALL VALFM(LOADFM)
        LEGH  = IWFN
        LEG   = LEGH
        LEH   = LEG   + NC
        LFC   = LEH   + NXYZ2
        LFD   = LFC   + NC*NC
c       LDA   = LFD   + NC*L2
c       IF(UROHF) LDA   = LFD   + NC*L2*2
        LDA   = IADDR
        LDB   = LDA   + L3
        LTRI  = LDB   + L3
        LV    = LTRI  + L2
        LWRK  = LV    + L3
        IF(UHFTYP)    LWRK  = LV    + L3*2  
        LAST  = LWRK  + L3
        LDSHL = LAST
        LSHLJ = LAST
        LSHLK = LAST
        LDHAM = LAST
        NEED  = LAST-LOADFM-1
        CALL GETFM(NEED)
C
        CALL DFTHSS(NC,L1,L2,L3,X(LEGH),X(LEG),X(LEH),
     *       X(LFD),X(LTRI),X(LDA),X(LDB),X(LV))
C
        IF(UHFTYP) THEN
          I36=6
        ELSE
          I36=3
        END IF
        ROGVB  = .FALSE.
        GUGACI = .FALSE.
        CALL JDDEND(CALTYP,X(LEGH),X(LEG),X(LEH),X(LFD),
     *            X(LV),X(LDB),X(LDA),X(LWRK),X(LSHLJ),X(LSHLK),IA,
     *            X(LDHAM),MCPHF,NFT18,I36,NAT,NHAM,NQMT,L1,L2,L3,
     *            RHFTYP,UHFTYP,ROGVB,.FALSE.,GUGACI)
C
        CALL RETFM(NEED)
      END IF
C
      CALL TIMIT(1)
      RETURN
 9999 FORMAT(' NOT ENOUGH CORE IN -DDERJK- . STOP . ')
 9998 FORMAT(/5X,46(1H-)/
     *        5X,'TWO ELECTRON INTEGRAL DERIVATIVE CONTRIBUTIONS'/
     *        5X,46(1H-))
      END
C*MODULE HSS2   *DECK JDDHF
C>
C>    @brief   Two integral derivative
C>
C>    @details Driver for two integral 
C>
C>    @author Yuji Imahuku
C>    - Mar, 2015- Subroutine written
C>    -- INPUT--
C>    @param    FCM  Hessian
C>    @param    NC   Number of cartesian coordiante
C>    @param    DF   Fock derivative term
C>    @param    L2   Number of triangular matrix
C>    @param    L1   Number of tomic orbital
C>    @param    DE   Derivative of energy
C>    @param  NFT18  Record number
C>
      SUBROUTINE JDDHF(FC,NC,DF,L2,L1,DE,NFT18)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER(MXATM=2000)
      LOGICAL OUT,DBG
      LOGICAL FIRST,SECND,CPHF,BOTH,MFIRST,MSECND,MCPHF
      LOGICAL NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,UROHF,
     *        GVBTYP,ROGVB,MCCI,GUGACI
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /HSSPAR/ FIRST,SECND,CPHF,BOTH,MFIRST,MSECND,MCPHF
      COMMON /INFOA / NAT,ICH,MUL,NUM,NX,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /RESTAR/ TIMLIM,NREST,NREC,INTLOC,IST,JST,KST,LST
      COMMON /SCFPAR/ NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,
     *                UROHF,GVBTYP,ROGVB,MCCI,GUGACI
C
      DIMENSION FC(NC,NC),DF(L2,1),DE(1)
C
c       ENTRY      JDDCI(FC,NC,DF,L2,L1)
C
C     ----- READ 1E-GRADIENT AND 1E-HESSIAN -----
C
      IF(MFIRST) CALL DAREAD(IDAF,IODA,DE,NC,3,0)
      IF(MSECND) CALL DAREAD(IDAF,IODA,FC,NC*NC,4,0)      
C
      IF(OUT) THEN
        IF(MFIRST) WRITE(IW,9998)
        IF(MFIRST) CALL EGOUT(DE,NAT)
        IF(MSECND) WRITE(IW,9999)
        IF(MSECND) CALL HSSOUT(FC,NC,NC,NC)
      ENDIF
C
C     ----- READ DERIVATIVE FOCK MATRICES -----
C     ----- DIAGONAL IS MULTIPLIED BY 2.0 -----
C
      IF(MCCI) GO TO 500
C
      CALL SEQREW(NFT18)
      IF(OUT)  WRITE(IW,9997)
      LXYZ = 1
      DO 440 IAT=1,NAT
         DO 430 IXYZ=1,3
            CALL SQREAD(NFT18,DF(1,LXYZ),L2)
C
            IJ=0
            DO I=1,L1
               DO J=1,I
                  IJ=IJ+1
                  IF(J.NE.I) THEN
                     DF(IJ,LXYZ)=DF(IJ,LXYZ)+DF(IJ,LXYZ)
                  ENDIF
               END DO
            END DO
C
            IF(UROHF) CALL DCOPY(L2,DF(1,LXYZ),1,DF(1,LXYZ+3),1)
            LXYZ = LXYZ + 1
  430 CONTINUE
         IF(UROHF) LXYZ=LXYZ+3
  440 CONTINUE
C
      CALL SEQREW(NFT18)
C
C     ----- PRINT DERIVATIVE FOCK MATRIX -----
C
      I36 = 3
      IF(UHFTYP) I36 = 6
      IF(OUT) THEN
         DO IAT = 1,NAT
            DO IXYZ = 1,I36 
                WRITE(IW,*) 'H(A) FOR ATOM',IAT,' COORD',IXYZ
                CALL PRTRI(DF(1,IXYZ),NUM)
            END DO
         END DO
      END IF
C
  500 CONTINUE
      IST=1
      JST=1
      KST=1
      LST=1
      RETURN
 9999 FORMAT(/10X,18(1H-)/,10X,'1E- HESSIAN MATRIX',/,10X,18(1H-))
 9998 FORMAT(/10X,12(1H-)/,10X,'1E- GRADIENT',/,10X,12(1H-))
 9997 FORMAT(/10X,32(1H-)/,10X,'1E- FIRST DERIVATIVE FOCK MATRIX',
     *       /,10X,32(1H-) )
      END
C*MODULE HSS2   *DECK JDDER
C>
C>    @brief   Two integral derivative
C>
C>    @details Driver for two integral 
C>
C>    @author Yuji Imahuku
C>    - Mar, 2015- Subroutine written
C>
      SUBROUTINE JDDER
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXATM=2000)
      LOGICAL SPSKIP
      LOGICAL LCFLAG,LRINT
C
      COMMON /DERARG/ LEG,LEH,LFC,LFD,LDA,LDB,LDC,LV,LWRK,
     1                LDTOT,LDSPN,LDSHL,LSHLJ,LSHLK,LDHAM,LEPSA,LDM2,
     2                LIDM2,NBUF,NC
      COMMON /DERMEM/ IWFN,ICLB,INIJG,IGINT,IFINT,ISINT,IIJKLG,
     1 IDAB,ICHRG,IXY,IXZ,IYZ,IX,IY,IZ,ISJ,ISK,ISL,IGIJKL,IGNKL,IGNM,
     2 IDIJ,IDKL,IB00,IB01,IB10,IC00,ID00,IF00,
     3 IAAI,IAAJ,IBBK,IBBL,IFI,IFJ,IFK,IFL,
     4 ISII,ISJJ,ISKK,ISLL,ISIJ,ISIK,ISIL,ISJK,ISJL,ISKL,
     5 IDIJSI,IDIJSJ,IDKLSK,IDKLSL,IABV,ICV,IRW
      COMMON /FMCOM / X(1)
      COMMON /INFOA / NAT,ICH,MUL,NUM,NX,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /INTHND/ SPSKIP
      COMMON /NLRC  / LCFLAG,EMU,EMU2,LRFILE
      COMMON /NLRCF / LRINT
      COMMON /MCACT / MAXSHL,NNACT,MIJKL
      COMMON /SYMERI/ LTX,LTY,LTZ,LUX,LUY,LUZ
C
      SPSKIP=.FALSE.
C
C     FILE FOR DERIVATIVE FOCK MATRICES
C
      NFT18 = 18
C
      L1= NUM
      L2=(NUM*(NUM+1))/2
C
      CALL ONECHG(X(INIJG))
C
      IF(LCFLAG) THEN
        LRINT=.TRUE.
        CALL JKDHND(X(ICLB ),X(INIJG),X(LEG),X(LEH),X(LFC),X(LFD),
     1    X(LDA),X(LDB),X(LDC),X(LV ),X(LWRK),X(LDTOT),X(LDSPN), 
     2    X(LDSHL),X(LSHLJ),X(LSHLK),X(LDHAM),X(LEPSA),X(LDM2),
     3    X(LIDM2),X(LTX),X(LTY),X(LTZ),X(LUX),X(LUY),X(LUZ),MAXSHL,
     4    NBUF,NC,L1,L2,NFT18) 
c       CALL HSSOUT(X(LFC),NC,NC,NC)
        LRINT=.FALSE.
      END IF
C
      CALL JKDHND(X(ICLB ),X(INIJG),X(LEG),X(LEH),X(LFC),X(LFD),
     1    X(LDA),X(LDB),X(LDC),X(LV ),X(LWRK),X(LDTOT),X(LDSPN), 
     2    X(LDSHL),X(LSHLJ),X(LSHLK),X(LDHAM),X(LEPSA),X(LDM2),
     3    X(LIDM2),X(LTX),X(LTY),X(LTZ),X(LUX),X(LUY),X(LUZ),MAXSHL,
     4    NBUF,NC,L1,L2,NFT18) 
C
c     CALL HSSOUT(X(LFC),NC,NC,NC)
C
      RETURN
      END
C*MODULE HSS2   *DECK DINTV
C>     @brief   Fock derivative matrix 
C>
C>     @details construct integral elememnts
C>
C>     @author yuji imafuku 
C>
C>  --INPUT--
C>  @param  NG    number of G
C>  @param  NR    number of integral
C>  @param  IJKLG number of indices
C>  @param  XYZ   derivative elements
C>  @param  FIXYZ derivative elements
C>  @param  FJXYZ derivative elements 
C>  @param  FKXYZ derivative elements
C>  @param  FLXYZ derivative elements
C>  @param  XY    second derivative elements
C>  @param  XZ    second derivative elements
C>  @param  YZ    second derivative elements
C>  @param  X     derivative elements
C>  @param  Y     derivative elements
C>  @param  Z     derivative elements
C>  @param  SJ    derivative elements
C>  @param  SK    derivative elements
C>  @param  SL    derivative elements
C>  @param  DIJSI derivative elements 
C>  @param  DIJSJ derivative elements
C>  @param  DKLSK derivative elements
C>  @param  DKLSL derivative elements
C>  @param  DAB   Density matrix term
C>  --OUTPUT--
C>  @param  FIJKL Fock integral
      SUBROUTINE DINTV(NG,NR,IJKLG,FIJKL,XYZ,
     1 FIXYZ,FJXYZ,FKXYZ,FLXYZ,
     2 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL IS,JS,KS,LS
      LOGICAL IJS,IJKS,IJKLS
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSHL/ FD(12),SD(78)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      DIMENSION FIJKL(12,1),IJKLG(4,1)
      DIMENSION DAB(1)
      DIMENSION XYZ(NG*NR,1)
      DIMENSION FIXYZ(NG*NR,1), FJXYZ(NG*NR,1)
      DIMENSION FKXYZ(NG*NR,1), FLXYZ(NG*NR,1)
      DIMENSION XY(NG*NR),XZ(NG*NR),YZ(NG*NR)
      DIMENSION X(NG*NR), Y(NG*NR), Z(NG*NR)
      DIMENSION SJ(NG*NR),SK(NG*NR),SL(NG*NR)
      DIMENSION DIJSI(NG*NR),DIJSJ(NG*NR),DKLSK(NG*NR),DKLSL(NG*NR)
      DATA ZERO /0.0D+00/
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IF(SPIJKL) GO TO 1000
C
C     ----- NO SHARED EXPONENTS ; SUM UP ( IX * IY * IZ ) -----
C
      IJKLN=0
      DO 440 I=MINI,MAXI
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 430 J=MINJ,JMAX
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 420 K=MINK,KMAX
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 410 L=MINL,LMAX
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      DO 110 IGR=1,NG*NR
      XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
      XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
  110 YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
C
      IF(SKIPI) GO TO 130
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 120 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
  120 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
  130 IF(SKIPJ) GO TO 150
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 140 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
  140 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
  150 IF(SKIPK) GO TO 170
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 160 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
  160 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
  170 IF(SKIPL) GO TO 190
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 180 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
  180 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
  190 CONTINUE
C
  410 CONTINUE
  420 CONTINUE
  430 CONTINUE
  440 CONTINUE
C
      RETURN
C
C     ----- SHARED EXPONENTS ; FORM ( IX * IY * IZ ) -----
C
 1000 CONTINUE
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IJKLN=0
      DO 1840 I=MINI,MAXI
      IS=SPI.AND.I.EQ.1
C
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 1830 J=MINJ,JMAX
      JS=SPJ.AND.J.EQ.1
C
      IF(JS) THEN
         IF(IS) THEN
            DO 1110 IGR=1,NG*NR
 1110       SJ(IGR)=DIJSJ(IGR)*DIJSI(IGR)
         ELSE
            DO 1120 IGR=1,NG*NR
 1120       SJ(IGR)=DIJSJ(IGR)
         ENDIF
      ELSE
         IF(IS) THEN
            DO 1130 IGR=1,NG*NR
 1130       SJ(IGR)=DIJSI(IGR)
         ENDIF
      ENDIF
      IJS=IS.OR.JS
C
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 1820 K=MINK,KMAX
      KS=SPK.AND.K.EQ.1
C
      IF(KS) THEN
         IF(IJS) THEN
            DO 1210 IGR=1,NG*NR
 1210       SK(IGR)=DKLSK(IGR)*SJ(IGR)
         ELSE
            DO 1220 IGR=1,NG*NR
 1220       SK(IGR)=DKLSK(IGR)
         ENDIF
      ELSE
         IF(IJS) THEN
            DO 1230 IGR=1,NG*NR
 1230       SK(IGR)=SJ(IGR)
         ENDIF
      ENDIF
      IJKS=IJS.OR.KS
C
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 1810 L=MINL,LMAX
      LS=SPL.AND.L.EQ.1
C
      IF(LS) THEN
         IF(IJKS) THEN
            DO 1310 IGR=1,NG*NR
 1310       SL(IGR)=DKLSL(IGR)*SK(IGR)
         ELSE
            DO 1320 IGR=1,NG*NR
 1320       SL(IGR)=DKLSL(IGR)
         ENDIF
      ELSE
         IF(IJKS) THEN
            DO 1330 IGR=1,NG*NR
 1330       SL(IGR)=SK(IGR)
         ENDIF
      ENDIF
      IJKLS=IJKS.OR.LS
C
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      IF(IJKLS) THEN
         DO 1500 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)*SL(IGR)
          Y(IGR)=XYZ(IGR,NY)*SL(IGR)
          Z(IGR)=XYZ(IGR,NZ)*SL(IGR)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)*SL(IGR)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)*SL(IGR)
 1500    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)*SL(IGR)
      ELSE
         DO 1510 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)
          Y(IGR)=XYZ(IGR,NY)
          Z(IGR)=XYZ(IGR,NZ)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
 1510    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
      ENDIF
C
      IF(SKIPI) GO TO 1530
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1520 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
 1520 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
 1530 IF(SKIPJ) GO TO 1550
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1540 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
 1540 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
 1550 IF(SKIPK) GO TO 1570
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1560 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
 1560 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
 1570 IF(SKIPL) GO TO 1590
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1580 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
 1580 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
 1590 CONTINUE
C
 1810 CONTINUE
 1820 CONTINUE
 1830 CONTINUE
 1840 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DINTS
C>     @brief   Fock derivative matrix
C>
C>     @details construct integral elememnts for S 
C>
C>    @author Yuji Imahuku
C>
C>  --INPUT--
C>  @param  NG    number of G
C>  @param  NR    number of integral
C>  @param  IJKLG number of indices
C>  @param  XYZ   derivative elements
C>  @param  FIXYZ derivative elements
C>  @param  FJXYZ derivative elements 
C>  @param  FKXYZ derivative elements
C>  @param  FLXYZ derivative elements
C>  @param  XY    second derivative elements
C>  @param  XZ    second derivative elements
C>  @param  YZ    second derivative elements
C>  @param  X     derivative elements
C>  @param  Y     derivative elements
C>  @param  Z     derivative elements
C>  @param  SJ    derivative elements
C>  @param  SK    derivative elements
C>  @param  SL    derivative elements
C>  @param  DIJSI derivative elements 
C>  @param  DIJSJ derivative elements
C>  @param  DKLSK derivative elements
C>  @param  DKLSL derivative elements
C>  @param  DAB   Density matrix term
C>  --OUTPUT--
C>  @param  FIJKL Fock integral
C>
      SUBROUTINE DINTS(NG,NR,IJKLG,FIJKL,XYZ,
     1 FIXYZ,FJXYZ,FKXYZ,FLXYZ,
     2 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL IS,JS,KS,LS
      LOGICAL IJS,IJKS,IJKLS
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSHL/ FD(12),SD(78)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      DIMENSION FIJKL(12,1),IJKLG(4,1)
      DIMENSION DAB(1)
      DIMENSION    XYZ(NG*NR,1)
      DIMENSION  FIXYZ(NG*NR,1), FJXYZ(NG*NR,1)
      DIMENSION  FKXYZ(NG*NR,1), FLXYZ(NG*NR,1)
      DIMENSION XY(NG*NR),XZ(NG*NR),YZ(NG*NR)
      DIMENSION  X(NG*NR), Y(NG*NR), Z(NG*NR)
      DIMENSION SJ(NG*NR),SK(NG*NR),SL(NG*NR)
      DIMENSION DIJSI(NG*NR),DIJSJ(NG*NR),DKLSK(NG*NR),DKLSL(NG*NR)
      DATA ZERO /0.0D+00/
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IF(SPIJKL) GO TO 1000
C
C     ----- NO SHARED EXPONENTS ; SUM UP ( IX * IY * IZ ) -----
C
      IJKLN=0
      DO 440 I=MINI,MAXI
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 430 J=MINJ,JMAX
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 420 K=MINK,KMAX
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 410 L=MINL,LMAX
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      DO 110 IGR=1,NG*NR
      XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
      XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
  110 YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
C
      IF(SKIPI) GO TO 130
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 120 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
  120 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
  130 IF(SKIPJ) GO TO 150
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 140 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
  140 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
  150 IF(SKIPK) GO TO 170
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 160 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
  160 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
  170 IF(SKIPL) GO TO 190
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 180 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
  180 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
  190 CONTINUE
  410 CONTINUE
  420 CONTINUE
  430 CONTINUE
  440 CONTINUE
C
      RETURN
C
C     ----- SHARED EXPONENTS ; FORM ( IX * IY * IZ ) -----
C
 1000 CONTINUE
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IJKLN=0
      DO 1840 I=MINI,MAXI
      IS=SPI.AND.I.EQ.1
C
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 1830 J=MINJ,JMAX
      JS=SPJ.AND.J.EQ.1
C
      IF(JS) THEN
         IF(IS) THEN
            DO 1110 IGR=1,NG*NR
 1110       SJ(IGR)=DIJSJ(IGR)*DIJSI(IGR)
         ELSE
            DO 1120 IGR=1,NG*NR
 1120       SJ(IGR)=DIJSJ(IGR)
         ENDIF
      ELSE
         IF(IS) THEN
            DO 1130 IGR=1,NG*NR
 1130       SJ(IGR)=DIJSI(IGR)
         ENDIF
      ENDIF
      IJS=IS.OR.JS
C
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 1820 K=MINK,KMAX
      KS=SPK.AND.K.EQ.1
C
      IF(KS) THEN
         IF(IJS) THEN
            DO 1210 IGR=1,NG*NR
 1210       SK(IGR)=DKLSK(IGR)*SJ(IGR)
         ELSE
            DO 1220 IGR=1,NG*NR
 1220       SK(IGR)=DKLSK(IGR)
         ENDIF
      ELSE
         IF(IJS) THEN
            DO 1230 IGR=1,NG*NR
 1230       SK(IGR)=SJ(IGR)
         ENDIF
      ENDIF
      IJKS=IJS.OR.KS
C
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 1810 L=MINL,LMAX
      LS=SPL.AND.L.EQ.1
C
      IF(LS) THEN
         IF(IJKS) THEN
            DO 1310 IGR=1,NG*NR
 1310       SL(IGR)=DKLSL(IGR)*SK(IGR)
         ELSE
            DO 1320 IGR=1,NG*NR
 1320       SL(IGR)=DKLSL(IGR)
         ENDIF
      ELSE
         IF(IJKS) THEN
            DO 1330 IGR=1,NG*NR
 1330       SL(IGR)=SK(IGR)
         ENDIF
      ENDIF
      IJKLS=IJKS.OR.LS
C
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      IF(IJKLS) THEN
         DO 1500 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)*SL(IGR)
          Y(IGR)=XYZ(IGR,NY)*SL(IGR)
          Z(IGR)=XYZ(IGR,NZ)*SL(IGR)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)*SL(IGR)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)*SL(IGR)
 1500    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)*SL(IGR)
      ELSE
         DO 1510 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)
          Y(IGR)=XYZ(IGR,NY)
          Z(IGR)=XYZ(IGR,NZ)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
 1510    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
      ENDIF
C
      IF(SKIPI) GO TO 1530
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1520 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
 1520 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
 1530 IF(SKIPJ) GO TO 1550
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1540 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
 1540 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
 1550 IF(SKIPK) GO TO 1570
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1560 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
 1560 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
 1570 IF(SKIPL) GO TO 1590
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DO 1580 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
 1580 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
 1590 CONTINUE
 1810 CONTINUE
 1820 CONTINUE
 1830 CONTINUE
 1840 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DDINTV
C>     @brief   Fock derivative matrix
C>
C>     @details construct integral elememnts
C>
C>     @author Yuji imafuku
C>
C>  --INPUT--
C>  @param  NG    number of G
C>  @param  NR    number of integral
C>  @param  IJKLG number of indices
C>  @param  XYZ   derivative elements
C>  @param  FIXYZ derivative elements
C>  @param  FJXYZ derivative elements 
C>  @param  FKXYZ derivative elements
C>  @param  FLXYZ derivative elements
C>  @param  XY    second derivative elements
C>  @param  XZ    second derivative elements
C>  @param  YZ    second derivative elements
C>  @param  X     derivative elements
C>  @param  Y     derivative elements
C>  @param  Z     derivative elements
C>  @param  SJ    derivative elements
C>  @param  SK    derivative elements
C>  @param  SL    derivative elements
C>  @param  DIJSI derivative elements 
C>  @param  DIJSJ derivative elements
C>  @param  DKLSK derivative elements
C>  @param  DKLSL derivative elements
C>  @param  DAB   Density matrix
C>  --OUTPUT--
C>  @param  FIJKL Fock integral
      SUBROUTINE DDINTV(NG,NR,IJKLG,FIJKL,XYZ,
     1 FIXYZ,FJXYZ,FKXYZ,FLXYZ,SIIXYZ,SJJXYZ,SKKXYZ,SLLXYZ,
     2 SIJXYZ,SIKXYZ,SILXYZ,SJKXYZ,SJLXYZ,SKLXYZ,
     3 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL IS,JS,KS,LS
      LOGICAL IJS,IJKS,IJKLS
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSHL/ FD(12),SD(78)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      DIMENSION FIJKL(12,1),IJKLG(4,1)
      DIMENSION DAB(1)
      DIMENSION    XYZ(NG*NR,1)
      DIMENSION  FIXYZ(NG*NR,1), FJXYZ(NG*NR,1)
      DIMENSION  FKXYZ(NG*NR,1), FLXYZ(NG*NR,1)
      DIMENSION SIIXYZ(NG*NR,1),SJJXYZ(NG*NR,1)
      DIMENSION SKKXYZ(NG*NR,1),SLLXYZ(NG*NR,1)
      DIMENSION SIJXYZ(NG*NR,1),SIKXYZ(NG*NR,1)
      DIMENSION SILXYZ(NG*NR,1),SJKXYZ(NG*NR,1)
      DIMENSION SJLXYZ(NG*NR,1),SKLXYZ(NG*NR,1)
      DIMENSION XY(NG*NR),XZ(NG*NR),YZ(NG*NR)
      DIMENSION  X(NG*NR), Y(NG*NR), Z(NG*NR)
      DIMENSION SJ(NG*NR),SK(NG*NR),SL(NG*NR)
      DIMENSION DIJSI(NG*NR),DIJSJ(NG*NR),DKLSK(NG*NR),DKLSL(NG*NR)
      DATA ZERO /0.0D+00/
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IF(SPIJKL) GO TO 1000
C
C     ----- NO SHARED EXPONENTS ; SUM UP ( IX * IY * IZ ) -----
C
      IJKLN=0
      DO 440 I=MINI,MAXI
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 430 J=MINJ,JMAX
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 420 K=MINK,KMAX
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 410 L=MINL,LMAX
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      DO 110 IGR=1,NG*NR
      XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
      XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
  110 YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
C
      IF(SKIPI) GO TO 130
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 120 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SIIXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIIXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIIXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FIXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FIXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FIXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
  120 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      SD( 1)=SD( 1)+DAB(NN)*DUMSXX
      SD( 3)=SD( 3)+DAB(NN)*DUMSYY
      SD( 6)=SD( 6)+DAB(NN)*DUMSZZ
      SD( 2)=SD( 2)+DAB(NN)*DUMSXY
      SD( 4)=SD( 4)+DAB(NN)*DUMSXZ
      SD( 5)=SD( 5)+DAB(NN)*DUMSYZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
  130 IF(SKIPJ) GO TO 150
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 140 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SJJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FJXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FJXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FJXYZ(IGR,NZ)*XYZ(IGR,NX)
  140 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      SD(10)=SD(10)+DAB(NN)*DUMSXX
      SD(15)=SD(15)+DAB(NN)*DUMSYY
      SD(21)=SD(21)+DAB(NN)*DUMSZZ
      SD(14)=SD(14)+DAB(NN)*DUMSXY
      SD(19)=SD(19)+DAB(NN)*DUMSXZ
      SD(20)=SD(20)+DAB(NN)*DUMSYZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
  150 IF(SKIPK) GO TO 170
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 160 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SKKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FKXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FKXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FKXYZ(IGR,NZ)*XYZ(IGR,NX)
  160 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      SD(28)=SD(28)+DAB(NN)*DUMSXX
      SD(36)=SD(36)+DAB(NN)*DUMSYY
      SD(45)=SD(45)+DAB(NN)*DUMSZZ
      SD(35)=SD(35)+DAB(NN)*DUMSXY
      SD(43)=SD(43)+DAB(NN)*DUMSXZ
      SD(44)=SD(44)+DAB(NN)*DUMSYZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
  170 IF(SKIPL) GO TO 190
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 180 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SLLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SLLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SLLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FLXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FLXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FLXYZ(IGR,NZ)*XYZ(IGR,NX)
  180 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      SD(55)=SD(55)+DAB(NN)*DUMSXX
      SD(66)=SD(66)+DAB(NN)*DUMSYY
      SD(78)=SD(78)+DAB(NN)*DUMSZZ
      SD(65)=SD(65)+DAB(NN)*DUMSXY
      SD(76)=SD(76)+DAB(NN)*DUMSXZ
      SD(77)=SD(77)+DAB(NN)*DUMSYZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
  190 IF(SKIPI) GO TO 250
      IF(SKIPJ) GO TO 210
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 200 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FJXYZ(IGR,NY)*FIXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NY)*XYZ(IGR,NX)
  200 CONTINUE
      SD( 7)=SD( 7)+DAB(NN)*DUMSXX
      SD( 8)=SD( 8)+DAB(NN)*DUMSXY
      SD( 9)=SD( 9)+DAB(NN)*DUMSXZ
      SD(11)=SD(11)+DAB(NN)*DUMSYX
      SD(12)=SD(12)+DAB(NN)*DUMSYY
      SD(13)=SD(13)+DAB(NN)*DUMSYZ
      SD(16)=SD(16)+DAB(NN)*DUMSZX
      SD(17)=SD(17)+DAB(NN)*DUMSZY
      SD(18)=SD(18)+DAB(NN)*DUMSZZ
  210 IF(SKIPK) GO TO 230
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 220 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FIXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NY)*XYZ(IGR,NX)
  220 CONTINUE
      SD(22)=SD(22)+DAB(NN)*DUMSXX
      SD(23)=SD(23)+DAB(NN)*DUMSXY
      SD(24)=SD(24)+DAB(NN)*DUMSXZ
      SD(29)=SD(29)+DAB(NN)*DUMSYX
      SD(30)=SD(30)+DAB(NN)*DUMSYY
      SD(31)=SD(31)+DAB(NN)*DUMSYZ
      SD(37)=SD(37)+DAB(NN)*DUMSZX
      SD(38)=SD(38)+DAB(NN)*DUMSZY
      SD(39)=SD(39)+DAB(NN)*DUMSZZ
  230 IF(SKIPL) GO TO 250
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 240 IGR=1,NG*NR
      DUMSXX=DUMSXX+SILXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SILXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SILXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FIXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NY)*XYZ(IGR,NX)
  240 CONTINUE
      SD(46)=SD(46)+DAB(NN)*DUMSXX
      SD(47)=SD(47)+DAB(NN)*DUMSXY
      SD(48)=SD(48)+DAB(NN)*DUMSXZ
      SD(56)=SD(56)+DAB(NN)*DUMSYX
      SD(57)=SD(57)+DAB(NN)*DUMSYY
      SD(58)=SD(58)+DAB(NN)*DUMSYZ
      SD(67)=SD(67)+DAB(NN)*DUMSZX
      SD(68)=SD(68)+DAB(NN)*DUMSZY
      SD(69)=SD(69)+DAB(NN)*DUMSZZ
  250 IF(SKIPJ) GO TO 290
      IF(SKIPK) GO TO 270
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 260 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FJXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FJXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FJXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FJXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NY)*XYZ(IGR,NX)
  260 CONTINUE
      SD(25)=SD(25)+DAB(NN)*DUMSXX
      SD(26)=SD(26)+DAB(NN)*DUMSXY
      SD(27)=SD(27)+DAB(NN)*DUMSXZ
      SD(32)=SD(32)+DAB(NN)*DUMSYX
      SD(33)=SD(33)+DAB(NN)*DUMSYY
      SD(34)=SD(34)+DAB(NN)*DUMSYZ
      SD(40)=SD(40)+DAB(NN)*DUMSZX
      SD(41)=SD(41)+DAB(NN)*DUMSZY
      SD(42)=SD(42)+DAB(NN)*DUMSZZ
  270 IF(SKIPL) GO TO 290
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 280 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FJXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FJXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FJXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FJXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NY)*XYZ(IGR,NX)
  280 CONTINUE
      SD(49)=SD(49)+DAB(NN)*DUMSXX
      SD(50)=SD(50)+DAB(NN)*DUMSXY
      SD(51)=SD(51)+DAB(NN)*DUMSXZ
      SD(59)=SD(59)+DAB(NN)*DUMSYX
      SD(60)=SD(60)+DAB(NN)*DUMSYY
      SD(61)=SD(61)+DAB(NN)*DUMSYZ
      SD(70)=SD(70)+DAB(NN)*DUMSZX
      SD(71)=SD(71)+DAB(NN)*DUMSZY
      SD(72)=SD(72)+DAB(NN)*DUMSZZ
  290 IF(SKIPK) GO TO 400
      IF(SKIPL) GO TO 400
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 300 IGR=1,NG*NR
      DUMSXX=DUMSXX+SKLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FKXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FKXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FKXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FKXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NY)*XYZ(IGR,NX)
  300 CONTINUE
      SD(52)=SD(52)+DAB(NN)*DUMSXX
      SD(53)=SD(53)+DAB(NN)*DUMSXY
      SD(54)=SD(54)+DAB(NN)*DUMSXZ
      SD(62)=SD(62)+DAB(NN)*DUMSYX
      SD(63)=SD(63)+DAB(NN)*DUMSYY
      SD(64)=SD(64)+DAB(NN)*DUMSYZ
      SD(73)=SD(73)+DAB(NN)*DUMSZX
      SD(74)=SD(74)+DAB(NN)*DUMSZY
      SD(75)=SD(75)+DAB(NN)*DUMSZZ
C
  400 CONTINUE
C
  410 CONTINUE
  420 CONTINUE
  430 CONTINUE
  440 CONTINUE
C
      RETURN
C
C     ----- SHARED EXPONENTS ; FORM ( IX * IY * IZ ) -----
C
 1000 CONTINUE
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IJKLN=0
      DO 1840 I=MINI,MAXI
      IS=SPI.AND.I.EQ.1
C
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 1830 J=MINJ,JMAX
      JS=SPJ.AND.J.EQ.1
C
      IF(JS) THEN
         IF(IS) THEN
            DO 1110 IGR=1,NG*NR
 1110       SJ(IGR)=DIJSJ(IGR)*DIJSI(IGR)
         ELSE
            DO 1120 IGR=1,NG*NR
 1120       SJ(IGR)=DIJSJ(IGR)
         ENDIF
      ELSE
         IF(IS) THEN
            DO 1130 IGR=1,NG*NR
 1130       SJ(IGR)=DIJSI(IGR)
         ENDIF
      ENDIF
      IJS=IS.OR.JS
C
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 1820 K=MINK,KMAX
      KS=SPK.AND.K.EQ.1
C
      IF(KS) THEN
         IF(IJS) THEN
            DO 1210 IGR=1,NG*NR
 1210       SK(IGR)=DKLSK(IGR)*SJ(IGR)
         ELSE
            DO 1220 IGR=1,NG*NR
 1220       SK(IGR)=DKLSK(IGR)
         ENDIF
      ELSE
         IF(IJS) THEN
            DO 1230 IGR=1,NG*NR
 1230       SK(IGR)=SJ(IGR)
         ENDIF
      ENDIF
      IJKS=IJS.OR.KS
C
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 1810 L=MINL,LMAX
      LS=SPL.AND.L.EQ.1
C
      IF(LS) THEN
         IF(IJKS) THEN
            DO 1310 IGR=1,NG*NR
 1310       SL(IGR)=DKLSL(IGR)*SK(IGR)
         ELSE
            DO 1320 IGR=1,NG*NR
 1320       SL(IGR)=DKLSL(IGR)
         ENDIF
      ELSE
         IF(IJKS) THEN
            DO 1330 IGR=1,NG*NR
 1330       SL(IGR)=SK(IGR)
         ENDIF
      ENDIF
      IJKLS=IJKS.OR.LS
C
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      IF(IJKLS) THEN
         DO 1500 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)*SL(IGR)
          Y(IGR)=XYZ(IGR,NY)*SL(IGR)
          Z(IGR)=XYZ(IGR,NZ)*SL(IGR)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)*SL(IGR)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)*SL(IGR)
 1500    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)*SL(IGR)
      ELSE
         DO 1510 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)
          Y(IGR)=XYZ(IGR,NY)
          Z(IGR)=XYZ(IGR,NZ)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
 1510    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
      ENDIF
C
      IF(SKIPI) GO TO 1530
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1520 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SIIXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIIXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIIXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FIXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FIXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FIXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
 1520 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      SD( 1)=SD( 1)+DAB(NN)*DUMSXX
      SD( 3)=SD( 3)+DAB(NN)*DUMSYY
      SD( 6)=SD( 6)+DAB(NN)*DUMSZZ
      SD( 2)=SD( 2)+DAB(NN)*DUMSXY
      SD( 4)=SD( 4)+DAB(NN)*DUMSXZ
      SD( 5)=SD( 5)+DAB(NN)*DUMSYZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
 1530 IF(SKIPJ) GO TO 1550
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1540 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SJJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FJXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FJXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FJXYZ(IGR,NZ)*X(IGR)
 1540 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      SD(10)=SD(10)+DAB(NN)*DUMSXX
      SD(15)=SD(15)+DAB(NN)*DUMSYY
      SD(21)=SD(21)+DAB(NN)*DUMSZZ
      SD(14)=SD(14)+DAB(NN)*DUMSXY
      SD(19)=SD(19)+DAB(NN)*DUMSXZ
      SD(20)=SD(20)+DAB(NN)*DUMSYZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
 1550 IF(SKIPK) GO TO 1570
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1560 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SKKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FKXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FKXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FKXYZ(IGR,NZ)*X(IGR)
 1560 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      SD(28)=SD(28)+DAB(NN)*DUMSXX
      SD(36)=SD(36)+DAB(NN)*DUMSYY
      SD(45)=SD(45)+DAB(NN)*DUMSZZ
      SD(35)=SD(35)+DAB(NN)*DUMSXY
      SD(43)=SD(43)+DAB(NN)*DUMSXZ
      SD(44)=SD(44)+DAB(NN)*DUMSYZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
 1570 IF(SKIPL) GO TO 1590
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1580 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SLLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SLLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SLLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FLXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FLXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FLXYZ(IGR,NZ)*X(IGR)
 1580 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      SD(55)=SD(55)+DAB(NN)*DUMSXX
      SD(66)=SD(66)+DAB(NN)*DUMSYY
      SD(78)=SD(78)+DAB(NN)*DUMSZZ
      SD(65)=SD(65)+DAB(NN)*DUMSXY
      SD(76)=SD(76)+DAB(NN)*DUMSXZ
      SD(77)=SD(77)+DAB(NN)*DUMSYZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
 1590 IF(SKIPI) GO TO 1650
      IF(SKIPJ) GO TO 1610
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1600 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FJXYZ(IGR,NY)*FIXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NY)*X(IGR)
 1600 CONTINUE
      SD( 7)=SD( 7)+DAB(NN)*DUMSXX
      SD( 8)=SD( 8)+DAB(NN)*DUMSXY
      SD( 9)=SD( 9)+DAB(NN)*DUMSXZ
      SD(11)=SD(11)+DAB(NN)*DUMSYX
      SD(12)=SD(12)+DAB(NN)*DUMSYY
      SD(13)=SD(13)+DAB(NN)*DUMSYZ
      SD(16)=SD(16)+DAB(NN)*DUMSZX
      SD(17)=SD(17)+DAB(NN)*DUMSZY
      SD(18)=SD(18)+DAB(NN)*DUMSZZ
 1610 IF(SKIPK) GO TO 1630
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1620 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FIXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NY)*X(IGR)
 1620 CONTINUE
      SD(22)=SD(22)+DAB(NN)*DUMSXX
      SD(23)=SD(23)+DAB(NN)*DUMSXY
      SD(24)=SD(24)+DAB(NN)*DUMSXZ
      SD(29)=SD(29)+DAB(NN)*DUMSYX
      SD(30)=SD(30)+DAB(NN)*DUMSYY
      SD(31)=SD(31)+DAB(NN)*DUMSYZ
      SD(37)=SD(37)+DAB(NN)*DUMSZX
      SD(38)=SD(38)+DAB(NN)*DUMSZY
      SD(39)=SD(39)+DAB(NN)*DUMSZZ
 1630 IF(SKIPL) GO TO 1650
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1640 IGR=1,NG*NR
      DUMSXX=DUMSXX+SILXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SILXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SILXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FIXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NY)*X(IGR)
 1640 CONTINUE
      SD(46)=SD(46)+DAB(NN)*DUMSXX
      SD(47)=SD(47)+DAB(NN)*DUMSXY
      SD(48)=SD(48)+DAB(NN)*DUMSXZ
      SD(56)=SD(56)+DAB(NN)*DUMSYX
      SD(57)=SD(57)+DAB(NN)*DUMSYY
      SD(58)=SD(58)+DAB(NN)*DUMSYZ
      SD(67)=SD(67)+DAB(NN)*DUMSZX
      SD(68)=SD(68)+DAB(NN)*DUMSZY
      SD(69)=SD(69)+DAB(NN)*DUMSZZ
 1650 IF(SKIPJ) GO TO 1690
      IF(SKIPK) GO TO 1670
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1660 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FJXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FJXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FJXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FJXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NY)*X(IGR)
 1660 CONTINUE
      SD(25)=SD(25)+DAB(NN)*DUMSXX
      SD(26)=SD(26)+DAB(NN)*DUMSXY
      SD(27)=SD(27)+DAB(NN)*DUMSXZ
      SD(32)=SD(32)+DAB(NN)*DUMSYX
      SD(33)=SD(33)+DAB(NN)*DUMSYY
      SD(34)=SD(34)+DAB(NN)*DUMSYZ
      SD(40)=SD(40)+DAB(NN)*DUMSZX
      SD(41)=SD(41)+DAB(NN)*DUMSZY
      SD(42)=SD(42)+DAB(NN)*DUMSZZ
 1670 IF(SKIPL) GO TO 1690
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1680 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FJXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FJXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FJXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FJXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NY)*X(IGR)
 1680 CONTINUE
      SD(49)=SD(49)+DAB(NN)*DUMSXX
      SD(50)=SD(50)+DAB(NN)*DUMSXY
      SD(51)=SD(51)+DAB(NN)*DUMSXZ
      SD(59)=SD(59)+DAB(NN)*DUMSYX
      SD(60)=SD(60)+DAB(NN)*DUMSYY
      SD(61)=SD(61)+DAB(NN)*DUMSYZ
      SD(70)=SD(70)+DAB(NN)*DUMSZX
      SD(71)=SD(71)+DAB(NN)*DUMSZY
      SD(72)=SD(72)+DAB(NN)*DUMSZZ
 1690 IF(SKIPK) GO TO 1800
      IF(SKIPL) GO TO 1800
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1700 IGR=1,NG*NR
      DUMSXX=DUMSXX+SKLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FKXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FKXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FKXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FKXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NY)*X(IGR)
 1700 CONTINUE
      SD(52)=SD(52)+DAB(NN)*DUMSXX
      SD(53)=SD(53)+DAB(NN)*DUMSXY
      SD(54)=SD(54)+DAB(NN)*DUMSXZ
      SD(62)=SD(62)+DAB(NN)*DUMSYX
      SD(63)=SD(63)+DAB(NN)*DUMSYY
      SD(64)=SD(64)+DAB(NN)*DUMSYZ
      SD(73)=SD(73)+DAB(NN)*DUMSZX
      SD(74)=SD(74)+DAB(NN)*DUMSZY
      SD(75)=SD(75)+DAB(NN)*DUMSZZ
C
 1800 CONTINUE
C
 1810 CONTINUE
 1820 CONTINUE
 1830 CONTINUE
 1840 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DDINTS
C>     @brief   Fock derivative matrix for CPHF
C>
C>     @details construct integral elememnts for S 
C>
C>    @author Yuji Imahuku
C>
C>  --INPUT--
C>  @param  NG    number of G
C>  @param  NR    number of integral
C>  @param  IJKLG number of indices
C>  @param  XYZ   derivative elements
C>  @param  FIXYZ derivative elements
C>  @param  FJXYZ derivative elements 
C>  @param  FKXYZ derivative elements
C>  @param  FLXYZ derivative elements
C>  @param  XY    second derivative elements
C>  @param  XZ    second derivative elements
C>  @param  YZ    second derivative elements
C>  @param  X     derivative elements
C>  @param  Y     derivative elements
C>  @param  Z     derivative elements
C>  @param  SJ    derivative elements
C>  @param  SK    derivative elements
C>  @param  SL    derivative elements
C>  @param  DIJSI derivative elements 
C>  @param  DIJSJ derivative elements
C>  @param  DKLSK derivative elements
C>  @param  DKLSL derivative elements
C>  @param  DAB   Density matrix
C>  --OUTPUT--
C>  @param  FIJKL Fock integral
      SUBROUTINE DDINTS(NG,NR,IJKLG,FIJKL,XYZ,
     1 FIXYZ,FJXYZ,FKXYZ,FLXYZ,SIIXYZ,SJJXYZ,SKKXYZ,SLLXYZ,
     2 SIJXYZ,SIKXYZ,SILXYZ,SJKXYZ,SJLXYZ,SKLXYZ,
     3 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL IS,JS,KS,LS
      LOGICAL IJS,IJKS,IJKLS
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERSHL/ FD(12),SD(78)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      DIMENSION FIJKL(12,1),IJKLG(4,1)
      DIMENSION DAB(1)
      DIMENSION    XYZ(NG*NR,1)
      DIMENSION  FIXYZ(NG*NR,1), FJXYZ(NG*NR,1)
      DIMENSION  FKXYZ(NG*NR,1), FLXYZ(NG*NR,1)
      DIMENSION SIIXYZ(NG*NR,1),SJJXYZ(NG*NR,1)
      DIMENSION SKKXYZ(NG*NR,1),SLLXYZ(NG*NR,1)
      DIMENSION SIJXYZ(NG*NR,1),SIKXYZ(NG*NR,1)
      DIMENSION SILXYZ(NG*NR,1),SJKXYZ(NG*NR,1)
      DIMENSION SJLXYZ(NG*NR,1),SKLXYZ(NG*NR,1)
      DIMENSION XY(NG*NR),XZ(NG*NR),YZ(NG*NR)
      DIMENSION  X(NG*NR), Y(NG*NR), Z(NG*NR)
      DIMENSION SJ(NG*NR),SK(NG*NR),SL(NG*NR)
      DIMENSION DIJSI(NG*NR),DIJSJ(NG*NR),DKLSK(NG*NR),DKLSL(NG*NR)
      DATA ZERO /0.0D+00/
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IF(SPIJKL) GO TO 1000
C
C     ----- NO SHARED EXPONENTS ; SUM UP ( IX * IY * IZ ) -----
C
      IJKLN=0
      DO 440 I=MINI,MAXI
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 430 J=MINJ,JMAX
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 420 K=MINK,KMAX
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 410 L=MINL,LMAX
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      DO 110 IGR=1,NG*NR
      XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
      XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
  110 YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
C
      IF(SKIPI) GO TO 130
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 120 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SIIXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIIXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIIXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FIXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FIXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FIXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
  120 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      SD( 1)=SD( 1)+DAB(NN)*DUMSXX
      SD( 3)=SD( 3)+DAB(NN)*DUMSYY
      SD( 6)=SD( 6)+DAB(NN)*DUMSZZ
      SD( 2)=SD( 2)+DAB(NN)*DUMSXY
      SD( 4)=SD( 4)+DAB(NN)*DUMSXZ
      SD( 5)=SD( 5)+DAB(NN)*DUMSYZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
  130 IF(SKIPJ) GO TO 150
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 140 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SJJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FJXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FJXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FJXYZ(IGR,NZ)*XYZ(IGR,NX)
  140 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      SD(10)=SD(10)+DAB(NN)*DUMSXX
      SD(15)=SD(15)+DAB(NN)*DUMSYY
      SD(21)=SD(21)+DAB(NN)*DUMSZZ
      SD(14)=SD(14)+DAB(NN)*DUMSXY
      SD(19)=SD(19)+DAB(NN)*DUMSXZ
      SD(20)=SD(20)+DAB(NN)*DUMSYZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
  150 IF(SKIPK) GO TO 170
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 160 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SKKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FKXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FKXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FKXYZ(IGR,NZ)*XYZ(IGR,NX)
  160 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      SD(28)=SD(28)+DAB(NN)*DUMSXX
      SD(36)=SD(36)+DAB(NN)*DUMSYY
      SD(45)=SD(45)+DAB(NN)*DUMSZZ
      SD(35)=SD(35)+DAB(NN)*DUMSXY
      SD(43)=SD(43)+DAB(NN)*DUMSXZ
      SD(44)=SD(44)+DAB(NN)*DUMSYZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
  170 IF(SKIPL) GO TO 190
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 180 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SLLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SLLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SLLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FLXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FLXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FLXYZ(IGR,NZ)*XYZ(IGR,NX)
  180 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      SD(55)=SD(55)+DAB(NN)*DUMSXX
      SD(66)=SD(66)+DAB(NN)*DUMSYY
      SD(78)=SD(78)+DAB(NN)*DUMSZZ
      SD(65)=SD(65)+DAB(NN)*DUMSXY
      SD(76)=SD(76)+DAB(NN)*DUMSXZ
      SD(77)=SD(77)+DAB(NN)*DUMSYZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
  190 IF(SKIPI) GO TO 250
      IF(SKIPJ) GO TO 210
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 200 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FJXYZ(IGR,NY)*FIXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NY)*XYZ(IGR,NX)
  200 CONTINUE
      SD( 7)=SD( 7)+DAB(NN)*DUMSXX
      SD( 8)=SD( 8)+DAB(NN)*DUMSXY
      SD( 9)=SD( 9)+DAB(NN)*DUMSXZ
      SD(11)=SD(11)+DAB(NN)*DUMSYX
      SD(12)=SD(12)+DAB(NN)*DUMSYY
      SD(13)=SD(13)+DAB(NN)*DUMSYZ
      SD(16)=SD(16)+DAB(NN)*DUMSZX
      SD(17)=SD(17)+DAB(NN)*DUMSZY
      SD(18)=SD(18)+DAB(NN)*DUMSZZ
  210 IF(SKIPK) GO TO 230
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 220 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FIXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NY)*XYZ(IGR,NX)
  220 CONTINUE
      SD(22)=SD(22)+DAB(NN)*DUMSXX
      SD(23)=SD(23)+DAB(NN)*DUMSXY
      SD(24)=SD(24)+DAB(NN)*DUMSXZ
      SD(29)=SD(29)+DAB(NN)*DUMSYX
      SD(30)=SD(30)+DAB(NN)*DUMSYY
      SD(31)=SD(31)+DAB(NN)*DUMSYZ
      SD(37)=SD(37)+DAB(NN)*DUMSZX
      SD(38)=SD(38)+DAB(NN)*DUMSZY
      SD(39)=SD(39)+DAB(NN)*DUMSZZ
  230 IF(SKIPL) GO TO 250
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 240 IGR=1,NG*NR
      DUMSXX=DUMSXX+SILXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SILXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SILXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FIXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FIXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FIXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FIXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NY)*XYZ(IGR,NX)
  240 CONTINUE
      SD(46)=SD(46)+DAB(NN)*DUMSXX
      SD(47)=SD(47)+DAB(NN)*DUMSXY
      SD(48)=SD(48)+DAB(NN)*DUMSXZ
      SD(56)=SD(56)+DAB(NN)*DUMSYX
      SD(57)=SD(57)+DAB(NN)*DUMSYY
      SD(58)=SD(58)+DAB(NN)*DUMSYZ
      SD(67)=SD(67)+DAB(NN)*DUMSZX
      SD(68)=SD(68)+DAB(NN)*DUMSZY
      SD(69)=SD(69)+DAB(NN)*DUMSZZ
  250 IF(SKIPJ) GO TO 290
      IF(SKIPK) GO TO 270
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 260 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FJXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FJXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FJXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FJXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NY)*XYZ(IGR,NX)
  260 CONTINUE
      SD(25)=SD(25)+DAB(NN)*DUMSXX
      SD(26)=SD(26)+DAB(NN)*DUMSXY
      SD(27)=SD(27)+DAB(NN)*DUMSXZ
      SD(32)=SD(32)+DAB(NN)*DUMSYX
      SD(33)=SD(33)+DAB(NN)*DUMSYY
      SD(34)=SD(34)+DAB(NN)*DUMSYZ
      SD(40)=SD(40)+DAB(NN)*DUMSZX
      SD(41)=SD(41)+DAB(NN)*DUMSZY
      SD(42)=SD(42)+DAB(NN)*DUMSZZ
  270 IF(SKIPL) GO TO 290
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 280 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FJXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FJXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FJXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FJXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NY)*XYZ(IGR,NX)
  280 CONTINUE
      SD(49)=SD(49)+DAB(NN)*DUMSXX
      SD(50)=SD(50)+DAB(NN)*DUMSXY
      SD(51)=SD(51)+DAB(NN)*DUMSXZ
      SD(59)=SD(59)+DAB(NN)*DUMSYX
      SD(60)=SD(60)+DAB(NN)*DUMSYY
      SD(61)=SD(61)+DAB(NN)*DUMSYZ
      SD(70)=SD(70)+DAB(NN)*DUMSZX
      SD(71)=SD(71)+DAB(NN)*DUMSZY
      SD(72)=SD(72)+DAB(NN)*DUMSZZ
  290 IF(SKIPK) GO TO 400
      IF(SKIPL) GO TO 400
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 300 IGR=1,NG*NR
      DUMSXX=DUMSXX+SKLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FKXYZ(IGR,NY)*XYZ(IGR,NZ)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FKXYZ(IGR,NZ)*XYZ(IGR,NY)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FKXYZ(IGR,NX)*XYZ(IGR,NZ)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FKXYZ(IGR,NZ)*XYZ(IGR,NX)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NX)*XYZ(IGR,NY)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NY)*XYZ(IGR,NX)
  300 CONTINUE
      SD(52)=SD(52)+DAB(NN)*DUMSXX
      SD(53)=SD(53)+DAB(NN)*DUMSXY
      SD(54)=SD(54)+DAB(NN)*DUMSXZ
      SD(62)=SD(62)+DAB(NN)*DUMSYX
      SD(63)=SD(63)+DAB(NN)*DUMSYY
      SD(64)=SD(64)+DAB(NN)*DUMSYZ
      SD(73)=SD(73)+DAB(NN)*DUMSZX
      SD(74)=SD(74)+DAB(NN)*DUMSZY
      SD(75)=SD(75)+DAB(NN)*DUMSZZ
  400 CONTINUE
  410 CONTINUE
  420 CONTINUE
  430 CONTINUE
  440 CONTINUE
C
      RETURN
C
C     ----- SHARED EXPONENTS ; FORM ( IX * IY * IZ ) -----
C
 1000 CONTINUE
C
C     ----- FIRST DERIVATIVE INTEGRALS + GRADIENT + HESSIAN -----
C
      IJKLN=0
      DO 1840 I=MINI,MAXI
      IS=SPI.AND.I.EQ.1
C
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 1830 J=MINJ,JMAX
      JS=SPJ.AND.J.EQ.1
C
      IF(JS) THEN
         IF(IS) THEN
            DO 1110 IGR=1,NG*NR
 1110       SJ(IGR)=DIJSJ(IGR)*DIJSI(IGR)
         ELSE
            DO 1120 IGR=1,NG*NR
 1120       SJ(IGR)=DIJSJ(IGR)
         ENDIF
      ELSE
         IF(IS) THEN
            DO 1130 IGR=1,NG*NR
 1130       SJ(IGR)=DIJSI(IGR)
         ENDIF
      ENDIF
      IJS=IS.OR.JS
C
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 1820 K=MINK,KMAX
      KS=SPK.AND.K.EQ.1
C
      IF(KS) THEN
         IF(IJS) THEN
            DO 1210 IGR=1,NG*NR
 1210       SK(IGR)=DKLSK(IGR)*SJ(IGR)
         ELSE
            DO 1220 IGR=1,NG*NR
 1220       SK(IGR)=DKLSK(IGR)
         ENDIF
      ELSE
         IF(IJS) THEN
            DO 1230 IGR=1,NG*NR
 1230       SK(IGR)=SJ(IGR)
         ENDIF
      ENDIF
      IJKS=IJS.OR.KS
C
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 1810 L=MINL,LMAX
      LS=SPL.AND.L.EQ.1
C
      IF(LS) THEN
         IF(IJKS) THEN
            DO 1310 IGR=1,NG*NR
 1310       SL(IGR)=DKLSL(IGR)*SK(IGR)
         ELSE
            DO 1320 IGR=1,NG*NR
 1320       SL(IGR)=DKLSL(IGR)
         ENDIF
      ELSE
         IF(IJKS) THEN
            DO 1330 IGR=1,NG*NR
 1330       SL(IGR)=SK(IGR)
         ENDIF
      ENDIF
      IJKLS=IJKS.OR.LS
C
      IJKLN=IJKLN+1
      NN=IJKLG(1,IJKLN)
      NX=IJKLG(2,IJKLN)
      NY=IJKLG(3,IJKLN)
      NZ=IJKLG(4,IJKLN)
C
      IF(IJKLS) THEN
         DO 1500 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)*SL(IGR)
          Y(IGR)=XYZ(IGR,NY)*SL(IGR)
          Z(IGR)=XYZ(IGR,NZ)*SL(IGR)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)*SL(IGR)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)*SL(IGR)
 1500    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)*SL(IGR)
      ELSE
         DO 1510 IGR=1,NG*NR
          X(IGR)=XYZ(IGR,NX)
          Y(IGR)=XYZ(IGR,NY)
          Z(IGR)=XYZ(IGR,NZ)
         XY(IGR)=XYZ(IGR,NX)*XYZ(IGR,NY)
         XZ(IGR)=XYZ(IGR,NX)*XYZ(IGR,NZ)
 1510    YZ(IGR)=XYZ(IGR,NY)*XYZ(IGR,NZ)
      ENDIF
C
      IF(SKIPI) GO TO 1530
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1520 IGR=1,NG*NR
      DUMFX =DUMFX + FIXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FIXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FIXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SIIXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIIXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIIXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FIXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FIXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FIXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
 1520 CONTINUE
      FD( 1)=FD( 1)+DAB(NN)*DUMFX
      FD( 2)=FD( 2)+DAB(NN)*DUMFY
      FD( 3)=FD( 3)+DAB(NN)*DUMFZ
      SD( 1)=SD( 1)+DAB(NN)*DUMSXX
      SD( 3)=SD( 3)+DAB(NN)*DUMSYY
      SD( 6)=SD( 6)+DAB(NN)*DUMSZZ
      SD( 2)=SD( 2)+DAB(NN)*DUMSXY
      SD( 4)=SD( 4)+DAB(NN)*DUMSXZ
      SD( 5)=SD( 5)+DAB(NN)*DUMSYZ
      FIJKL( 1,NN)=FIJKL( 1,NN)+DUMFX
      FIJKL( 2,NN)=FIJKL( 2,NN)+DUMFY
      FIJKL( 3,NN)=FIJKL( 3,NN)+DUMFZ
 1530 IF(SKIPJ) GO TO 1550
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1540 IGR=1,NG*NR
      DUMFX =DUMFX + FJXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FJXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FJXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SJJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FJXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FJXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FJXYZ(IGR,NZ)*X(IGR)
 1540 CONTINUE
      FD( 4)=FD( 4)+DAB(NN)*DUMFX
      FD( 5)=FD( 5)+DAB(NN)*DUMFY
      FD( 6)=FD( 6)+DAB(NN)*DUMFZ
      SD(10)=SD(10)+DAB(NN)*DUMSXX
      SD(15)=SD(15)+DAB(NN)*DUMSYY
      SD(21)=SD(21)+DAB(NN)*DUMSZZ
      SD(14)=SD(14)+DAB(NN)*DUMSXY
      SD(19)=SD(19)+DAB(NN)*DUMSXZ
      SD(20)=SD(20)+DAB(NN)*DUMSYZ
      FIJKL( 4,NN)=FIJKL( 4,NN)+DUMFX
      FIJKL( 5,NN)=FIJKL( 5,NN)+DUMFY
      FIJKL( 6,NN)=FIJKL( 6,NN)+DUMFZ
 1550 IF(SKIPK) GO TO 1570
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1560 IGR=1,NG*NR
      DUMFX =DUMFX + FKXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FKXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FKXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SKKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FKXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FKXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FKXYZ(IGR,NZ)*X(IGR)
 1560 CONTINUE
      FD( 7)=FD( 7)+DAB(NN)*DUMFX
      FD( 8)=FD( 8)+DAB(NN)*DUMFY
      FD( 9)=FD( 9)+DAB(NN)*DUMFZ
      SD(28)=SD(28)+DAB(NN)*DUMSXX
      SD(36)=SD(36)+DAB(NN)*DUMSYY
      SD(45)=SD(45)+DAB(NN)*DUMSZZ
      SD(35)=SD(35)+DAB(NN)*DUMSXY
      SD(43)=SD(43)+DAB(NN)*DUMSXZ
      SD(44)=SD(44)+DAB(NN)*DUMSYZ
      FIJKL( 7,NN)=FIJKL( 7,NN)+DUMFX
      FIJKL( 8,NN)=FIJKL( 8,NN)+DUMFY
      FIJKL( 9,NN)=FIJKL( 9,NN)+DUMFZ
 1570 IF(SKIPL) GO TO 1590
      DUMFX =ZERO
      DUMFY =ZERO
      DUMFZ =ZERO
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYZ=ZERO
      DO 1580 IGR=1,NG*NR
      DUMFX =DUMFX + FLXYZ(IGR,NX)*YZ(IGR)
      DUMFY =DUMFY + FLXYZ(IGR,NY)*XZ(IGR)
      DUMFZ =DUMFZ + FLXYZ(IGR,NZ)*XY(IGR)
      DUMSXX=DUMSXX+SLLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SLLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SLLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FLXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FLXYZ(IGR,NZ)*Y(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FLXYZ(IGR,NZ)*X(IGR)
 1580 CONTINUE
      FD(10)=FD(10)+DAB(NN)*DUMFX
      FD(11)=FD(11)+DAB(NN)*DUMFY
      FD(12)=FD(12)+DAB(NN)*DUMFZ
      SD(55)=SD(55)+DAB(NN)*DUMSXX
      SD(66)=SD(66)+DAB(NN)*DUMSYY
      SD(78)=SD(78)+DAB(NN)*DUMSZZ
      SD(65)=SD(65)+DAB(NN)*DUMSXY
      SD(76)=SD(76)+DAB(NN)*DUMSXZ
      SD(77)=SD(77)+DAB(NN)*DUMSYZ
      FIJKL(10,NN)=FIJKL(10,NN)+DUMFX
      FIJKL(11,NN)=FIJKL(11,NN)+DUMFY
      FIJKL(12,NN)=FIJKL(12,NN)+DUMFZ
 1590 IF(SKIPI) GO TO 1650
      IF(SKIPJ) GO TO 1610
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1600 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIJXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIJXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIJXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FJXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FJXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FJXYZ(IGR,NY)*FIXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FJXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FJXYZ(IGR,NZ)*FIXYZ(IGR,NY)*X(IGR)
 1600 CONTINUE
      SD( 7)=SD( 7)+DAB(NN)*DUMSXX
      SD( 8)=SD( 8)+DAB(NN)*DUMSXY
      SD( 9)=SD( 9)+DAB(NN)*DUMSXZ
      SD(11)=SD(11)+DAB(NN)*DUMSYX
      SD(12)=SD(12)+DAB(NN)*DUMSYY
      SD(13)=SD(13)+DAB(NN)*DUMSYZ
      SD(16)=SD(16)+DAB(NN)*DUMSZX
      SD(17)=SD(17)+DAB(NN)*DUMSZY
      SD(18)=SD(18)+DAB(NN)*DUMSZZ
 1610 IF(SKIPK) GO TO 1630
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1620 IGR=1,NG*NR
      DUMSXX=DUMSXX+SIKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SIKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SIKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FIXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FIXYZ(IGR,NY)*X(IGR)
 1620 CONTINUE
      SD(22)=SD(22)+DAB(NN)*DUMSXX
      SD(23)=SD(23)+DAB(NN)*DUMSXY
      SD(24)=SD(24)+DAB(NN)*DUMSXZ
      SD(29)=SD(29)+DAB(NN)*DUMSYX
      SD(30)=SD(30)+DAB(NN)*DUMSYY
      SD(31)=SD(31)+DAB(NN)*DUMSYZ
      SD(37)=SD(37)+DAB(NN)*DUMSZX
      SD(38)=SD(38)+DAB(NN)*DUMSZY
      SD(39)=SD(39)+DAB(NN)*DUMSZZ
 1630 IF(SKIPL) GO TO 1650
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1640 IGR=1,NG*NR
      DUMSXX=DUMSXX+SILXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SILXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SILXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FIXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FIXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FIXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FIXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FIXYZ(IGR,NY)*X(IGR)
 1640 CONTINUE
      SD(46)=SD(46)+DAB(NN)*DUMSXX
      SD(47)=SD(47)+DAB(NN)*DUMSXY
      SD(48)=SD(48)+DAB(NN)*DUMSXZ
      SD(56)=SD(56)+DAB(NN)*DUMSYX
      SD(57)=SD(57)+DAB(NN)*DUMSYY
      SD(58)=SD(58)+DAB(NN)*DUMSYZ
      SD(67)=SD(67)+DAB(NN)*DUMSZX
      SD(68)=SD(68)+DAB(NN)*DUMSZY
      SD(69)=SD(69)+DAB(NN)*DUMSZZ
 1650 IF(SKIPJ) GO TO 1690
      IF(SKIPK) GO TO 1670
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1660 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJKXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJKXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJKXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FKXYZ(IGR,NX)*FJXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FKXYZ(IGR,NX)*FJXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FKXYZ(IGR,NY)*FJXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FKXYZ(IGR,NY)*FJXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FKXYZ(IGR,NZ)*FJXYZ(IGR,NY)*X(IGR)
 1660 CONTINUE
      SD(25)=SD(25)+DAB(NN)*DUMSXX
      SD(26)=SD(26)+DAB(NN)*DUMSXY
      SD(27)=SD(27)+DAB(NN)*DUMSXZ
      SD(32)=SD(32)+DAB(NN)*DUMSYX
      SD(33)=SD(33)+DAB(NN)*DUMSYY
      SD(34)=SD(34)+DAB(NN)*DUMSYZ
      SD(40)=SD(40)+DAB(NN)*DUMSZX
      SD(41)=SD(41)+DAB(NN)*DUMSZY
      SD(42)=SD(42)+DAB(NN)*DUMSZZ
 1670 IF(SKIPL) GO TO 1690
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1680 IGR=1,NG*NR
      DUMSXX=DUMSXX+SJLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SJLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SJLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FJXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FJXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FJXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FJXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FJXYZ(IGR,NY)*X(IGR)
 1680 CONTINUE
      SD(49)=SD(49)+DAB(NN)*DUMSXX
      SD(50)=SD(50)+DAB(NN)*DUMSXY
      SD(51)=SD(51)+DAB(NN)*DUMSXZ
      SD(59)=SD(59)+DAB(NN)*DUMSYX
      SD(60)=SD(60)+DAB(NN)*DUMSYY
      SD(61)=SD(61)+DAB(NN)*DUMSYZ
      SD(70)=SD(70)+DAB(NN)*DUMSZX
      SD(71)=SD(71)+DAB(NN)*DUMSZY
      SD(72)=SD(72)+DAB(NN)*DUMSZZ
 1690 IF(SKIPK) GO TO 1800
      IF(SKIPL) GO TO 1800
      DUMSXX=ZERO
      DUMSYY=ZERO
      DUMSZZ=ZERO
      DUMSXY=ZERO
      DUMSXZ=ZERO
      DUMSYX=ZERO
      DUMSYZ=ZERO
      DUMSZX=ZERO
      DUMSZY=ZERO
      DO 1700 IGR=1,NG*NR
      DUMSXX=DUMSXX+SKLXYZ(IGR,NX)*YZ(IGR)
      DUMSYY=DUMSYY+SKLXYZ(IGR,NY)*XZ(IGR)
      DUMSZZ=DUMSZZ+SKLXYZ(IGR,NZ)*XY(IGR)
      DUMSXY=DUMSXY+ FLXYZ(IGR,NX)*FKXYZ(IGR,NY)*Z(IGR)
      DUMSXZ=DUMSXZ+ FLXYZ(IGR,NX)*FKXYZ(IGR,NZ)*Y(IGR)
      DUMSYX=DUMSYX+ FLXYZ(IGR,NY)*FKXYZ(IGR,NX)*Z(IGR)
      DUMSYZ=DUMSYZ+ FLXYZ(IGR,NY)*FKXYZ(IGR,NZ)*X(IGR)
      DUMSZX=DUMSZX+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NX)*Y(IGR)
      DUMSZY=DUMSZY+ FLXYZ(IGR,NZ)*FKXYZ(IGR,NY)*X(IGR)
 1700 CONTINUE
      SD(52)=SD(52)+DAB(NN)*DUMSXX
      SD(53)=SD(53)+DAB(NN)*DUMSXY
      SD(54)=SD(54)+DAB(NN)*DUMSXZ
      SD(62)=SD(62)+DAB(NN)*DUMSYX
      SD(63)=SD(63)+DAB(NN)*DUMSYY
      SD(64)=SD(64)+DAB(NN)*DUMSYZ
      SD(73)=SD(73)+DAB(NN)*DUMSZX
      SD(74)=SD(74)+DAB(NN)*DUMSZY
      SD(75)=SD(75)+DAB(NN)*DUMSZZ
 1800 CONTINUE
 1810 CONTINUE
 1820 CONTINUE
 1830 CONTINUE
 1840 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK JDINV
C>     @brief   driver for 2-electron hess
C>
C>     @details integrate fock derivative elements for IJ and K fragment
C>
C>    @author Yuji Imahuku
C>
C>    --- INPUT ---
C> @param    FIJKL   derivative elemnts
C> @param    IJKLG   indice for integral
C> @param    NC      number of atomic indice
C> @param    DFC     fock matrix
C> @param    L2      numebr of trianguler matrix
C> @param    L1      Number of atomic orbital
C> @param    DDA     Density matrix fro alpha
C> @param    DDB     Density matrix for beta
C> @param    DDC     Density matrix for open-shell 
C> @param    DSHL    D shell 
C> @param    SHLJ    shell  for j
C> @param    SHLk    shell  for K
C> @param    V       V integral
C> @param    GD      gradient integral
C> @param    DLAG    Density contribution
C> @param    TBDM    shell contribution
C>
C>    --- OUTPUT ---
C> @param    DE      gradient
C> @param    FC      force constant
      SUBROUTINE JDINV(FIJKL,IJKLG,DE,NC,DF,DFV,L1,L2,  
     *                 DDA,DDB,DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXATM=2000, MXAO=8192)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL OUT,DBG
      COMMON /DERINV/ INVTYP
      COMMON /DERSHL/ FD(3,4),SD(78)
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MCPAR / NFZC,NMCCOR,NCI,NOCC,NORBX,NUM1
      COMMON /MCACT / MAXSHL,NNACT,MIJKL
      COMMON /NUMSHL/ NUMI,NUMJ,NUMK,NUML,IJ,KL,IJKL
      DIMENSION FIJKL(3,4,1),IJKLG(4,1)
      DIMENSION DE(3,NAT),DF(L2,1)
      DIMENSION DDA(1),DDB(1),DDC(1)
      DIMENSION DSHL(L2,NHAM),SHLJ(L2,NHAM,NC),SHLK(L2,NHAM,NC),V(1)
      DIMENSION GD(MIJKL,1),DLAG(NUM,NUM,1)
      DIMENSION TBDM(MAXSHL*MAXSHL,NCI*MAXSHL,4)
      DIMENSION KAT(4)        
C      EQUIVALENCE (KAT(1),IIAT)
      KAT(1)=IIAT
      KAT(2)=JJAT
      KAT(3)=KKAT
      KAT(4)=LLAT
C
C     ----- TRANSLATIONAL INVARIANCE FOR GRADIENT   ELEMENTS  -----
C     ----- TRANSLATIONAL INVARIANCE FOR DERIVATIVE INTEGRALS -----
C
      DO 3020 IC=1,12
      DO 3020 JC=1,IC
 3020 CONTINUE
C
      GO TO (5000,3200,3300,3400,3400,3600,3700,3800,
     1       3900,3900,4100,4200,4300,4400,4500,5000),INVTYP
C
 3200 CONTINUE
      DO 3210 IXYZ=1,3
 3210 FD(IXYZ,1)=- FD(IXYZ,4)
      DO 3220 I=1,IJKL
      N=IJKLG(1,I)
      DO 3220 IXYZ=1,3
 3220 FIJKL(IXYZ,1,N)=- FIJKL(IXYZ,4,N)
      GO TO 5000
C
 3300 CONTINUE
      DO 3310 IXYZ=1,3
 3310 FD(IXYZ,1)=- FD(IXYZ,3)
      DO 3320 I=1,IJKL
      N=IJKLG(1,I)
      DO 3320 IXYZ=1,3
 3320 FIJKL(IXYZ,1,N)=- FIJKL(IXYZ,3,N)
      GO TO 5000
C
 3400 CONTINUE
      DO 3410 IXYZ=1,3
 3410 FD(IXYZ,1)=-(FD(IXYZ,3)+FD(IXYZ,4))
      DO 3420 I=1,IJKL
      N=IJKLG(1,I)
      DO 3420 IXYZ=1,3
 3420 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,3,N)+FIJKL(IXYZ,4,N))
      GO TO 5000
C
 3600 CONTINUE
      DO 3610 IXYZ=1,3
 3610 FD(IXYZ,1)=- FD(IXYZ,2)
      DO 3620 I=1,IJKL
      N=IJKLG(1,I)
      DO 3620 IXYZ=1,3
 3620 FIJKL(IXYZ,1,N)=- FIJKL(IXYZ,2,N)
      GO TO 5000
C
 3700 CONTINUE
      DO 3710 IXYZ=1,3
 3710 FD(IXYZ,1)=-(FD(IXYZ,2)+FD(IXYZ,4))
      DO 3720 I=1,IJKL
      N=IJKLG(1,I)
      DO 3720 IXYZ=1,3
 3720 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,2,N)+FIJKL(IXYZ,4,N))
      GO TO 5000
C
 3800 CONTINUE
      DO 3810 IXYZ=1,3
 3810 FD(IXYZ,1)=-(FD(IXYZ,2)+FD(IXYZ,4))
      DO 3820 I=1,IJKL
      N=IJKLG(1,I)
      DO 3820 IXYZ=1,3
 3820 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,2,N)+FIJKL(IXYZ,4,N))
      GO TO 5000
C
 3900 CONTINUE
      DO 3910 IXYZ=1,3
 3910 FD(IXYZ,1)=-(FD(IXYZ,2)+FD(IXYZ,3))
      DO 3920 I=1,IJKL
      N=IJKLG(1,I)
      DO 3920 IXYZ=1,3
 3920 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,2,N)+FIJKL(IXYZ,3,N))
      GO TO 5000
C
 4100 CONTINUE
      DO 4110 IXYZ=1,3
 4110 FD(IXYZ,2)=- FD(IXYZ,1)
      DO 4120 I=1,IJKL
      N=IJKLG(1,I)
      DO 4120 IXYZ=1,3
 4120 FIJKL(IXYZ,2,N)=- FIJKL(IXYZ,1,N)
      GO TO 5000
C
 4200 CONTINUE
      DO 4210 IXYZ=1,3
 4210 FD(IXYZ,2)=-(FD(IXYZ,1)+FD(IXYZ,4))
      DO 4220 I=1,IJKL
      N=IJKLG(1,I)
      DO 4220 IXYZ=1,3
 4220 FIJKL(IXYZ,2,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,4,N))
      GO TO 5000
C
 4300 CONTINUE
      DO 4310 IXYZ=1,3
 4310 FD(IXYZ,2)=-(FD(IXYZ,1)+FD(IXYZ,3))
      DO 4320 I=1,IJKL
      N=IJKLG(1,I)
      DO 4320 IXYZ=1,3
 4320 FIJKL(IXYZ,2,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,3,N))
      GO TO 5000
C
 4400 CONTINUE
      DO 4410 IXYZ=1,3
 4410 FD(IXYZ,3)=-(FD(IXYZ,1)+FD(IXYZ,2))
      DO 4420 I=1,IJKL
      N=IJKLG(1,I)
      DO 4420 IXYZ=1,3
 4420 FIJKL(IXYZ,3,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,2,N))
      GO TO 5000
C
 4500 CONTINUE
      DO 4510 IXYZ=1,3
 4510 FD(IXYZ,4)=-(FD(IXYZ,1)+FD(IXYZ,2)+FD(IXYZ,3))
      DO 4520 I=1,IJKL
      N=IJKLG(1,I)
      DO 4520 IXYZ=1,3
 4520 FIJKL(IXYZ,4,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,2,N)+FIJKL(IXYZ,3,N))
C
 5000 CONTINUE
C
C     ----- GRADIENT CONTRIBUTION -----
C
      DO 5010 I=1,4
      IAT=KAT(I)
      DO 5010 IXYZ=1,3
 5010 DE(IXYZ,IAT)=DE(IXYZ,IAT)+FD(IXYZ,I)
C
      IF(DBG) WRITE(IW,9999)(I,IIAT,DE(I,IIAT),I,JJAT,DE(I,JJAT),
     1                       I,KKAT,DE(I,KKAT),I,LLAT,DE(I,LLAT),I=1,3)
C
C     ----- DERIVATIVE FOCK MATRIX CONTRIBUTION -----
C
      CALL DDFCK(FIJKL,IJKLG,DF,DFV,L1,L2,NC,DDA,DDB,
     *           DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
C
      RETURN
 9999 FORMAT(4(' DE(',I2,',',I3,') = ',E18.11))
      END

C*MODULE HSS2   *DECK JDDINV
C>     @brief   driver for 2-electron hess
C>
C>     @details integrate fock derivative elements for IJ and K fragment
C>
C>     @author Yuji Imafuku
C>
C>    --- INPUT ---
C> @param    FIJKL   derivative elemnts
C> @param    IJKLG   indice for integral
C> @param    NC      number of atomic indice
C> @param    DF      fock matrix
C> @param    DFV     fock matrix
C> @param    L2      numebr of trianguler matrix
C> @param    L1      Number of atomic orbital
C> @param    DDA     Density matrix for alpha
C> @param    DDB     density matrix for beta
C> @param    DDC     density matrix for open
C> @param    DSHL    D shell 
C> @param    SHLJ    shell  for j
C> @param    SHLk    shell  for K
C> @param    V       V integral
C> @param    GD      gradient integral
C> @param    DLAG    Density contribution
C> @param    TBDM    shell contribution
C>    --- OUTPUT ---
C> @param    DE      gradient
C> @param    FC      force constant
      SUBROUTINE JDDINV(FIJKL,IJKLG,DE,FC,NC,DF,DFV,L1,L2,
     *                  DDA,DDB,DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXATM=2000, MXAO=8192)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL OUT,DBG
      COMMON /DERINV/ INVTYP
      COMMON /DERSHL/ FD(3,4),SD(78)
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MCPAR / NFZC,NMCCOR,NCI,NOCC,NORBX,NUM1
      COMMON /MCACT / MAXSHL,NNACT,MIJKL
      COMMON /NUMSHL/ NUMI,NUMJ,NUMK,NUML,IJ,KL,IJKL
      DIMENSION FIJKL(3,4,1),IJKLG(4,1)
      DIMENSION DE(3,NAT),FC(NC,1)
      DIMENSION DF(L2,1),DFV(L2,1)
      DIMENSION DDA(1),DDB(1),DDC(1)
      DIMENSION DSHL(L2,NHAM),SHLJ(L2,NHAM,NC),SHLK(L2,NHAM,NC),V(1)
      DIMENSION GD(MIJKL,1),DLAG(NUM,NUM,1)
      DIMENSION TBDM(MAXSHL*MAXSHL,NCI*MAXSHL,4)
      DIMENSION KAT(4),KC(4)
      DIMENSION DD(12,12),DS(3,4,3,4)
      EQUIVALENCE (DD(1,1),DS(1,1,1,1))
C      EQUIVALENCE (KAT(1),IIAT)
      KAT(1)=IIAT
      KAT(2)=JJAT
      KAT(3)=KKAT
      KAT(4)=LLAT
C
C     ----- TRANSLATIONAL INVARIANCE FOR GRADIENT   ELEMENTS  -----
C     ----- TRANSLATIONAL INVARIANCE FOR DERIVATIVE INTEGRALS -----
C     ----- TRANSLATIONAL INVARIANCE FOR HESSIAN    ELEMENTS  -----
C
      DO 3010 K=1,4
 3010 KC(K)=3*(KAT(K)-1)
      DO 3020 IC=1,12
      DO 3020 JC=1,IC
      DD(IC,JC)=SD((IA(IC)+JC))
      DD(JC,IC)=SD((IA(IC)+JC))
 3020 CONTINUE
C
      GO TO (5000,3200,3300,3400,3400,3600,3700,3800,
     1       3900,3900,4100,4200,4300,4400,4500,5000),INVTYP
C
 3200 CONTINUE
      DO 3210 IXYZ=1,3
 3210 FD(IXYZ,1)=- FD(IXYZ,4)
      DO 3220 I=1,IJKL
      N=IJKLG(1,I)
      DO 3220 IXYZ=1,3
 3220 FIJKL(IXYZ,1,N)=- FIJKL(IXYZ,4,N)
      DO 3230 JXYZ=1,3
      DO 3230 IXYZ=1,3
      DS(IXYZ,1,JXYZ,4)=- DS(IXYZ,4,JXYZ,4)
      DS(JXYZ,4,IXYZ,1)=- DS(IXYZ,4,JXYZ,4)
 3230 DS(IXYZ,1,JXYZ,1)=  DS(IXYZ,4,JXYZ,4)
      GO TO 5000
C
 3300 CONTINUE
      DO 3310 IXYZ=1,3
 3310 FD(IXYZ,1)=- FD(IXYZ,3)
      DO 3320 I=1,IJKL
      N=IJKLG(1,I)
      DO 3320 IXYZ=1,3
 3320 FIJKL(IXYZ,1,N)=- FIJKL(IXYZ,3,N)
      DO 3330 JXYZ=1,3
      DO 3330 IXYZ=1,3
      DS(IXYZ,1,JXYZ,3)=- DS(IXYZ,3,JXYZ,3)
      DS(JXYZ,3,IXYZ,1)=- DS(IXYZ,3,JXYZ,3)
 3330 DS(IXYZ,1,JXYZ,1)=  DS(IXYZ,3,JXYZ,3)
      GO TO 5000
C
 3400 CONTINUE
      DO 3410 IXYZ=1,3
 3410 FD(IXYZ,1)=-(FD(IXYZ,3)+FD(IXYZ,4))
      DO 3420 I=1,IJKL
      N=IJKLG(1,I)
      DO 3420 IXYZ=1,3
 3420 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,3,N)+FIJKL(IXYZ,4,N))
      DO 3430 JAT =3,4
      DO 3430 JXYZ=1,3
      DO 3430 IXYZ=1,3
      DS(IXYZ,  1,JXYZ,JAT)=-(DS(IXYZ,3,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
 3430 DS(JXYZ,JAT,IXYZ,  1)=-(DS(IXYZ,3,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
      DO 3440 JXYZ=1,3
      DO 3440 IXYZ=1,3
 3440 DS(IXYZ,  1,JXYZ,  1)=-(DS(IXYZ,1,JXYZ,  3)+DS(IXYZ,1,JXYZ,  4))
      GO TO 5000
C
 3600 CONTINUE
      DO 3610 IXYZ=1,3
 3610 FD(IXYZ,1)=- FD(IXYZ,2)
      DO 3620 I=1,IJKL
      N=IJKLG(1,I)
      DO 3620 IXYZ=1,3
 3620 FIJKL(IXYZ,1,N)=- FIJKL(IXYZ,2,N)
      DO 3630 JXYZ=1,3
      DO 3630 IXYZ=1,3
      DS(IXYZ,1,JXYZ,2)=- DS(IXYZ,2,JXYZ,2)
      DS(JXYZ,2,IXYZ,1)=- DS(IXYZ,2,JXYZ,2)
 3630 DS(IXYZ,1,JXYZ,1)=  DS(IXYZ,2,JXYZ,2)
      GO TO 5000
C
 3700 CONTINUE
      DO 3710 IXYZ=1,3
 3710 FD(IXYZ,1)=-(FD(IXYZ,2)+FD(IXYZ,4))
      DO 3720 I=1,IJKL
      N=IJKLG(1,I)
      DO 3720 IXYZ=1,3
 3720 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,2,N)+FIJKL(IXYZ,4,N))
      DO 3730 JAT =2,4,2
      DO 3730 JXYZ=1,3
      DO 3730 IXYZ=1,3
      DS(IXYZ,  1,JXYZ,JAT)=-(DS(IXYZ,2,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
 3730 DS(JXYZ,JAT,IXYZ,  1)=-(DS(IXYZ,2,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
      DO 3740 JXYZ=1,3
      DO 3740 IXYZ=1,3
 3740 DS(IXYZ,  1,JXYZ,  1)=-(DS(IXYZ,2,JXYZ,  1)+DS(IXYZ,4,JXYZ,  1))
      GO TO 5000
C
 3800 CONTINUE
      DO 3810 IXYZ=1,3
 3810 FD(IXYZ,1)=-(FD(IXYZ,2)+FD(IXYZ,4))
      DO 3820 I=1,IJKL
      N=IJKLG(1,I)
      DO 3820 IXYZ=1,3
 3820 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,2,N)+FIJKL(IXYZ,4,N))
      DO 3830 JAT =2,4,2
      DO 3830 JXYZ=1,3
      DO 3830 IXYZ=1,3
      DS(IXYZ,  1,JXYZ,JAT)=-(DS(IXYZ,2,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
 3830 DS(JXYZ,JAT,IXYZ,  1)=-(DS(IXYZ,2,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
      DO 3840 JXYZ=1,3
      DO 3840 IXYZ=1,3
 3840 DS(IXYZ,  1,JXYZ,  1)=-(DS(IXYZ,2,JXYZ,  1)+DS(IXYZ,4,JXYZ,  1))
      GO TO 5000
C
 3900 CONTINUE
      DO 3910 IXYZ=1,3
 3910 FD(IXYZ,1)=-(FD(IXYZ,2)+FD(IXYZ,3))
      DO 3920 I=1,IJKL
      N=IJKLG(1,I)
      DO 3920 IXYZ=1,3
 3920 FIJKL(IXYZ,1,N)=-(FIJKL(IXYZ,2,N)+FIJKL(IXYZ,3,N))
      DO 3930 JAT =2,3
      DO 3930 JXYZ=1,3
      DO 3930 IXYZ=1,3
      DS(IXYZ,  1,JXYZ,JAT)=-(DS(IXYZ,2,JXYZ,JAT)+DS(IXYZ,3,JXYZ,JAT))
 3930 DS(JXYZ,JAT,IXYZ,  1)=-(DS(IXYZ,2,JXYZ,JAT)+DS(IXYZ,3,JXYZ,JAT))
      DO 3940 JXYZ=1,3
      DO 3940 IXYZ=1,3
 3940 DS(IXYZ,  1,JXYZ,  1)=-(DS(IXYZ,2,JXYZ,  1)+DS(IXYZ,3,JXYZ,  1))
      GO TO 5000
C
 4100 CONTINUE
      DO 4110 IXYZ=1,3
 4110 FD(IXYZ,2)=- FD(IXYZ,1)
      DO 4120 I=1,IJKL
      N=IJKLG(1,I)
      DO 4120 IXYZ=1,3
 4120 FIJKL(IXYZ,2,N)=- FIJKL(IXYZ,1,N)
      DO 4130 JXYZ=1,3
      DO 4130 IXYZ=1,3
      DS(IXYZ,1,JXYZ,2)=- DS(IXYZ,1,JXYZ,1)
      DS(JXYZ,2,IXYZ,1)=- DS(IXYZ,1,JXYZ,1)
 4130 DS(IXYZ,2,JXYZ,2)=  DS(IXYZ,1,JXYZ,1)
      GO TO 5000
C
 4200 CONTINUE
      DO 4210 IXYZ=1,3
 4210 FD(IXYZ,2)=-(FD(IXYZ,1)+FD(IXYZ,4))
      DO 4220 I=1,IJKL
      N=IJKLG(1,I)
      DO 4220 IXYZ=1,3
 4220 FIJKL(IXYZ,2,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,4,N))
      DO 4230 JAT =1,4,3
      DO 4230 JXYZ=1,3
      DO 4230 IXYZ=1,3
      DS(IXYZ,  2,JXYZ,JAT)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
 4230 DS(JXYZ,JAT,IXYZ,  2)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,4,JXYZ,JAT))
      DO 4240 JXYZ=1,3
      DO 4240 IXYZ=1,3
 4240 DS(IXYZ,  2,JXYZ,  2)=-(DS(IXYZ,1,JXYZ,  2)+DS(IXYZ,4,JXYZ,  2))
      GO TO 5000
C
 4300 CONTINUE
      DO 4310 IXYZ=1,3
 4310 FD(IXYZ,2)=-(FD(IXYZ,1)+FD(IXYZ,3))
      DO 4320 I=1,IJKL
      N=IJKLG(1,I)
      DO 4320 IXYZ=1,3
 4320 FIJKL(IXYZ,2,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,3,N))
      DO 4330 JAT =1,3,2
      DO 4330 JXYZ=1,3
      DO 4330 IXYZ=1,3
      DS(IXYZ,  2,JXYZ,JAT)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,3,JXYZ,JAT))
 4330 DS(JXYZ,JAT,IXYZ,  2)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,3,JXYZ,JAT))
      DO 4340 JXYZ=1,3
      DO 4340 IXYZ=1,3
 4340 DS(IXYZ,  2,JXYZ,  2)=-(DS(IXYZ,1,JXYZ,  2)+DS(IXYZ,3,JXYZ,  2))
      GO TO 5000
C
 4400 CONTINUE
      DO 4410 IXYZ=1,3
 4410 FD(IXYZ,3)=-(FD(IXYZ,1)+FD(IXYZ,2))
      DO 4420 I=1,IJKL
      N=IJKLG(1,I)
      DO 4420 IXYZ=1,3
 4420 FIJKL(IXYZ,3,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,2,N))
      DO 4430 JAT =1,2
      DO 4430 JXYZ=1,3
      DO 4430 IXYZ=1,3
      DS(IXYZ,  3,JXYZ,JAT)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,2,JXYZ,JAT))
 4430 DS(JXYZ,JAT,IXYZ,  3)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,2,JXYZ,JAT))
      DO 4440 JXYZ=1,3
      DO 4440 IXYZ=1,3
 4440 DS(IXYZ,  3,JXYZ,  3)=-(DS(IXYZ,1,JXYZ,  3)+DS(IXYZ,2,JXYZ,  3))
      GO TO 5000
C
 4500 CONTINUE
      DO 4510 IXYZ=1,3
 4510 FD(IXYZ,4)=-(FD(IXYZ,1)+FD(IXYZ,2)+FD(IXYZ,3))
      DO 4520 I=1,IJKL
      N=IJKLG(1,I)
      DO 4520 IXYZ=1,3
 4520 FIJKL(IXYZ,4,N)=-(FIJKL(IXYZ,1,N)+FIJKL(IXYZ,2,N)+FIJKL(IXYZ,3,N))
      DO 4530 JAT =1,3
      DO 4530 JXYZ=1,3
      DO 4530 IXYZ=1,3
      DS(IXYZ,  4,JXYZ,JAT)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,2,JXYZ,JAT)
     1                                           +DS(IXYZ,3,JXYZ,JAT))
      DS(JXYZ,JAT,IXYZ,  4)=-(DS(IXYZ,1,JXYZ,JAT)+DS(IXYZ,2,JXYZ,JAT)
     1                                           +DS(IXYZ,3,JXYZ,JAT))
 4530 CONTINUE
      DO 4540 JXYZ=1,3
      DO 4540 IXYZ=1,3
      DS(IXYZ,  4,JXYZ,  4)=-(DS(IXYZ,1,JXYZ,  4)+DS(IXYZ,2,JXYZ,  4)
     1                                           +DS(IXYZ,3,JXYZ,  4))
 4540 CONTINUE
C
 5000 CONTINUE
C
C     ----- GRADIENT CONTRIBUTION -----
C
      DO 5010 I=1,4
      IAT=KAT(I)
      DO 5010 IXYZ=1,3
 5010 DE(IXYZ,IAT)=DE(IXYZ,IAT)+FD(IXYZ,I)
C
      IF(DBG) WRITE(IW,9999)(I,IIAT,DE(I,IIAT),I,JJAT,DE(I,JJAT),
     1                       I,KKAT,DE(I,KKAT),I,LLAT,DE(I,LLAT),I=1,3)
C
C     ----- HESSIAN CONTRIBUTION -----
C
      DO 5020 J=1,4
      JC=KC(J)
      DO 5020 JXYZ=1,3
      DO 5020 I=1,4
      IC=KC(I)
      DO 5020 IXYZ=1,3
 5020 FC(IC+IXYZ,JC+JXYZ)=FC(IC+IXYZ,JC+JXYZ)+DS(IXYZ,I,JXYZ,J)
C
      IF(DBG) CALL HSSOUT(FC,NC,NC,NC)
C
C     ----- DERIVATIVE FOCK MATRIX CONTRIBUTION -----
C
      CALL DDFCK(FIJKL,IJKLG,DF,DFV,L1,L2,NC,DDA,DDB,
     *           DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
C
      RETURN
 9999 FORMAT(4(' DE(',I2,',',I3,') = ',E18.11))
      END
C*MODULE HSS2   *DECK DDFCK
C>     @brief   driver for 2-electron hess
C>
C>     @details integrate fock derivative elements for IJ and K fragment
C>
C>    @author Yuji Imahuku
C>
C>    --- INPUT ---
C> @param   FIJKL  Hessian contribution 
C> @param   IJKLG  indice
C> @param   L2     number of triangular matrix
C> @param   L1     number of atomic orbital
C> @param   NC     number of cartesian coordinate
C> @param    DDA     Density matrix for alpha
C> @param    DDB     density matrix for beta
C> @param    DDC     density matrix for open
C> @param    DSHL    D shell 
C> @param    SHLJ    shell  for j
C> @param    SHLk    shell  for K
C> @param    V       V integral
C> @param    GD      gradient integral
C> @param    DLAG    Density contribution
C> @param    TBDM    shell contribution
C>    --- OUTPUT ---
C> @param   DF     derivative of Fock matrix
C> @param   DFV    Derivative of Fock matrix
      SUBROUTINE DDFCK(FIJKL,IJKLG,DF,DFV,L1,L2,NC,
     *                 DDA,DDB,DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXAO=8192)
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL OUT,DBG
      LOGICAL NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,UROHF,
     *        GVBTYP,ROGVB,MCCI,GUGACI,LCFLAG,LRINT
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DFTPAR/ DFTTYP(20),EXENA,EXENB,EXENC,
     *                IDFT34,NAUXFUN,NAUXSHL
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /MCACT / MAXSHL,NNACT,MIJKL
      COMMON /MCPAR / NFZC,NMCCOR,NCI,NOCC,NORBX,NUM1
      COMMON /NLRC  / LCFLAG,EMU,EMU2,LRFILE
      COMMON /NLRCF / LRINT
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLNRM/ PNRM(84)
      COMMON /SCFPAR/ NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,
     *                UROHF,GVBTYP,ROGVB,MCCI,GUGACI
      DIMENSION FIJKL(3,4,1),IJKLG(4,1)
      DIMENSION DF(L2,1),DFV(L2,1)
      DIMENSION DDA(1),DDB(1),DDC(1),V(L1,1)
      DIMENSION DSHL(L2,NHAM),SHLJ(L2,NHAM,NC),SHLK(L2,NHAM,NC)
      DIMENSION GD(MIJKL,1),DLAG(L1,L1,1)
      DIMENSION TBDM(MAXSHL*MAXSHL,NCI*MAXSHL,4)
      DIMENSION KC(4)
      DATA FOUR /4.0D+00/
      DATA TWO  /2.0D+00/
      DATA PT5  /0.5D+00/
      DATA TOL  /1.0D-09/
C
C     ----- FOR MCSCF CALCULATION -----
C
      NOCC = NMCCOR + NCI
C
C     ----- FOR DFT CALCULATION -----
C
      HFSCAL=DFTTYP(3)
      CSCALT=1.0D+00
      IF(LCFLAG) THEN
         IF(LRINT) THEN
            HFSCAL=1.0D+00
            CSCALT=0.0D+00
         ELSE
            HFSCAL=0.0D+00
            CSCALT=1.0D+00
         ENDIF
      ENDIF
C
      KC(1)=3*(IIAT-1)
      KC(2)=3*(JJAT-1)
      KC(3)=3*(KKAT-1)
      KC(4)=3*(LLAT-1)
C
      IJKLN=0
      NIJ = 0
      DO 140 I=MINI,MAXI
      PI=PNRM(I)
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 130 J=MINJ,JMAX
      NIJ = NIJ + 1
      NKL = 0
      PIJ=PNRM(J)*PI
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 120 K=MINK,KMAX
      PIJK=PNRM(K)*PIJ
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 110 L=MINL,LMAX
      NKL = NKL  + 1
      PIJKL=PNRM(L)*PIJK
C
      IJKLN=IJKLN+1
      IJKLF=IJKLG(1,IJKLN)
      INUM=LOCI+I
      JNUM=LOCJ+J
      KNUM=LOCK+K
      LNUM=LOCL+L
C
      IF((KNUM.LT.INUM).OR.(KNUM.EQ.INUM.AND.LNUM.LE.JNUM)) THEN
         IJ=IA(INUM)+JNUM
         KL=IA(KNUM)+LNUM
         IK=IA(INUM)+KNUM
         IL=IA(INUM)+LNUM
         JK=IA(MAX0(JNUM,KNUM))+MIN0(JNUM,KNUM)
         JL=IA(MAX0(JNUM,LNUM))+MIN0(JNUM,LNUM)
      ELSE
         IJ=IA(KNUM)+LNUM
         KL=IA(INUM)+JNUM
         IK=IA(KNUM)+INUM
         IL=IA(KNUM)+JNUM
         JK=IA(MAX0(LNUM,INUM))+MIN0(LNUM,INUM)
         JL=IA(MAX0(LNUM,JNUM))+MIN0(LNUM,JNUM)
      ENDIF
      IF(INUM.EQ.JNUM                 ) PIJKL=PIJKL*PT5
      IF(KNUM.EQ.LNUM                 ) PIJKL=PIJKL*PT5
      IF(INUM.EQ.KNUM.AND.JNUM.EQ.LNUM) PIJKL=PIJKL*PT5
C
      DO 20 KAT=1,4
      IC=KC(KAT)
      DO 10 IXYZ=1,3
      VAL=FIJKL(IXYZ,KAT,IJKLF)*PIJKL
      IF( ABS(VAL).LT.TOL) GO TO 5
C
      IF(RHFTYP .OR. GUGACI) THEN
C    
C     FOR RHF - DDA = TOTAL (ALPHA+BETA) DENSITY
C
         DF(IJ,IC+IXYZ)=DF(IJ,IC+IXYZ)+( FOUR*VAL)*DDA(KL)* CSCALT
         DF(KL,IC+IXYZ)=DF(KL,IC+IXYZ)+( FOUR*VAL)*DDA(IJ)* CSCALT
C
         DF(IK,IC+IXYZ)=DF(IK,IC+IXYZ)+(-     VAL)*DDA(JL) * HFSCAL
         DF(IL,IC+IXYZ)=DF(IL,IC+IXYZ)+(-     VAL)*DDA(JK) * HFSCAL
         DF(JK,IC+IXYZ)=DF(JK,IC+IXYZ)+(-     VAL)*DDA(IL) * HFSCAL
         DF(JL,IC+IXYZ)=DF(JL,IC+IXYZ)+(-     VAL)*DDA(IK) * HFSCAL
      END IF
C 
      IF(UROHF) THEN
C
C     FOR UHF - DDA = ALPHA DENSITY
C               DDB = BETA  DENSITY
C
         IAC = 2*IC + IXYZ
         IBC = IAC + 3
         DUMKL = DDA(KL)+DDB(KL)
         DUMIJ = DDA(IJ)+DDB(IJ)
         DF(IJ,IAC) = DF(IJ,IAC) + FOUR * VAL * DUMKL   * CSCALT 
         DF(KL,IAC) = DF(KL,IAC) + FOUR * VAL * DUMIJ   * CSCALT 
         DF(IK,IAC) = DF(IK,IAC) - TWO  * VAL * DDA(JL) * HFSCAL
         DF(IL,IAC) = DF(IL,IAC) - TWO  * VAL * DDA(JK) * HFSCAL
         DF(JK,IAC) = DF(JK,IAC) - TWO  * VAL * DDA(IL) * HFSCAL
         DF(JL,IAC) = DF(JL,IAC) - TWO  * VAL * DDA(IK) * HFSCAL
C
         DF(IJ,IBC) = DF(IJ,IBC) + FOUR * VAL * DUMKL   * CSCALT
         DF(KL,IBC) = DF(KL,IBC) + FOUR * VAL * DUMIJ   * CSCALT
         DF(IK,IBC) = DF(IK,IBC) - TWO  * VAL * DDB(JL) * HFSCAL
         DF(IL,IBC) = DF(IL,IBC) - TWO  * VAL * DDB(JK) * HFSCAL
         DF(JK,IBC) = DF(JK,IBC) - TWO  * VAL * DDB(IL) * HFSCAL
         DF(JL,IBC) = DF(JL,IBC) - TWO  * VAL * DDB(IK) * HFSCAL      
      END IF
C
      IF(ROGVB) THEN
         DO 990 IHAM=1,NHAM
            SHLJ(IJ,IHAM,IC+IXYZ)=SHLJ(IJ,IHAM,IC+IXYZ)
     *                             +( FOUR*VAL)*DSHL(KL,IHAM)
            SHLJ(KL,IHAM,IC+IXYZ)=SHLJ(KL,IHAM,IC+IXYZ)
     *                             +( FOUR*VAL)*DSHL(IJ,IHAM)
            SHLK(IK,IHAM,IC+IXYZ)=SHLK(IK,IHAM,IC+IXYZ)
     *                             +(  TWO*VAL)*DSHL(JL,IHAM)
            SHLK(IL,IHAM,IC+IXYZ)=SHLK(IL,IHAM,IC+IXYZ)
     *                             +(  TWO*VAL)*DSHL(JK,IHAM)
            SHLK(JK,IHAM,IC+IXYZ)=SHLK(JK,IHAM,IC+IXYZ)
     *                             +(  TWO*VAL)*DSHL(IL,IHAM)
            SHLK(JL,IHAM,IC+IXYZ)=SHLK(JL,IHAM,IC+IXYZ)
     *                             +(  TWO*VAL)*DSHL(IK,IHAM)
  990    CONTINUE
      END IF
C
C     
      IF(MCCI) THEN
C
C     FOR MCSCF - DDB = CORE 1E- DENSITY IN AO BASIS
C                 DDC = 1E- DENSITY OVER ACTIVE ORBS TO AO BASIS
C
C                 DF  = CORE    FIRST DERIVATIVE FOCK MATRIX
C                 DFV = VIRTUAL FIRST DERIVATIVE FOCK MATRIX  
C
         DF(IJ,IC+IXYZ) = DF(IJ,IC+IXYZ)+(  TWO*VAL)*DDB(KL)
         DF(KL,IC+IXYZ) = DF(KL,IC+IXYZ)+(  TWO*VAL)*DDB(IJ)
         DF(IK,IC+IXYZ) = DF(IK,IC+IXYZ)+(- PT5*VAL)*DDB(JL)
         DF(IL,IC+IXYZ) = DF(IL,IC+IXYZ)+(- PT5*VAL)*DDB(JK)
         DF(JK,IC+IXYZ) = DF(JK,IC+IXYZ)+(- PT5*VAL)*DDB(IL)
         DF(JL,IC+IXYZ) = DF(JL,IC+IXYZ)+(- PT5*VAL)*DDB(IK)
         DFV(IJ,IC+IXYZ)=DFV(IJ,IC+IXYZ)+( FOUR*VAL)*DDC(KL)
         DFV(KL,IC+IXYZ)=DFV(KL,IC+IXYZ)+( FOUR*VAL)*DDC(IJ)
         DFV(IK,IC+IXYZ)=DFV(IK,IC+IXYZ)+(-     VAL)*DDC(JL)
         DFV(IL,IC+IXYZ)=DFV(IL,IC+IXYZ)+(-     VAL)*DDC(JK)
         DFV(JK,IC+IXYZ)=DFV(JK,IC+IXYZ)+(-     VAL)*DDC(IL)
         DFV(JL,IC+IXYZ)=DFV(JL,IC+IXYZ)+(-     VAL)*DDC(IK)
C
         IJKL = 1
         DO 1000 II=NMCCOR+1,NOCC
           DO 1000 JJ=NMCCOR+1,II
             DTMP1 = V(INUM,II)*V(JNUM,JJ) 
     *                + V(INUM,JJ)*V(JNUM,II)
             DTMP2 = V(KNUM,II)*V(LNUM,JJ)
     *                + V(KNUM,JJ)*V(LNUM,II)
             DO 980 KK=NMCCOR+1,II
               LMAX = KK
               IF(II.EQ.KK) LMAX = JJ
               DO 980 LL=NMCCOR+1,LMAX
                 DTMP3 = V(KNUM,KK)*V(LNUM,LL)
     *                    + V(KNUM,LL)*V(LNUM,KK)
                 DTMP4 = V(INUM,KK)*V(JNUM,LL)
     *                    + V(INUM,LL)*V(JNUM,KK)
                 DVAL = DTMP1*DTMP3 + DTMP2*DTMP4
C
                 GD(IJKL,IC+IXYZ) = GD(IJKL,IC+IXYZ)
     *                               + DVAL*VAL
                 IJKL = IJKL + 1
  980     CONTINUE
 1000 CONTINUE
C
      DO 1500 M=1,NCI
        IVAL = (J-1)*NCI + M
        DVAL = TBDM(NKL,IVAL,1)
        DLAG(INUM,M,IC+IXYZ) = DLAG(INUM,M,IC+IXYZ)
     *                         + DVAL*TWO*VAL
C
        IVAL = (I-1)*NCI + M
        DVAL = TBDM(NKL,IVAL,2)
        DLAG(JNUM,M,IC+IXYZ) = DLAG(JNUM,M,IC+IXYZ)
     *                         + DVAL*TWO*VAL
C
        IVAL = (L-1)*NCI + M
        DVAL = TBDM(NIJ,IVAL,3)
        DLAG(KNUM,M,IC+IXYZ) = DLAG(KNUM,M,IC+IXYZ)
     *                         + DVAL*TWO*VAL
C
        IVAL = (K-1)*NCI + M
        DVAL = TBDM(NIJ,IVAL,4)
        DLAG(LNUM,M,IC+IXYZ) = DLAG(LNUM,M,IC+IXYZ)
     *                         + DVAL*TWO*VAL
 1500 CONTINUE
      END IF
    5 CONTINUE
   10 CONTINUE
   20 CONTINUE
C
  110 CONTINUE
  120 CONTINUE
  130 CONTINUE
  140 CONTINUE
C
      IF(DBG) THEN
        WRITE(IW,9999)
        CALL PRTRI(DF(1,1),L1)
      ENDIF
C
      RETURN
 9999 FORMAT(' IN -DDFCK- , FIRST DERIVATIVE FOCK MATRIX = ')
      END
C*MODULE HSS2   *DECK JKDMRY
C>     @brief   driver for CPHF
C>
C>     @details integrate fock derivative elements for CPHF
C>
C>    @author Yuji Imahuku
C>
C>    @param  IADDR  memory indice
C>    @param  LFIX0  memory for orbitals
C>    @param  LOADFM start point 
C>
      SUBROUTINE JKDMRY(IADDR,LFIX0,LOADFM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (LENVEC=255)
      PARAMETER (ONE   =1.0D00)
      PARAMETER (SQRT3 =1.73205080756888D00)
      PARAMETER (SQRT5 =2.23606797749979D00)
      PARAMETER (SQRT7 =2.64575131106459D00)
      PARAMETER (MXGTOT=20000, MXSH=5000)
      LOGICAL     SP
      LOGICAL     NORM
      LOGICAL     VECTOR
      COMMON /DERMEM/ IWFN,ICLB,INIJG,IGINT,IFINT,ISINT,IIJKLG,
     1 IDAB,ICHRG,IXY,IXZ,IYZ,IX,IY,IZ,ISJ,ISK,ISL,IGIJKL,IGNKL,IGNM,
     2 IDIJ,IDKL,IB00,IB01,IB10,IC00,ID00,IF00,
     3 IAAI,IAAJ,IBBK,IBBL,IFI,IFJ,IFK,IFL,
     4 ISII,ISJJ,ISKK,ISLL,ISIJ,ISIK,ISIL,ISJK,ISJL,ISKL,
     5 IDIJSI,IDIJSJ,IDKLSK,IDKLSL,IABV,ICV,IRW
      COMMON /DERPAR/ IDER,JDER,KDER,LDER,NDER
      COMMON /INTXYZ/ MAXXYZ,NUMXYZ
      COMMON /INTVECT/MAXVEC,MINVEC
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MACHNV/ VECTOR
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /OUTPUT/ NPRINT,ITOL,ICUT,NORMF,NORMP,NOPK
      COMMON /SHLBAS/ MAXTYP,MAXNUM
      COMMON /SHLNRM/ PNRM(84)
      DIMENSION IJKLN(5)
      DATA IJKLN  /   1,  4, 10, 20, 35/
C
C     FIND OUT HOW MUCH MEMORY IS AVAILABLE
C
      CALL GOTFM(NGOTMX)
C
C     MAXVEC = MEMORY SIZE RESERVED FOR -VECTORIZATION-
C
C     ----- SET HARDWARE CHARACTERISTIC PARAMETER -----
C           ISINGL = 1 FOR 64-BIT WORD HARDWARE
C           ISINGL = 2 FOR 32-BIT WORD HARDWARE
C           VECTOR =.FALSE. FOR SCALAR HARDWARE
C           VECTOR =.TRUE.  FOR VECTOR HARDWARE
C
      VECTOR=.FALSE.
C
      MAXVEC=LENVEC/3
      IF(     VECTOR) MINVEC=24
      IF(.NOT.VECTOR) MINVEC=MAXVEC*3+1
C
C     ----- THIS PROGRAM FOR DERIVATIVES -----
C
      IF(NDER.NE.1.AND.NDER.NE.2) NDER=0
      NDER0=0
      NDER1=12
      NDER2=0
C
C     ----- CHECK MAXIMUM ANGULAR MOMENTUM -----
C
      SP=.FALSE.
      MAXTYP=0
      DO I=1,NSHELL
         SP=SP.OR.(KTYPE(I).EQ.2.AND.KMIN(I).EQ.1)
         IF(KTYPE(I).GT.MAXTYP) MAXTYP=KTYPE(I)
      ENDDO
      IF(MAXTYP.LE.5              ) GO TO 15
      WRITE(IW,9999)
      CALL ABRT
   15 CONTINUE
      MINXYZ=(4*MAXTYP -2 +NDER)/2
C
C     ----- GET NUMBER OF PRIMITIVE CHARGE DISTRIBUTIONS -----
C
      NIJG=0
      DO II=1,NSHELL
         DO JJ=1,II
            NIJG=NIJG+KNG(II)*KNG(JJ)
         ENDDO
      ENDDO
C
C     -----  AT THIS POINT IT IS GOOD TO REMEMBER THAT    -----
C            -MAXTYP- = HIGHEST SHELL ANGULAR MOMENTUM
C            -MAXFUN- = NUMBER OF FUNCTIONS WITH ANGULAR
C                       MOMENTUM LESS OR EQUAL TO -MAXTYP-
C            -MAXNUM- = NUMBER OF FUNCTIONS WITH ANGULAR
C                       MOMENTUM         EQUAL TO -MAXTYP-
C            -MAXXYZ- = MAXIMUM NUMBER OF PRIMITIVE INTEGRALS
C                       THAT CAN BE HANDLED IN ONE -VECTOR-
C            -NUMXYZ- = ACTUAL MAXIMUM LENGTH OF ONE -VECTOR-
C            -MAXXYZ- = IT IS NUMXYZ/3 . SINCE THE X, Y, AND Z
C                       COMPONENTS ARE TREATED AS A SINGLE VECTOR,
C                       -MAXXYZ- IS THE NUMBER OF (PRIMITIVE-ROOTS)
C                       COMBINATIONS WHICH CAN BE TREATED IN ONE
C                       VECTOR. FOR -SSSS- INTEGRALS WHICH REQUIRE
C                       ONE RYS ROOT, MAXXYZ HAPPENS TO COINCIDE WITH
C                       THE NUMBER OF PRIMITIVE INTEGRALS TREATED IN
C                       ONE VECTOR. FOR -DDDD- INTEGRALS WHICH
C                       REQUIRE FIVE RYS ROOTS, THE NUMBER OF PRIMITIVE
C                       INTEGRALS TREATED IN ONE VECTOR IS -MAXXYZ-/5 .
C
C
C     ----- SET NORMALIZATION CONSTANTS -----
C
      MAXFUN=IJKLN(MAXTYP)
      DO I=1,MAXFUN
         PNRM(I)=ONE
      ENDDO
      NORM=NORMF.NE.1.OR.NORMP.NE.1
      IF(.NOT.NORM) GO TO 180
C
      SQRT53=SQRT5/SQRT3
      DO 170 I=1,MAXFUN
      GO TO(110,110,160,160,110,160,160,120,160,160,
     1      110,160,160,130,160,160,160,160,160,120,
     2      110,160,160,140,160,160,160,160,160,150,
     3      160,160,120,160,160),I
  110 FI=ONE
      GO TO 160
  120 FI=SQRT3*FI
      GO TO 160
  130 FI=SQRT5*FI
      GO TO 160
  140 FI=SQRT7*FI
      GO TO 160
  150 FI=SQRT53*FI
  160 CONTINUE
      PNRM(I)=FI
  170 CONTINUE
C
  180 CONTINUE
C
      IDUM=MAXTYP-1
      MAXNUM=((IDUM+1)*(IDUM+2))/2
      IF(MAXNUM.EQ.3.AND.SP) MAXNUM=4
      NGIJKL=(MAXNUM**4)
C
C     ----- FOR DERIVATIVES -----
C
      MODTYP=MAXTYP+NDER
C
C     ----- CALCULATE VECTOR LENGTH AND SET CORE POINTERS -----
C
      LVAR=0
      LFIX=LFIX0
      LFIX=LFIX  +(NSHELL*(NSHELL+1))/2
C
C     ----- -SP- FUNCTIONS FOR FIRST DERIVATIVES ARE SPECIAL -----
C
      IWFN =LOADFM + 1
      ICLB =IWFN + LFIX0
      ILAST=ICLB + (NSHELL*(NSHELL+1))/2
      IADDR=ILAST
C
      LFIX=LFIX+( (NSHELL*(NSHELL+1))/2 )*2
      LFIX=LFIX+NGIJKL*(NDER0+NDER1+NDER2)
      LFIX=LFIX+NGIJKL* 4
      LFIX=LFIX+NGIJKL
      LFIX=LFIX+NIJG*15
      LVAR=     ( MODTYP**2       * MODTYP**2       )*3
      LVAR=LVAR+( MODTYP**2       *(MODTYP+MODTYP-1))*3
      LVAR=LVAR+((MODTYP+MODTYP-1)*(MODTYP+MODTYP-1))*3
      LVAR=LVAR+( MODTYP**2                         )*3
      LVAR=LVAR+((MODTYP+MODTYP-1)                  )*3
      LVAR=LVAR+((MODTYP+MODTYP-1)* 3               )*3
      LVAR=LVAR+(  3                                )*3
      LVAR=LVAR+(  9                                )
      LVAR=LVAR+(  4                                )
      LVAR=LVAR+(  5                                )
      LVAR=LVAR+( 18                                )
      LVAR=LVAR+(  2                                )
      LVAR=LVAR+(  4                                )*3
      LVAR=LVAR+( MODTYP**2       * MODTYP**2       )*3*14
      MAXXYZ=(NGOTMX-LFIX-1)/LVAR
      IF(MAXXYZ.GE.MINXYZ) GO TO 200
c     WRITE(IW,9998) LVAR,LFIX,MAXXYZ,MINXYZ,MAXCOR
      CALL ABRT
  200 CONTINUE
      IF(MAXXYZ.GT.MAXVEC) MAXXYZ=MAXVEC
      NUMXYZ=3*MAXXYZ
C
C     X(IWFN  ) = WAVEFUNCTION DATA
C     X(ICLB  ) = COULOMB INTEGRAL THRESHOLD
C     X(INIJG ) = CHARGE DISTRIBUTION POINTERS
C     X(IFINT ) = FIRST DERIVATIVE INTEGRALS
C     X(IIJKLG) = INDICES
C     X(IDAB  ) = DENSITY ARRAY -DAB-
C     X(ICHRG ) = CHARGE DISTRIBUTION PARAMETERS
C     X(IXY   ) = TEMPORARY ARRAY WHEN FORMING DERIVATIVE INTEGRALS
C     X(IXZ   ) = TEMPORARY ARRAY WHEN FORMING DERIVATIVE INTEGRALS
C     X(IYZ   ) = TEMPORARY ARRAY WHEN FORMING DERIVATIVE INTEGRALS
C     X(IX    ) = TEMPORARY ARRAY WHEN FORMING DERIVATIVE INTEGRALS
C     X(IY    ) = TEMPORARY ARRAY WHEN FORMING DERIVATIVE INTEGRALS
C     X(IZ    ) = TEMPORARY ARRAY WHEN FORMING DERIVATIVE INTEGRALS
C     X(ISJ   ) = TEMPORARY ARRAY WHEN -SP- SHELLS
C     X(ISK   ) = TEMPORARY ARRAY WHEN -SP- SHELLS
C     X(ISL   ) = TEMPORARY ARRAY WHEN -SP- SHELLS
C     X(IGIJKL) = ( 2-D , 4 CENTERS ) INTEGRALS
C     X(IGNKL ) = ( 2-D , 3 CENTERS ) INTEGRALS
C     X(IGNM  ) = ( 2-D , 2 CENTERS ) INTEGRALS
C     X(IDIJ  ) = CONTRACTION DENSITY FOR -IJ- CHARGE DISTRIBUTION
C     X(IDKL  ) = CONTRACTION DENSITY FOR -KL- CHARGE DISTRIBUTION
C     X(IB00  ) = -B00-
C     X(IB01  ) = -B01-
C     X(IB10  ) = -B10-
C     X(IC00  ) = -C00-
C     X(ID00  ) = -D00-
C     X(IF00  ) = -F00-
C     X(IDIJSI) = SCALING FACTOR FOR -S- FUNCTION OF AN -SP- II SHELL
C     X(IDIJSJ) = SCALING FACTOR FOR -S- FUNCTION OF AN -SP- JJ SHELL
C     X(IDKLSK) = SCALING FACTOR FOR -S- FUNCTION OF AN -SP- KK SHELL
C     X(IDKLSL) = SCALING FACTOR FOR -S- FUNCTION OF AN -SP- LL SHELL
C     X(IABV  ) = -AB- VECTOR FOR PRIMITIVE INTEGRALS
C     X(ICV   ) = -CV- VECTOR FOR PRIMITIVE INTEGRALS
C     X(IRW   ) = -RW- VECTOR FOR RYS ROOTS AND WEIGHTS
C     X(IAAI  ) = EXPONENT FOR DERIVATIVE OF II SHELL
C     X(IAAJ  ) = EXPONENT FOR DERIVATIVE OF JJ SHELL
C     X(IBBK  ) = EXPONENT FOR DERIVATIVE OF KK SHELL
C     X(IBBL  ) = EXPONENT FOR DERIVATIVE OF LL SHELL
C     X(IFI   ) = FIRST DERIVATIVE WRT. II OF ( 2-D , 4 CENTERS ) INT.
C     X(IFJ   ) = FIRST DERIVATIVE WRT. JJ OF ( 2-D , 4 CENTERS ) INT.
C     X(IFK   ) = FIRST DERIVATIVE WRT. KK OF ( 2-D , 4 CENTERS ) INT.
C     X(IFL   ) = FIRST DERIVATIVE WRT. LL OF ( 2-D , 4 CENTERS ) INT.
C     X(ISII  ) = SECOND DER. WRT II AND II OF ( 2-D , 4 CENTERS ) INT.
C     X(ISJJ  ) = SECOND DER. WRT JJ AND JJ OF ( 2-D , 4 CENTERS ) INT.
C     X(ISKK  ) = SECOND DER. WRT KK AND KK OF ( 2-D , 4 CENTERS ) INT.
C     X(ISLL  ) = SECOND DER. WRT LL AND LL OF ( 2-D , 4 CENTERS ) INT.
C     X(ISIJ  ) = SECOND DER. WRT II AND JJ OF ( 2-D , 4 CENTERS ) INT.
C     X(ISIK  ) = SECOND DER. WRT II AND KK OF ( 2-D , 4 CENTERS ) INT.
C     X(ISIL  ) = SECOND DER. WRT II AND LL OF ( 2-D , 4 CENTERS ) INT.
C     X(ISJK  ) = SECOND DER. WRT JJ AND KK OF ( 2-D , 4 CENTERS ) INT.
C     X(ISJL  ) = SECOND DER. WRT JJ AND LL OF ( 2-D , 4 CENTERS ) INT.
C     X(ISKL  ) = SECOND DER. WRT KK AND LL OF ( 2-D , 4 CENTERS ) INT.
C
      IWFN  =IWFN
      ICLB  =ICLB
      INIJG =ICLB  + (NSHELL*(NSHELL+1))/2
      IFINT =INIJG +((NSHELL*(NSHELL+1))/2)*2
      IIJKLG=IFINT +  NGIJKL*NDER1
      IDAB  =IIJKLG+  NGIJKL*4
      ICHRG =IDAB  +  NGIJKL
      IXY   =ICHRG +  NIJG  *15
      IXZ   =IXY   +(  1                                )*MAXXYZ
      IYZ   =IXZ   +(  1                                )*MAXXYZ
      IX    =IYZ   +(  1                                )*MAXXYZ
      IY    =IX    +(  1                                )*MAXXYZ
      IZ    =IY    +(  1                                )*MAXXYZ
      ISJ   =IZ    +(  1                                )*MAXXYZ
      ISK   =ISJ   +(  1                                )*MAXXYZ
      ISL   =ISK   +(  1                                )*MAXXYZ
      IGIJKL=ISL   +(  1                                )*MAXXYZ
      IGNKL =IGIJKL+( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      IGNM  =IGNKL +( MODTYP**2       *(MODTYP+MODTYP-1))*MAXXYZ*3
      IDIJ  =IGNM  +((MODTYP+MODTYP-1)*(MODTYP+MODTYP-1))*MAXXYZ*3
      IDKL  =IDIJ  +( MODTYP**2                         )*MAXXYZ*3
      IB00  =IDKL  +((MODTYP+MODTYP-1)                  )*MAXXYZ*3
      IB01  =IB00  +((MODTYP+MODTYP-1)                  )*MAXXYZ*3
      IB10  =IB01  +((MODTYP+MODTYP-1)                  )*MAXXYZ*3
      IC00  =IB10  +((MODTYP+MODTYP-1)                  )*MAXXYZ*3
      ID00  =IC00  +(  1                                )*MAXXYZ*3
      IF00  =ID00  +(  1                                )*MAXXYZ*3
      IDIJSI=IF00  +(  1                                )*MAXXYZ*3
      IDIJSJ=IDIJSI+(  1                                )*MAXXYZ
      IDKLSK=IDIJSJ+(  1                                )*MAXXYZ
      IDKLSL=IDKLSK+(  1                                )*MAXXYZ
      IABV  =IDKLSL+(  1                                )*MAXXYZ
      ICV   =IABV  +(  5                                )*MAXXYZ
      IRW   =ICV   +( 18                                )*MAXXYZ
      IAAI  =IRW   +(  2                                )*MAXXYZ
      IAAJ  =IAAI  +(  1                                )*MAXXYZ*3
      IBBK  =IAAJ  +(  1                                )*MAXXYZ*3
      IBBL  =IBBK  +(  1                                )*MAXXYZ*3
      IFI   =IBBL  +(  1                                )*MAXXYZ*3
      IFJ   =IFI   +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      IFK   =IFJ   +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      IFL   =IFK   +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISII  =IFL   +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISJJ  =ISII  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISKK  =ISJJ  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISLL  =ISKK  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISIJ  =ISLL  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISIK  =ISIJ  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISIL  =ISIK  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISJK  =ISIL  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISJL  =ISJK  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ISKL  =ISJL  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      ILAST =ISKL  +( MODTYP**2       * MODTYP**2       )*MAXXYZ*3
      IADDR =ILAST
C
      RETURN
C
 9999 FORMAT(' FOR -G- FUNCTIONS , -NDER- MAY NOT BE GREATER THAN 1 ',
     1     /,' AS THE PROGRAM IS DIMENSIONED TO -9- RYS ROOTS. STOP ',
     2     /,' FOR HIGHER FUNCTIONS NO DERIVATIVES ARE AVAILABLE    ')
      END
C*MODULE HSS2   *DECK JKDHF
C>     @brief   driver for 2-electron hess
C>
C>     @details For CI
C>
C>    @author Yuji Imahuku
C>
C> @param    DA      Density matrix for alpha
C> @param    DB      density matrix for beta
C> @param    DC      density matrix for open
C> @param    DTOT    density matrix for total
C> @param    DSPN    density matrix for spin
C> @param    DSHL    D shell 
C> @param    IA      Indice for atomic orbital
C> @param    L1      number of atomic orbital
C> @param    L2      number of triangular matrix
C> @param    L3      number of triangular matrix
C> @param    HFSCF   HF
      SUBROUTINE JKDHF(DA,DB,DC,DTOT,DSPN,V,DSHL,IA,L1,L2,L3,HFSCF) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXAO=8192)
      LOGICAL NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,UROHF,
     *        GVBTYP,ROGVB,MCCI,GUGACI,HFSCF,CPROHF,POLAR
      COMMON /CIJDD / NDMAX,ND,MD
      COMMON /CHFINF/ CHFSLV,CPTYPE,NWDCHF,POLAR,NSPLIT
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM 
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /SCFPAR/ NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,
     *                UROHF,GVBTYP,ROGVB,MCCI,GUGACI
      DIMENSION DA(1),DB(1),DC(1),DTOT(1),DSPN(1),IA(1),V(L1,1),
     *          DSHL(L2,NHAM)
      DATA ZERO /0.0D+00/
      DATA TYPEAO/8HAO      /
C
      CPROHF= ROHFTYP.AND.CPTYPE.EQ.TYPEAO
C
      CALL DAREAD(IDAF,IODA,V,L3,15,0)
      IF(UHFTYP) CALL DAREAD(IDAF,IODA,V(1,L1+1),L3,19,0)
      IF(CPROHF) CALL DAREAD(IDAF,IODA,V(1,L1+1),L3,15,0)
C
C     ----- CLOSED-SHELL OR -UHF- CASE -----
C
C     ----- READ IN DENSITY MATRICES (ALPHA+BETA) -----
C     FOR RHF - DA=DTOT=TOTAL (ALPHA+BETA) DENSITY
C     FOR UHF,ROHF - DA=ALPHA, DB=BETA, DTOT=TOTAL, DSPN=SPIN DENSITY
C
      IF(HFSCF) THEN
         CALL DAREAD(IDAF,IODA,DA,L2,16,0)
         IF(UHFTYP .OR. ROHFTYP) THEN
            CALL DAREAD(IDAF,IODA,DB,L2,20,0)
            DO 100 I=1,L2
               DTOT(I)=DA(I)+DB(I)
               DSPN(I)=DA(I)-DB(I)
  100       CONTINUE
         ELSE
            CALL DCOPY(L2,DA,1,DTOT,1)
         END IF
      END IF
C
C     ----- -ROHF CASE -----
C
      IF(ROHFTYP) THEN
        IF(NOCORE) GO TO 200
        DO 190 I=1,L1
          DO 190 J=1,I
            DUM=ZERO
          DO 180 K=1,NCO
  180     DUM=DUM+V(I,K)*V(J,K)
          IJ=IA(I)+J
  190   DC(IJ)=DUM
C
  200 CONTINUE
      END IF
C
C     ----- GVB CASE -----
C
C     DA = DTOT = TOTAL (ALPHA+BETA) DENSITY
C     DC = CORE CONTRIBUTION TO DENSITY
C
      IF(GVBTYP) THEN
         CALL DAREAD(IDAF,IODA,DA,L2,16,0)
         CALL DAREAD(IDAF,IODA,DB,L2,20,0)
         CALL VADD(DA,1,DB,1,DTOT,1,L2)
         CALL DCOPY(L2,DTOT,1,DA,1)
         CALL DENCOR(DC,V,IA,L1)
      END IF
C
C     ----- SHELL CONTRIBUTIONS TO ONE BODY DENSITY -----
C
      IF(ROGVB) THEN
         DO 280 ISH=1,NHAM
            CALL DENSHL(V,DSHL(1,ISH),ISH,L1,L2)
  280    CONTINUE
      END IF
C
C     ----- MCSCF HESSIAN/CI GRADIENT CASE -----
C
C     THE 2 BODY DENSITY FOR CI GRADIENT WILL BE READ FROM FILE -NFT16-
C     CI GRADIENT IS READING THE -RHF- DENSITY MATRIX AT THIS POINT
C
      IF(MCCI.OR.GUGACI) THEN
         IF(GUGACI) THEN
            CALL DAREAD(IDAF,IODA,DA,L2,316,0)
            NFT16 = 16
            CALL SEQREW(NFT16)
         ELSE
            CALL DAREAD(IDAF,IODA,DA,L2,16,0)
         END IF
         CALL DCOPY(L2,DA,1,DTOT,1)
         ND = 0
         MD = 1
      END IF
      RETURN
      END
C*MODULE HSS2   *DECK MCINI
C>     @brief   driver for 2-electron hess
C>
C>     @details For CI
C>
C>    @author Yuji Imahuku
C>
C>    --- INPUT ---
C>  @param  V       V integral
C>  @param  DLAG    Density contribution
C>  @param  FCD     Fock derivative
C>  @param  HCD     H derivative
C>  @param  FVD     Fock derivative
C>  @param  GD      gradient integral 
C>  @param  DENC    Density 
C>  @param  TPDM    Transition denstiy
C>  @param  HBDM    HB density
C>  @param  IA      indices
C>  @param  L1      number of atomic orbital
C>  @param  L2      number of triangular matrix
C>  @param  L3      number of square matrix
C>  @param  NCOR    number of correation
C>  @param  NCI     number of CI
C>  @param  NNACT   number of active 
C>  @param  MIJKL   indices
C>  @param  NXYZ    number of coordinate
C>  @param  NFT18   record number
      SUBROUTINE MCINI(V,DLAG,FCD,HCD,FVD,GD,DENC,TPDM,HBDM,
     *                 IA,L1,L2,L3,NCOR,NCI,NNACT,MIJKL,NXYZ,NFT18)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL OUT,DBG
C
      PARAMETER (ZERO=0.0D+00,HALF=0.5D+00)
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /RESTAR/ TIMLIM,NREST,NREC,INTLOC,IST,JST,KST,LST
C
      DIMENSION V(L1,L1)
      DIMENSION DLAG(*),FCD(L2,NXYZ),HCD(NXYZ),FVD(L2,NXYZ),GD(*),
     *          DENC(L2),TPDM(NCI,NCI,NCI,NCI),HBDM(L2,NNACT)
      DIMENSION IA(L1)
C
C     READ IN THE MO VECTORS.
C
      CALL DAREAD(IDAF,IODA,V,L3,15,0)
C
      CALL SEQREW(NFT18)
      CALL VCLR(GD,1,MIJKL*NXYZ)
      CALL VCLR(DLAG,1,L1*L1*NXYZ)
      CALL VCLR(HCD,1,NXYZ)
      CALL VCLR(HBDM,1,L2*NNACT)
C
C     INITIALIZE DERIVATIVE CORE HAMILTONIAN AND
C     FOCK MATRICES
C
      DO 100 IXYZ=1,NXYZ
        CALL SQREAD(NFT18,FCD(1,IXYZ),L2)
        CALL VCLR(FVD(1,IXYZ),1,L2)
C
        DVAL = ZERO
        DO 80 M=1,L1
          DO 80 N=1,M
            MN = (M*M-M)/2 + N
            IF(NCOR.EQ.0) DENC(MN) = ZERO
            DLT = DENC(MN)
            IF(M.EQ.N) FCD(MN,IXYZ) = HALF*FCD(MN,IXYZ)
            DVAL = DVAL + DLT*FCD(MN,IXYZ)
   80   CONTINUE
C
        HCD(IXYZ) = DVAL
C
      IF(OUT) THEN
         WRITE(IW,*) 'H(A) FOR ATOM COORD',IXYZ
         CALL PRTRI(FCD(1,IXYZ),L1)
      END IF
  100 CONTINUE
C
C     CONSTRUCT HALF BACK-TRANSFORMED TWO-PARTICLE DENSITY MATRIX
C     OVER ACTIVE ORBITALS
C
      DO 500 M=1,L1
        DO 500 N=1,M
          MN = IA(M) + N
          DO 500 K=1,NCI
            DO 500 L=1,K
              KL = IA(K) + L
              DVAL = ZERO
              DO 400 I=1,NCI
                DO 400 J=1,NCI
                  DVAL = DVAL + V(M,I+NCOR)*V(N,J+NCOR)*TPDM(I,J,K,L)
  400         CONTINUE
              HBDM(MN,KL) = DVAL
  500 CONTINUE
C
      IST=1
      JST=1
      KST=1
      LST=1
      RETURN
      END
C*MODULE HSS2   *DECK JKDHND
C>     @brief   driver for 2-electron hess
C>
C>     @details For CI
C>
C>    @author Yuji Imahuku
C>
C>  @param  GCLB   2 electron Integral
C>  @param  NIJG   number of indice
C>  @param  DE     number of gradient
C>  @param  HE     hessian
C>  @param  FC     Force constant
C>  @param  DF     Derivative fock matrix
C>  @param  DDA    Density matrix A
C>  @param  DDB    Density matrix B
C>  @param  DDC    Density matrix for open
C>  @param  V      v integral
C>  @param  WRK    working
C>  @param   DTOT  total density
C>  @param  DSPN   spin density
C>  @param  DSHL   d shell
C>  @param  SHLJ   shell j
C>  @param  SHLK   shell k
C>  @param  DHAM   Density for Harmonic
C>  @param  EPSA   orbital energy
C>  @param  DM2    density matrix
C>  @param  IDM2   indice for density matrix
C>  @param  TX     Derivative term 
C>  @param  TY     Derivative term
C>  @param  TZ     Derivative term
C>  @param  UX     Derivative term 
C>  @param  UY     Derivative term
C>  @param  UZ     Derivative term
C>  @param  MAXSHL Max shell
C>  @param  NBUF   number of atomic orbital
C>  @param  NC     number of cartesian coordinate
C>  @param  L1     number of atomic orbital
C>  @param  L2     number of triangular matrix
C>  @param  NFT18  number of record
C>
      SUBROUTINE JKDHND(GCLB,NIJG,DE,HE,FC,DF,DDA,DDB,DDC,V,WRK,
     1 DTOT,DSPN,DSHL,SHLJ,SHLK,DHAM,EPSA,DM2,IDM2,TX,TY,TZ,UX,UY,UZ,
     2 MAXSHL,NBUF,NC,L1,L2,NFT18)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGSH =30,MXGSH2=MXGSH*MXGSH)
      PARAMETER (MXGTOT=20000, MXSH=5000, MXATM=2000, MXAO=8192)
      PARAMETER (MXGRID=10)
      LOGICAL MORE
      LOGICAL SP
      LOGICAL SPSKIP,PACK2E
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,UROHF,
     *        GVBTYP,ROGVB,MCCI,GUGACI 
      LOGICAL IEQJ0,KEQL0,SAME0,FIRST
      LOGICAL GOPARR,DSKWRK,MASWRK,NXT
      LOGICAL FIRSTX,SECND,CPHF,BOTH,MFIRST,MSECND,MCPHF
      LOGICAL LCFLAG,LRINT,SG1
      COMMON /DERMEM/ IWFN,ICLB,INIJG,IGINT,IFINT,ISINT,IIJKLG,
     1 IDAB,ICHRG,IXY,IXZ,IYZ,IX,IY,IZ,ISJ,ISK,ISL,IGIJKL,IGNKL,IGNM,
     2 IDIJ,IDKL,IB00,IB01,IB10,IC00,ID00,IF00,
     3 IAAI,IAAJ,IBBK,IBBL,IFI,IFJ,IFK,IFL,
     4 ISII,ISJJ,ISKK,ISLL,ISIJ,ISIK,ISIL,ISJK,ISJL,ISKL,
     5 IDIJSI,IDIJSJ,IDKLSK,IDKLSL,IABV,ICV,IRW
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DFGRID/ DFTTHR,DFTGTHR,SWOFF,SW0,BSLRD(137),NDFTFG,
     *                NRAD,NTHE,NPHI,NRAD0,NTHE0,NPHI0,
     *                NANGPT(MXGRID),NANGPT0(MXGRID),SG1,JANSC
      COMMON /DSHDAB/ DABTOL,DABMAX
      COMMON /FMCOM / X(1)
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM 
      COMMON /HSSPAR/ FIRSTX,SECND,CPHF,BOTH,MFIRST,MSECND,MCPHF
      COMMON /IJDCHR/ ADCHRG(13,MXGSH2),DASI(MXGSH2),DASJ(MXGSH2),NIJ
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /INTFIL/ NINTMX,NHEX,NTUPL,PACK2E,INTTYP,IGRDTYP
      COMMON /INTHND/ SPSKIP
      COMMON /INTXYZ/ MAXXYZ,NUMXYZ
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /JKSTAT/ LVEC,NVEC
      COMMON /KLDCHR/ BDCHRG(13,MXGSH2),DBSK(MXGSH2),DBSL(MXGSH2),NKL
      COMMON /MCPAR / NFZC,NMCCOR,NCI,NOC,NORBX,NUM1     
      COMMON /NLRC  / LCFLAG,EMU,EMU2,LRFILE
      COMMON /NLRCF / LRINT
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /RESTAR/ TIMLIM,NREST,NREC,INTLOC,IST,JST,KST,LST
      COMMON /SCFPAR/ NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,
     *                UROHF,GVBTYP,ROGVB,MCCI,GUGACI
      COMMON /SHLFAC/ QQ4
      COMMON /SHLOLD/ NUMI0,NUMJ0,NUMK0,NUML0,
     1                IEQJ0,KEQL0,SAME0,FIRST
      COMMON /SYMTRY/ MAPSHL(MXSH,48),MAPCTR(MXATM,48),
     *                T(432),INVT(48),NT
      COMMON /TMVALS/ TI,TXX,TIM
C
      DIMENSION DE(3,NAT),HE(1),FC(NC,1),DF(L2,1)
      DIMENSION DDA(1),DDB(1),DDC(1),DTOT(1),DSPN(1),V(1)
      DIMENSION WRK(1),DSHL(L2,NHAM),SHLJ(L2,NHAM,NC),SHLK(L2,NHAM,NC)
      DIMENSION DHAM(3,3,NAT),EPSA(L1*L1)
      DIMENSION DM2(1),IDM2(1),GCLB(1),NIJG(2,1)
      DIMENSION M0(48),M1(48),M2(48),M3(48)
      DIMENSION TX(35,35),TY(35,35),TZ(35,35),
     *          UX(35,35),UY(35,35),UZ(35,35) 
      DATA TENM10 /1.0D-10/
      DATA TENM09 /1.0D-09/
      DATA SDEFAULT/8HDEFAULT /
C
      CALTYP = SDEFAULT
C
      LVEC=0
      NVEC=0
C
      L3 = L1*L1
      IF(ROGVB) THEN
         CALL VCLR(SHLJ,1,L2*NHAM*NC)
         CALL VCLR(SHLK,1,L2*NHAM*NC)
      END IF
C
      IF(MCCI) THEN
         NTSV = NT
         NT = 0
         NNACT = (NCI**2+NCI)/2
         MIJKL = (NNACT**2+NNACT)/2
         CALL BASCHK(LMAX)
         IF(LMAX.GE.5) THEN
            IF(MASWRK) WRITE(IW,*)
     *           '2ND DERIVATIVE INTEGRALS CODED FOR SPDFG ONLY'
            CALL ABRT
         END IF
C      
         LTPDM = 1     + NBUF*NINTMX
         LHBDM = LTPDM + (NCI*NCI)*(NCI*NCI)
         LHCD  = LHBDM + L2*NNACT
         LDLAG = LHCD  + NC
         LGD   = LDLAG + L3*NC
C      
         LFVD  = 1
         LFQDM = LFVD  + L2*NC
         LHDM  = LFQDM + MAXSHL*(NCI**3)
         LTQDM = LHDM  + (MAXSHL**2)*(NCI**2)
         LBTDM = LTQDM + NCI*(MAXSHL**3)
         LTBDM = LBTDM + MAXSHL**4
C      
         CALL VCLR(DM2(LDLAG),1,L3*NC)
         CALL VCLR(DM2(LGD),1,MIJKL*NC)
         CALL VCLR(IDM2(LFVD),1,L2*NC)
         CALL VCLR(IDM2(LFQDM),1,MAXSHL*(NCI**3))
         CALL VCLR(IDM2(LHDM),1,(MAXSHL**2)*(NCI**2))
         CALL VCLR(IDM2(LTQDM),1,NCI*(MAXSHL**3))
         CALL VCLR(IDM2(LBTDM),1,MAXSHL**4)
         CALL VCLR(IDM2(LTBDM),1,MAXSHL*MAXSHL*NCI*MAXSHL*4)
      END IF
C
C     ----- TWO-ELECTRON INTEGRALS DERIVATIVES -----
C
      DABTOL=TENM10
      CUTOFF=TENM09
      MORE=.FALSE.
C
      NUMI0=0
      NUMJ0=0
      NUMK0=0
      NUML0=0
      IEQJ0=.FALSE.
      KEQL0=.FALSE.
      SAME0=.FALSE.
      FIRST=.FALSE.
C
C     NOW THIS CODE CAN'T USE SYMMETRY 
C
      CALL SYMOFF
C
C     ----- INITIALIZATION FOR PARALLEL WORK -----
C
      NXT = IBTYP.EQ.1
      IPCOUNT = ME - 1
      NEXT = -1
      MINE = -1
C
      IF(.NOT.UROHF) NNXYZ = NC
      IF(UROHF)      NNXYZ = NC * 2
C
      IF(.NOT.LCFLAG.OR.LRINT) THEN
       IF(GOPARR) CALL DSCAL(NC,      1.0D+00/NPROC,DE,1)
       IF(GOPARR) CALL DSCAL(NC*NC,   1.0D+00/NPROC,FC,1)
       IF(GOPARR) CALL DSCAL(NNXYZ*L2,1.0D+00/NPROC,DF,1)
      END IF
C
C     ----- ISHELL -----
C
      IF(IST.GT.NSHELL) GO TO 9100
      DO 9010 II=IST,NSHELL
      IIMOD=II
C
      DO 110 IT=1,NT
         ID=MAPSHL(II,IT)
         IF(ID.GT.II) GO TO 9000
         M0(IT)=ID
  110 CONTINUE
C
      IF(NCI.GT.0.AND.MCCI)
     1 CALL DABMCI(V,DM2(LTPDM),IDM2(LFQDM),NCI,
     2             IIMOD,NUM,MAXSHL,NMCCOR)
C
C     ----- JSHELL -----
C
      J0=JST
      DO 8000 JJ=J0,II
      JJMOD=JJ
      JST=1
C
      DO 220 IT=1,NT
         ID=M0(IT)
         JD=MAPSHL(JJ,IT)
         IF(JD.GT.II) GO TO 8000
         IF(ID.GE.JD) GO TO 210
         ND=ID
         ID=JD
         JD=ND
  210    IF(ID.EQ.II.AND.JD.GT.JJ) GO TO 8000
         M1(IT)=ID
         M2(IT)=JD
  220 CONTINUE
C
      IF(NCI.GT.0.AND.MCCI)
     1 CALL DABMCJ(V,IDM2(LFQDM),IDM2(LHDM),NCI, 
     2             IIMOD,JJMOD,NUM,MAXSHL,NMCCOR)
C
C           GO PARALLEL!
C
      IF (NXT  .AND.  GOPARR) THEN
         MINE = MINE + 1
         IF (MINE.GT.NEXT) CALL DDI_DLBNEXT(NEXT)
         IF (NEXT.NE.MINE) GO TO 8000
      END IF
C
C     ----- GET -IJ- CHARGE DISTRIBUTION -----
C
      IIJJ=IA(MAX0(IIMOD,JJMOD))+MIN0(IIMOD,JJMOD)
      NIJ0=NIJG(1,IIJJ)
      NIJ =NIJG(2,IIJJ)
      IF(NIJ.EQ.0) GO TO 8000
      CALL ONERD(X(ICHRG),NIJ0,ADCHRG,DASI,DASJ,NIJ) 
C
C     ----- KSHELL -----
C
      K0=KST
      DO 7000 KK=K0,II
      KKMOD=KK
      KST=1
C
      DO 310 IT=1,NT
         KD=MAPSHL(KK,IT)
         IF(KD.GT.II) GO TO 7000
         M3(IT)=KD
  310 CONTINUE
C
      IF(NCI.GT.0.AND.MCCI)
     1 CALL DABMCK(V,IDM2(LHDM),IDM2(LTQDM),NCI,
     2             IIMOD,JJMOD,KKMOD,NUM,MAXSHL,NMCCOR)
C
C     ----- LSHELL ----
C
      MAXLL=KK
      IF(KK.EQ.II) MAXLL=JJ
      L0=LST
      DO 6000 LL=L0,MAXLL
      LLMOD=LL
      LST=1
C
      N4=0
      DO 430 IT=1,NT
         LD=MAPSHL(LL,IT)
         IF(LD.GT.II) GO TO 6000
         KD=M3(IT)
         IF(KD.GE.LD) GO TO 410
         ND=KD
         KD=LD
         LD=ND
  410    ID=M1(IT)
         JD=M2(IT)
         IF(ID.NE.II.AND.KD.NE.II) GO TO 430
         IF(KD.LT.ID) GO TO 420
         IF(KD.EQ.ID.AND.LD.LE.JD) GO TO 420
         ND=ID
         ID=KD
         KD=ND
         ND=JD
         JD=LD
         LD=ND
  420    IF(JD.LT.JJ) GO TO 430
         IF(JD.GT.JJ) GO TO 6000
         IF(KD.LT.KK) GO TO 430
         IF(KD.GT.KK) GO TO 6000
         IF(LD.LT.LL) GO TO 430
         IF(LD.GT.LL) GO TO 6000
         N4=N4+1
  430 CONTINUE
C
C           GO PARALLEL!
C
      IF(.NOT.NXT .AND. GOPARR) THEN
         IPCOUNT = IPCOUNT + 1
         IF(MOD(IPCOUNT,NPROC).NE.0) GO TO 6000
      END IF
C
      IF(MCCI) THEN
        Q4 = 1.0D+00
      ELSE
        Q4 = DBLE(NT)/DBLE(N4)
      END IF
      QQ4 = Q4
C
C     ----- CHECK -SP- TYPE -----
C
      SP=KTYPE(IIMOD).LE.2.AND.KTYPE(JJMOD).LE.2.AND.
     1   KTYPE(KKMOD).LE.2.AND.KTYPE(LLMOD).LE.2
      IF(SP.AND.SPSKIP) GO TO 6000
C
C     ----- CHECK INTEGRAL BOUNDS -----
C
      IJIJ=IA(MAX0(IIMOD,JJMOD))+MIN0(IIMOD,JJMOD)
      KLKL=IA(MAX0(KKMOD,LLMOD))+MIN0(KKMOD,LLMOD)
      GMAX= SQRT(GCLB(IJIJ)*GCLB(KLKL))
      IF(GMAX.LT.CUTOFF) GO TO 6000
C
C     ----- GET -KL- CHARGE DISTRIBUTION -----
C
      KKLL=IA(MAX0(KKMOD,LLMOD))+MIN0(KKMOD,LLMOD)
      NKL0=NIJG(1,KKLL)
      NKL =NIJG(2,KKLL)
      IF(NKL.EQ.0) GO TO 6000
      CALL ONERD(X(ICHRG),NKL0,BDCHRG,DBSK,DBSL,NKL) 
C
C     ----- SELECT CENTERS FOR DERIVATIVES -----
C
      ISH=IIMOD
      JSH=JJMOD
      KSH=KKMOD
      LSH=LLMOD
C
      CALL JKDIAT(ISH,JSH,KSH,LSH)          
C
      IF(SKIPI.AND.SKIPJ.AND.SKIPK.AND.SKIPL) GO TO 6000
C
C     ----- SET INDICES FOR SHELL BLOCK -----
C
      CALL JKDISH(ISH,JSH,KSH,LSH)         
C
      CALL JKDIDX(X(IIJKLG))              
C
C     ----- FORM PRODUCTS OF DENSITY MATRIX ELEMENTS -----
C           SKIP CALCULATION IF DABMAX.LT.DABTOL
C
      IF(RHFTYP .OR. UROHF  .AND. .NOT.ROGVB)
     *   CALL DENCLU(ISH,JSH,KSH,LSH,Q4,RHFTYP,IA,DTOT,DSPN,
     *               X(IDAB),DABMAX) 
C
      IF(.NOT.MCCI.AND.ROHFTYP.AND..NOT.UROHF)
     1 CALL DENROH(ISH,JSH,KSH,LSH,Q4,NOCORE,NOOPEN,
     2 IA,DDC,V,L1,X(IDAB),DABMAX)
C
      IF(.NOT.MCCI.AND.GVBTYP)
     1 CALL DENGVB(ISH,JSH,KSH,LSH,Q4,NOCORE,NOOPEN,NOPAIR,  
     2 IA,DDC,V,L1,X(IDAB),DABMAX)
C
C     IF(CIM) CALL DABCI(ISH,JSH,KSH,LSH,NBUF,DM2,IDM2,X(IDAB),DABMAX)
C     IF(MP2) CALL DABMP(ISH,JSH,KSH,LSH,DM2,V,DDA,DDB,X(IDAB),DABMAX,
C    1                   L2,L1)
C
      IF(GUGACI) THEN
        WRITE(*,*) 'NOW GUGACI GRADIENT CALCULATION CANT RUN'
        CALL ABRT
        CALL DENGCI(ISH,JSH,KSH,LSH,DM2(1),IDM2(1),X(IDAB),DABMAX)
      END IF 
C
      IF(MCCI) THEN
        IF(NCI.GT.0)
     1  CALL DABMCL(V,IDM2(LTQDM),IDM2(LBTDM),NCI,
     2             IIMOD,JJMOD,KKMOD,LLMOD,NUM,MAXSHL,NMCCOR)
C
        CALL DENMC(ISH,JSH,KSH,LSH,Q4,DDB,DDC,IDM2(LBTDM),NMCCOR,
     1           NCI,MAXSHL,X(IDAB),DABMAX)
      ENDIF
C
      IF(DABMAX.LT.DABTOL) GO TO 6000
C
C     ----- CONTRIBUTION TO MCCI FOCK DERIVATIVE MATRIX -----
C
      IF(MCCI) THEN
        CALL MCTRN(IDM2(LTBDM),V,DM2(LHBDM),L1,L2,
     *             II,JJ,KK,LL)
      END IF
C
C     ----- (II,JJ//KK,LL) -----
C
      CALL JKDCAL(X(IFINT),X(IIJKLG),  
     1 X(IGIJKL),X(IGNKL),X(IGNM),
     2 X(IXY ),X(IXZ ),X(IYZ ),X(IX  ),X(IY  ),X(IZ  ),
     3 X(ISJ ),X(ISK ),X(ISL ),
     4 X(IB00),X(IB01),X(IB10),X(IC00),X(ID00),X(IF00),
     5 X(IDIJ),X(IDKL),X(IDIJSI),X(IDIJSJ),X(IDKLSK),X(IDKLSL),
     6 X(IABV),X(ICV ),X(IRW ),
     7 X(IAAI),X(IAAJ),X(IBBK),X(IBBL),
     8 X(IFI ),X(IFJ ),X(IFK ),X(IFL ),
     9 X(ISII),X(ISJJ),X(ISKK),X(ISLL),
     1 X(ISIJ),X(ISIK),X(ISIL),X(ISJK),X(ISJL),X(ISKL),
     2 X(IDAB),MAXXYZ,DE,FC,NC,DF,IDM2(LFVD),L2,L1,
     3 DDA,DDB,DDC,DSHL,SHLJ,SHLK,V,DM2(LGD),DM2(LDLAG),IDM2(LTBDM))
C
 6000 CONTINUE
 7000 CONTINUE
 8000 CONTINUE
 9000 CONTINUE
C
      CALL JKDEND(II)
      CALL TSECND(TIM)
      IF(TIM.GE.TIMLIM) GO TO 9200
 9010 CONTINUE
C
      IF(MCCI) NT = NTSV
C
 9100 CONTINUE
C
C     ----- END OF *SHELL* LOOPS -----
      IF(LCFLAG.AND.LRINT) THEN
        IF (GOPARR.AND.NXT) CALL DDI_DLBRESET
        return
      END IF
C
      IF(GOPARR) THEN 
        IF(NXT) CALL DDI_DLBRESET
        CALL DDI_GSUMF(1620,DE,NC)
        CALL DDI_GSUMF(1621,FC,NC*NC)
        IF (.NOT.ROGVB) THEN
          CALL DDI_GSUMF(1622,DF  ,L2*NNXYZ)
          IF(MCCI) THEN
            CALL DDI_GSUMF(1623,DM2(LDLAG),L3*NNXYZ)   
            CALL DDI_GSUMF(1624,DM2(LFVD),L2*NNXYZ)
            CALL DDI_GSUMF(1625,DM2(LGD),MIJKL*NNXYZ)
          END IF
        ELSE
          CALL DDI_GSUMF(1626,SHLJ,L2*NHAM*NNXYZ)
          CALL DDI_GSUMF(1627,SHLK,L2*NHAM*NNXYZ)
        END IF
      END IF
C
c      IF(BDEFAULT) THEN
         IF(MFIRST) CALL SYMEG(DE)
         IF(MSECND) THEN 
            NHE = 9*(NAT*NAT+NAT)/2
            CALL VCLR(HE,1,NHE)
            CALL HSSWAB(HE,FC,NAT)
            CALL SYMEH(HE)
         END IF 
c      END IF
C
      IF(.NOT. MCCI) THEN
         IF(MCPHF) CALL DGLFCK(NNXYZ,DF,L2,L1)
C
         IF(RHFTYP .OR. GUGACI) CALL SYMDF(DF,L2,1,3,NAT,1,1,2,3,
     *                                     TX,TY,TZ,UX,UY,UZ)
         IF(urohf) CALL SYMDF(DF,L2,1,6,NAT,1,1,2,3,
     *                         TX,TY,TZ,UX,UY,UZ)
         IF(urohf) CALL SYMDF(DF,L2,1,6,NAT,1,4,5,6,
     *                         TX,TY,TZ,UX,UY,UZ)
C
      IF(ROGVB) THEN
         IISH = NHAM*NC
         CALL DGLFCK(IISH,SHLJ,L2,L1)
         CALL DGLFCK(IISH,SHLK,L2,L1)
         DO 9160 ISH=1,NHAM
            CALL SYMDF(SHLJ,L2,NHAM,3,NAT,ISH,1,2,3,
     *                      TX,TY,TZ,UX,UY,UZ)
            CALL SYMDF(SHLK,L2,NHAM,3,NAT,ISH,1,2,3,
     *                      TX,TY,TZ,UX,UY,UZ)
 9160    CONTINUE
      END IF
C
C     ----- IF FINISHED, THEN SYMMETRIZE AND SAVE -----
C
      I36 = 3
      IF(urohf) I36 = 6
      IF(NDFTFG.NE.1)
     *   CALL DDEFNL(CALTYP,DE,HE,DF,V,DDA,
     *            WRK,SHLJ,SHLK,DHAM,EPSA,IA,MCPHF,
     *            NFT18,I36,NAT,NHAM,NQMT,L1,L2,L3)
C
      END IF
C
      IF(MCCI) THEN
        CALL MCFNL(DE,HE,DE,DM2(LDLAG),DF,DM2(LHCD),DM2(LGD),
     *             IDM2(LFVD),V,DTOT,IA,DDA,WRK,L1,L2,NAT,
     *             NMCCOR,NCI,MIJKL,NFT18)
      END IF
C
      AVGVEC=DBLE(LVEC)/DBLE(NVEC)
      IF(MORE) WRITE(IW,9999) NVEC,AVGVEC
 9200 CONTINUE
      RETURN
 9999 FORMAT(' # OF VECTORS = ',I10,' AVERAGE VECTOR LENGTH = ',F10.1)
      END
C*MODULE HSS2   *DECK JKDIAT
C>     @brief   driver for 2-electron hess
C>
C>     @details JKDIAT
C>
C>    @author Yuji Imahuku
C>    @param    II indice 
C>    @param    JJ indice 
C>    @param    KK indice 
C>    @param    LL indice 
C>
      SUBROUTINE JKDIAT(II,JJ,KK,LL)     
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL IANDJ,IANDK,IANDL,JANDK,JANDL,KANDL
      LOGICAL OUT,DBG
C
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERINV/ INVTYP
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
C
      SKIPI=.TRUE.
      SKIPJ=.TRUE.
      SKIPK=.TRUE.
      SKIPL=.TRUE.
      IIAT=KATOM(II)
      JJAT=KATOM(JJ)
      KKAT=KATOM(KK)
      LLAT=KATOM(LL)
      IANDJ=IIAT.EQ.JJAT
      IANDK=IIAT.EQ.KKAT
      IANDL=IIAT.EQ.LLAT
      JANDK=JJAT.EQ.KKAT
      JANDL=JJAT.EQ.LLAT
      KANDL=KKAT.EQ.LLAT
C
      IF(.NOT.IANDJ) GO TO 500
      IF(.NOT.IANDK) GO TO 200
      IF(.NOT.IANDL) GO TO 100
C
C     ----- IAT = JAT = KAT = LAT ----- (IAT,IAT/IAT,IAT) -----
C
      INVTYP=1
      GO TO 1500
  100 CONTINUE
C
C     ----- IAT = JAT = KAT ; LAT ----- (IAT,IAT/IAT,LAT) -----
C
      SKIPL=.FALSE.
      INVTYP=2
      GO TO 1500
  200 IF(.NOT.IANDL) GO TO 300
C
C     ----- IAT = JAT = LAT ; KAT ----- (IAT,IAT/KAT,IAT) -----
C
      SKIPK=.FALSE.
      INVTYP=3
      GO TO 1500
  300 IF(.NOT.KANDL) GO TO 400
C
C     ----- IAT = JAT ; KAT = LAT ----- (IAT,IAT/KAT,KAT) -----
C
      SKIPK=.FALSE.
      SKIPL=.FALSE.
      INVTYP=4
      GO TO 1500
  400 CONTINUE
C
C     ----- IAT = JAT ; KAT ; LAT ----- (IAT,IAT/KAT,LAT) -----
C
      SKIPK=.FALSE.
      SKIPL=.FALSE.
      INVTYP=5
      GO TO 1500
  500 IF(.NOT.IANDK) GO TO 800
      IF(.NOT.IANDL) GO TO 600
C
C     ----- IAT = KAT = LAT ; JAT ----- (IAT,JAT/IAT,IAT) -----
C
      SKIPJ=.FALSE.
      INVTYP=6
      GO TO 1500
  600 IF(.NOT.JANDL) GO TO 700
C
C     ----- IAT = KAT ; JAT = LAT ----- (IAT,JAT/IAT,JAT) -----
C
      SKIPJ=.FALSE.
      SKIPL=.FALSE.
      INVTYP=7
      GO TO 1500
  700 CONTINUE
C
C     ----- IAT = KAT ; JAT ; LAT ----- (IAT,JAT/IAT,LAT) -----
C
      SKIPJ=.FALSE.
      SKIPL=.FALSE.
      INVTYP=8
      GO TO 1500
  800 IF(.NOT.IANDL) GO TO 1000
      IF(.NOT.JANDK) GO TO 900
C
C     ----- IAT = LAT ; JAT = KAT ----- (IAT,JAT/JAT,IAT) -----
C
      SKIPJ=.FALSE.
      SKIPK=.FALSE.
      INVTYP=9
      GO TO 1500
  900 CONTINUE
C
C     ----- IAT = LAT ; JAT , KAT ----- (IAT,JAT/KAT,IAT) -----
C
      SKIPJ=.FALSE.
      SKIPK=.FALSE.
      INVTYP=10
      GO TO 1500
 1000 IF(.NOT.JANDK) GO TO 1200
      IF(.NOT.JANDL) GO TO 1100
C
C     ----- IAT ; JAT = JAT = JAT ----- (IAT,JAT/JAT,JAT) -----
C
      SKIPI=.FALSE.
      INVTYP=11
      GO TO 1500
 1100 CONTINUE
C
C     ----- IAT ; JAT = KAT ; LAT ----- (IAT,JAT/JAT,LAT) -----
C
      SKIPI=.FALSE.
      SKIPL=.FALSE.
      INVTYP=12
      GO TO 1500
 1200 IF(.NOT.JANDL) GO TO 1300
C
C     ----- JAT = LAT ; IAT ; KAT ----- (IAT,JAT/KAT,JAT) -----
C
      SKIPI=.FALSE.
      SKIPK=.FALSE.
      INVTYP=13
      GO TO 1500
 1300 IF(.NOT.KANDL) GO TO 1400
C
C     ----- KAT = LAT ; IAT ; JAT ----- (IAT,JAT/KAT,KAT) -----
C
      SKIPI=.FALSE.
      SKIPJ=.FALSE.
      INVTYP=14
      GO TO 1500
 1400 CONTINUE
C
C     ----- IAT ; JAT ; KAT ; LAT ----- (IAT,JAT/KAT,LAT) -----
C
      SKIPI=.FALSE.
      SKIPJ=.FALSE.
      SKIPK=.FALSE.
      INVTYP=15
C
 1500 CONTINUE
C
      IF(.NOT.DBG) RETURN
      WRITE(IW,9999) II,JJ,KK,LL,SKIPI,SKIPJ,SKIPK,SKIPL
      RETURN
 9999 FORMAT(/,' -- II,JJ,KK,LL =',4I3,' SKIP1,2,3,4 =',4L3)
      END
C*MODULE HSS2   *DECK JKDISH
C>     @brief   driver for 2-electron hess
C>
C>     @details JKDIAT
C>
C>    @author Yuji Imahuku
C>    @param   ISH indice 
C>    @param   JSH indice 
C>    @param   KSH indice 
C>    @param   LSH indice 
      SUBROUTINE JKDISH(ISH,JSH,KSH,LSH) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL EXPNDI,EXPNDK
C
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /NUMSHL/ NUMI,NUMJ,NUMK,NUML,IJ,KL,IJKL
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLXPN/ EXPNDI,EXPNDK
C
      IIEQJJ=ISH.EQ.JSH
      KKEQLL=KSH.EQ.LSH
      IJEQKL=ISH.EQ.KSH.AND.JSH.EQ.LSH
      IJGTKL=MAX0(ISH,JSH).GT.MAX0(KSH,LSH)
      IJLTKL=MAX0(ISH,JSH).LT.MAX0(KSH,LSH)
C
C     ----- ISHELL -----
C
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      NUMI=MAXI-MINI+1
      LOCI=KLOC(ISH)-MINI
      SPI=LIT.EQ.2.AND.MINI.EQ.1
C
C     ----- JSHELL -----
C
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      NUMJ=MAXJ-MINJ+1
      LOCJ=KLOC(JSH)-MINJ
      SPJ=LJT.EQ.2.AND.MINJ.EQ.1
      SPIJ=SPI.OR.SPJ
      EXPNDI=LIT.GE.LJT
C
C     ----- KSHELL -----
C
      LKT=KTYPE(KSH)
      MINK=KMIN(KSH)
      MAXK=KMAX(KSH)
      NUMK=MAXK-MINK+1
      LOCK=KLOC(KSH)-MINK
      SPK=LKT.EQ.2.AND.MINK.EQ.1
C
C     ----- LSHELL -----
C
      LLT=KTYPE(LSH)
      MINL=KMIN(LSH)
      MAXL=KMAX(LSH)
      NUML=MAXL-MINL+1
      LOCL=KLOC(LSH)-MINL
      SPL=LLT.EQ.2.AND.MINL.EQ.1
      SPKL=SPK.OR.SPL
      SPIJKL=SPIJ.OR.SPKL
      EXPNDK=LKT.GE.LLT
C
      RETURN
      END
C*MODULE HSS2   *DECK JKDIDX
C>     @brief   driver for 2-electron hess
C>
C>     @details IJKLG
C>
C>    @author Yuji Imahuku
C>    @param   IJKLG indice 
      SUBROUTINE JKDIDX(IJKLG)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL IEQJ0,KEQL0,SAME0,FIRST
      COMMON /DERPAR/ IDER,JDER,KDER,LDER,NDER
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /NUMSHL/ NUMI,NUMJ,NUMK,NUML,IJ,KL,IJKL
      COMMON /ROOT  / XX,U(13),W(13),NROOTS
      COMMON /RYS   / YY,T(5),V(5),MROOTS    
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLLMN/ IGXYZ(4,35),JGXYZ(4,35),KGXYZ(4,35),LGXYZ(4,35)
      COMMON /SHLOLD/ NUMI0,NUMJ0,NUMK0,NUML0,
     1                IEQJ0,KEQL0,SAME0,FIRST
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
C
      DIMENSION IJKLX(35),IJKLY(35),IJKLZ(35)
      DIMENSION IJKLN(5)
      DIMENSION IJKLG(4,1)
C
      DATA IJKLN /   1,  4, 10, 20, 35/
      DATA IJKLX /   0,  1,  0,  0,  2,  0,  0,  1,  1,  0,
     1               3,  0,  0,  2,  2,  1,  0,  1,  0,  1,
     2               4,  0,  0,  3,  3,  1,  0,  1,  0,  2,
     3               2,  0,  2,  1,  1/
      DATA IJKLY /   0,  0,  1,  0,  0,  2,  0,  1,  0,  1,
     1               0,  3,  0,  1,  0,  2,  2,  0,  1,  1,
     2               0,  4,  0,  1,  0,  3,  3,  0,  1,  2,
     3               0,  2,  1,  2,  1/
      DATA IJKLZ /   0,  0,  0,  1,  0,  0,  2,  0,  1,  1,
     1               0,  0,  3,  0,  1,  0,  1,  2,  2,  1,
     2               0,  0,  4,  0,  1,  0,  1,  3,  3,  0,
     3               2,  2,  1,  1,  2/
C
      NUMI0=NUMI
      NUMJ0=NUMJ
      NUMK0=NUMK
      NUML0=NUML
      IEQJ0=IIEQJJ
      KEQL0=KKEQLL
      SAME0=IJEQKL
      FIRST=.FALSE.
C
      IDER=NDER
      JDER=NDER
      KDER=NDER
      LDER=NDER
      IF(SKIPI) IDER=0
      IF(SKIPJ) JDER=0
      IF(SKIPK) KDER=0
      IF(SKIPL) LDER=0
      LJTMOD=LJT + JDER
      LKTMOD=LKT + KDER
      LLTMOD=LLT + LDER
C
C     ----- PREPARE INDICES FOR PAIRS OF (I,J) FUNCTIONS -----
C
      NI=NUML*NUMK*NUMJ
      DO 10 I=MINI,MAXI
   10 IGXYZ(1,I)=NI*(I-MINI)+1
      LLKJT=LLTMOD*LKTMOD*LJTMOD
      DO 20 I=1,IJKLN(LIT)
      IGXYZ(2,I)=IJKLX(I)*LLKJT+1
      IGXYZ(3,I)=IJKLY(I)*LLKJT+1
   20 IGXYZ(4,I)=IJKLZ(I)*LLKJT+1
C
      NJ=NUML*NUMK
      DO 30 J=MINJ,MAXJ
   30 JGXYZ(1,J)=NJ*(J-MINJ)
      LLKT=LLTMOD*LKTMOD
      DO 40 J=1,IJKLN(LJT)
      JGXYZ(2,J)=IJKLX(J)*LLKT
      JGXYZ(3,J)=IJKLY(J)*LLKT
   40 JGXYZ(4,J)=IJKLZ(J)*LLKT
C
C     ----- PREPARE INDICES FOR PAIRS OF (K,L) FUNCTIONS -----
C
      NK=NUML
      DO 110 K=MINK,MAXK
  110 KGXYZ(1,K)=NK*(K-MINK)
      DO 120 K=1,IJKLN(LKT)
      KGXYZ(2,K)=IJKLX(K)*LLTMOD
      KGXYZ(3,K)=IJKLY(K)*LLTMOD
  120 KGXYZ(4,K)=IJKLZ(K)*LLTMOD
C
      NL=1
      DO 130 L=MINL,MAXL
  130 LGXYZ(1,L)=NL*(L-MINL)
      DO 140 L=1,IJKLN(LLT)
      LGXYZ(2,L)=IJKLX(L)
      LGXYZ(3,L)=IJKLY(L)
  140 LGXYZ(4,L)=IJKLZ(L)
C
C     ----- PREPARE INDICES FOR (IJ/KL) -----
C
      IJKL=0
      DO 240 I=MINI,MAXI
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 230 J=MINJ,JMAX
      KMAX=MAXK
      IF(IJEQKL) KMAX=I
      DO 220 K=MINK,KMAX
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 210 L=MINL,LMAX
      IJKL=IJKL+1
      NN=((IGXYZ(1,I)+JGXYZ(1,J))+KGXYZ(1,K))+LGXYZ(1,L)
      NX=((IGXYZ(2,I)+JGXYZ(2,J))+KGXYZ(2,K))+LGXYZ(2,L)
      NY=((IGXYZ(3,I)+JGXYZ(3,J))+KGXYZ(3,K))+LGXYZ(3,L)
      NZ=((IGXYZ(4,I)+JGXYZ(4,J))+KGXYZ(4,K))+LGXYZ(4,L)
      IJKLG(1,IJKL)=   NN
      IJKLG(2,IJKL)=3*(NX-1)+1
      IJKLG(3,IJKL)=3*(NY-1)+2
      IJKLG(4,IJKL)=3*(NZ-1)+3
  210 CONTINUE
  220 CONTINUE
  230 CONTINUE
  240 CONTINUE
C
C     ----- SET NUMBER OF QUADRATURE POINTS -----
C
      NROOTS=(LIT+LJT+LKT+LLT-2 + NDER )/2
      MROOTS=NROOTS
C
      RETURN
      END
C*MODULE HSS2   *DECK JKDCLR
C>     @brief   driver for 2-electron hess
C>
C>     @details IJKLG
C>
C>    @author Yuji Imahuku
C>    @param   FIJKL derivative elements 
C>    @param   IJKLG indices
      SUBROUTINE JKDCLR(FIJKL,IJKLG) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON/DERPAR/IDER,JDER,KDER,LDER,NDER
      COMMON/DERSHL/FD(12),SD(78)
      COMMON/NUMSHL/NUMI,NUMJ,NUMK,NUML,IJ,KL,IJKL
      DIMENSION FIJKL(12,1),IJKLG(4,1)
      DATA ZERO /0.0D+00/
C
      IF(NDER.EQ.0) RETURN
C
C     ----- ZERO OUT -FIJKL- -----
C
!      IF(NDER.NE.2) GO TO 35   
      DO 30 N=1,IJKL
      DO 20 M=1,12
      FIJKL(M,IJKLG(1,N))=ZERO
   20 CONTINUE
   30 CONTINUE
 
!   35 CONTINUE
      DO 40 I=1,12
   40 FD(I)=ZERO
      IF(NDER.EQ.1) RETURN
C
      DO 70 I=1,78
   70 SD(I)=ZERO
      RETURN
      END
C*MODULE HSS2   *DECK JKDCAL
C>     @brief   driver for 2-electron hess
C>
C>     @details derivative for 2 electron integral
C>
C>    @author Yuji Imahuku
C>    --- INPUT ---
C>   @param FINT     FINT     integral term
C>   @param IJKLG    IJKLG    indices
C>   @param GIJKL    GIJKL    2-electron integral for IJ
C>   @param GNKL     GNKL     2-electron integral for KL
C>   @param GNM      GNM      2-electron integral for KL
C>   @param XY       XY       derivative element
C>   @param XZ       XZ       derivative element
C>   @param YZ       YZ       derivative element
C>   @param X        X        derivative element
C>   @param Y        Y        derivative element
C>   @param Z        Z        derivative element
C>   @param SJ       SJ       derivative element
C>   @param SK       SK       derivative element
C>   @param SL       SL       derivative element
C>   @param B00      B00      derivative element
C>   @param B01      B01      derivative element
C>   @param B10      B10      derivative element
C>   @param C00      C00      derivative element
C>   @param D00      D00      derivative element
C>   @param F00      F00      derivative element
C>   @param DIJ      DIJ      derivative element
C>   @param DKL      DKL      derivative element
C>   @param DIJSI    DIJSI    derivative element
C>   @param DIJSJ    DIJSJ    derivative element
C>   @param DKLSK    DKLSK    derivative element
C>   @param DKLSL    DKLSL    derivative element
C>   @param ABV      ABV      derivative element
C>   @param CV       CV       derivative element
C>   @param RWV      RWV      derivative element
C>   @param AAI      AAI      derivative element
C>   @param AAJ      AAJ      derivative element
C>   @param BBK      BBK      derivative element
C>   @param BBL      BBL      derivative element
C>   @param FI       FI       derivative element
C>   @param FJ       FJ       derivative element
C>   @param FK       FK       derivative element
C>   @param FL       FL       derivative element
C>   @param MAXXYZ   MAXXYZ   maximum indice                 
C>   @param L2       number of triangular matrix  
C>   @param L1       number of orbital
C>   @param DAB      density matrix for K
C>   @param DDA      density matrix for alpha
C>   @param DDB      density matrix for beta
C>   @param DDC      density matrix for open
C>   @param DLAG     laglangian
C>   @param MAXXYZ   density matrix
C>   @param natij    number of atom
C>    --- OUTPUT ---
C>   @param DF       fock matrix                  
C>   @param DE       gradient element
      SUBROUTINE JKDCAL(FINT,IJKLG,   
     1 GIJKL,GNKL,GNM,XY,XZ,YZ,X,Y,Z,SJ,SK,SL,
     2 B00,B01,B10,C00,D00,F00,
     3 DIJ,DKL,DIJSI,DIJSJ,DKLSK,DKLSL,
     4 ABV,CV,RWV,AAI,AAJ,BBK,BBL,
     5 FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL,
     6 DAB,MAXXYZ,DE,FC,NC,DF,DFV,L2,L1,DDA,DDB,DDC,
     7 DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z) 
      PARAMETER (MXGSH =30,MXGSH2=MXGSH*MXGSH)
      PARAMETER (MXATM=2000, MXAO=8192)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL NMAXS,NMAXP,MMAXS,MMAXP
      LOGICAL EXPNDI,EXPNDK,OUT,DBG
      LOGICAL LCFLAG,LRINT
      LOGICAL FIRST
      LOGICAL LAST
      COMMON /DERPAR / IDER,JDER,KDER,LDER,NDER
      COMMON /DERSKP / IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DSHDAB / DABTOL,DABMAX
      COMMON /DSHLT  / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /GVBWFN / CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                 NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /IJDCHR / ADCHRG(13,MXGSH2),DASI(MXGSH2),DASJ(MXGSH2),NIJ
      COMMON /INTVECT/ MAXVEC,MINVEC
      COMMON /INFOA  / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                 ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /JKSTAT / LVEC,NVEC
      COMMON /KLDCHR / BDCHRG(13,MXGSH2),DBSK(MXGSH2),DBSL(MXGSH2),NKL
      COMMON /MCACT  / MAXSHL,NNACT,MIJKL
      COMMON /MCPAR  / NFZC,NMCCOR,NCI,NOCC,NORBX,NUM1
      COMMON /NLRC   / LCFLAG,EMU,EMU2,LRFILE
      COMMON /NLRCF / LRINT
      COMMON /ROOT   / XX,U(13),W(13),NROOTS
      COMMON /SHLFAC / QQ4
      COMMON /SHLGNM / NMAXS,NMAXP,MMAXS,MMAXP
      COMMON /SHLTYP / SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLPAR / LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                 MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      COMMON /SHLXPN / EXPNDI,EXPNDK
      DIMENSION FINT(12,1),IJKLG(4,1)
      DIMENSION XY(1),XZ(1),YZ(1),X(1),Y(1),Z(1),SJ(1),SK(1),SL(1)
      DIMENSION GIJKL(1),GNKL(1),GNM(1)
      DIMENSION DIJ(1),DKL(1),DIJSI(1),DIJSJ(1),DKLSK(1),DKLSL(1)
      DIMENSION FI(1),FJ(1),FK(1),FL(1)
      DIMENSION SII(1),SJJ(1),SKK(1),SLL(1)
      DIMENSION SIJ(1),SIK(1),SIL(1),SJK(1),SJL(1),SKL(1)
      DIMENSION B00(1),B01(1),B10(1),C00(1),D00(1),F00(1)
      DIMENSION AAI(1),AAJ(1),BBK(1),BBL(1)
      DIMENSION ABV(5,1),CV(18,1),RWV(2,1)
      DIMENSION DAB(1)
      DIMENSION DE(3,NAT),FC(NC,1),DF(L2,1),DFV(L2,1)
      DIMENSION DDA(1),DDB(1),DDC(1)
      DIMENSION DSHL(L2,NHAM),SHLJ(L2,NHAM,NC),SHLK(L2,NHAM,NC),V(1)
      DIMENSION GD(MIJKL,1),DLAG(NUM,NUM,1)
      DIMENSION TBDM(MAXSHL*MAXSHL,NCI*MAXSHL,4)
      DATA PI252  /34.986836655250D+00/
      DATA ONE    /1.0D+00/
      DATA TENM01 /1.0D-01/
C
      Q4=PI252*QQ4
      DABCUT=DABTOL*TENM01
C
      NIMAX=LIT + IDER
      NJMAX=LJT + JDER
      NKMAX=LKT + KDER
      NLMAX=LLT + LDER
      NMAX=LIT+LJT-1 + MIN0(IDER+JDER,NDER)
      MMAX=LKT+LLT-1 + MIN0(KDER+LDER,NDER)
      NMAXS=NMAX.EQ.1
      NMAXP=NMAX.LE.2
      MMAXS=MMAX.EQ.1
      MMAXP=MMAX.LE.2
C
      MAXG=MAXXYZ/NROOTS
      DTOL2=DTOL*DTOL
C
C     ----- PAIR OF K,L PRIMITIVES -----
C
      FIRST=.TRUE.
      NG=0
      KLG=0
  100 KLG=KLG+1
      IF(KLG.GT.NKL) GO TO 300
      DB=BDCHRG( 1,KLG)
      BB=BDCHRG( 2,KLG)
      XB=BDCHRG( 3,KLG)
      YB=BDCHRG( 4,KLG)
      ZB=BDCHRG( 5,KLG)
      XD=BDCHRG( 6,KLG)
      YD=BDCHRG( 7,KLG)
      ZD=BDCHRG( 8,KLG)
      DXKL=BDCHRG( 9,KLG)
      DYKL=BDCHRG(10,KLG)
      DZKL=BDCHRG(11,KLG)
      Q4DB=Q4*DB
C
C     ----- PAIR OF I,J PRIMITIVES -----
C
      IJG=0
  200 IJG=IJG+1
      IF(IJG.GT.NIJ) GO TO 100
      DA=ADCHRG( 1,IJG)
      AA=ADCHRG( 2,IJG)
      XA=ADCHRG( 3,IJG)
      YA=ADCHRG( 4,IJG)
      ZA=ADCHRG( 5,IJG)
      AANDB1=ONE/(AA+BB)
      Q4DBDA=Q4DB*DA
      DUM   =Q4DBDA*Q4DBDA*AANDB1
      IF(DUM.LE.DTOL2) GO TO 200
      Q4DBDA=Q4DBDA* SQRT(AANDB1)
      IF( ABS(Q4DBDA*DABMAX).LT.DABCUT) GO TO 200
      RHO   =AA*BB*AANDB1
      IF(LRINT) THEN
        RHO0 = RHO
        RHO  = RHO0*EMU2/(RHO0+EMU2)
      ENDIF
      XX=RHO*((XA-XB)**2+(YA-YB)**2+(ZA-ZB)**2)
C
      NG=NG+1
      ABV(1,NG)=AA
      ABV(2,NG)=BB
      ABV(3,NG)=RHO
      ABV(4,NG)=Q4DBDA
      ABV(5,NG)=XX
C
      XC=ADCHRG( 6,IJG)
      YC=ADCHRG( 7,IJG)
      ZC=ADCHRG( 8,IJG)
      DXIJ=ADCHRG( 9,IJG)
      DYIJ=ADCHRG(10,IJG)
      DZIJ=ADCHRG(11,IJG)
C
      AAI(NG)=ADCHRG(12,IJG)
      AAJ(NG)=ADCHRG(13,IJG)
      BBK(NG)=BDCHRG(12,KLG)
      BBL(NG)=BDCHRG(13,KLG)
C
      IF(MMAXS) GO TO 210
      CV( 1,NG)=AA*(XA-XD)
      CV( 2,NG)=BB*(XB-XD)
      CV( 3,NG)=AA*(YA-YD)
      CV( 4,NG)=BB*(YB-YD)
      CV( 5,NG)=AA*(ZA-ZD)
      CV( 6,NG)=BB*(ZB-ZD)
  210 IF(NMAXS) GO TO 220
      CV( 7,NG)=AA*(XA-XC)
      CV( 8,NG)=BB*(XB-XC)
      CV( 9,NG)=AA*(YA-YC)
      CV(10,NG)=BB*(YB-YC)
      CV(11,NG)=AA*(ZA-ZC)
      CV(12,NG)=BB*(ZB-ZC)
  220 CONTINUE
      CV(13,NG)=DXIJ
      CV(14,NG)=DYIJ
      CV(15,NG)=DZIJ
      CV(16,NG)=DXKL
      CV(17,NG)=DYKL
      CV(18,NG)=DZKL
      IF(SPI) DIJSI(NG)=DASI(IJG)
      IF(SPJ) DIJSJ(NG)=DASJ(IJG)
      IF(SPK) DKLSK(NG)=DBSK(KLG)
      IF(SPL) DKLSL(NG)=DBSL(KLG)
C
      IF(NG.LT.MAXG) GO TO 200
      LAST=.FALSE.
      GO TO 310
C
  300 CONTINUE
      LAST=.TRUE.
  310 CONTINUE
      NUMG=NG
      IF(NUMG.EQ.0) GO TO 1000
C
      IF(NROOTS.EQ.1) GO TO 480
      IF(.NOT.SPI) GO TO 420
      DO 410 IROOT=2,NROOTS
      DO 410 IG=1,NUMG
      DIJSI(IG+NUMG*(IROOT-1))=DIJSI(IG)
  410 CONTINUE
  420 IF(.NOT.SPJ) GO TO 440
      DO 430 IROOT=2,NROOTS
      DO 430 IG=1,NUMG
      DIJSJ(IG+NUMG*(IROOT-1))=DIJSJ(IG)
  430 CONTINUE
  440 IF(.NOT.SPK) GO TO 460
      DO 450 IROOT=2,NROOTS
      DO 450 IG=1,NUMG
      DKLSK(IG+NUMG*(IROOT-1))=DKLSK(IG)
  450 CONTINUE
  460 IF(.NOT.SPL) GO TO 480
      DO 470 IROOT=2,NROOTS
      DO 470 IG=1,NUMG
      DKLSL(IG+NUMG*(IROOT-1))=DKLSL(IG)
  470 CONTINUE
  480 CONTINUE
C
      IF(SKIPI) GO TO 520
      DO 510 IRXYZ=2,NROOTS*3
      DO 510 IG=1,NUMG
      AAI(IG+NUMG*(IRXYZ-1))=AAI(IG)
  510 CONTINUE
  520 IF(SKIPJ) GO TO 540
      DO 530 IRXYZ=2,NROOTS*3
      DO 530 IG=1,NUMG
      AAJ(IG+NUMG*(IRXYZ-1))=AAJ(IG)
  530 CONTINUE
  540 IF(SKIPK) GO TO 560
      DO 550 IRXYZ=2,NROOTS*3
      DO 550 IG=1,NUMG
      BBK(IG+NUMG*(IRXYZ-1))=BBK(IG)
  550 CONTINUE
  560 IF(SKIPL) GO TO 580
      DO 570 IRXYZ=2,NROOTS*3
      DO 570 IG=1,NUMG
      BBL(IG+NUMG*(IRXYZ-1))=BBL(IG)
  570 CONTINUE
  580 CONTINUE
C
      LVEC=LVEC+NUMG*NROOTS*3
      NVEC=NVEC+1
C
C     ----- COMPUTE ROOTS AND WEIGHTS FOR QUADRATURE -----
C
      CALL JKWRYS(RWV,ABV,NUMG)
C
C     ----- COMPUTE COEFFICIENTS FOR RECURSION FORMULAE -----
C
      CALL JKBCDF(B00,B01,B10,C00,D00,F00,DIJ,DKL,
     1            ABV,CV,RWV,NUMG,NROOTS)
C
C     ----- COMPUTE -X- , -Y- , -Z- INTEGRALS ( 2 CENTERS, 2-D ) -----
C
      IF(NUMG*NROOTS*3.LT.MINVEC)
     1 CALL JKGNMS(GNM,NUMG*NROOTS*3,NMAX,MMAX,
     2             B00,B01,B10,C00,D00,F00)
      IF(NUMG*NROOTS*3.GE.MINVEC)
     1 CALL JKGNMV(GNM,NUMG*NROOTS*3,NMAX,MMAX,
     2             B00,B01,B10,C00,D00,F00)
C
C     ----- COMPUTE -X- , -Y- , -Z- INTEGRALS ( 4 CENTERS, 2-D ) -----
C
      IF(NUMG*NROOTS*3.LT.MINVEC)
     1 CALL JKXYZS(GIJKL,GIJKL,GNKL,GNKL,GNKL,GNM,GNM,
     2 NUMG*NROOTS*3,NMAX,MMAX,NIMAX,NJMAX,NKMAX,NLMAX,DIJ,DKL,
     3 EXPNDI,EXPNDK)
      IF(NUMG*NROOTS*3.GE.MINVEC)
     1 CALL JKXYZV(GIJKL,GIJKL,GNKL,GNKL,GNKL,GNM,GNM,
     2 NUMG*NROOTS*3,NMAX,MMAX,NIMAX,NJMAX,NKMAX,NLMAX,DIJ,DKL,
     3 EXPNDI,EXPNDK)
C
C     ----- COMPUTE -X- , -Y- , -Z- INTEGRALS FOR DERIVATIVES -----
C
      IF(NUMG*NROOTS*3.LT.MINVEC)
     1 CALL DDXYZS(GIJKL,GIJKL,GIJKL,GIJKL,GIJKL,GIJKL,GIJKL,GIJKL, 
     2 NUMG*NROOTS*3,NIMAX,NJMAX,NKMAX,NLMAX,LIT,LJT,LKT,LLT,
     3 AAI,AAJ,BBK,BBL,
     4 FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL)
      IF(NUMG*NROOTS*3.GE.MINVEC)
     1 CALL DDXYZV(GIJKL,GIJKL,GIJKL,GIJKL,GIJKL,GIJKL,GIJKL,GIJKL, 
     2 NUMG*NROOTS*3,NIMAX,NJMAX,NKMAX,NLMAX,LIT,LJT,LKT,LLT,
     3 AAI,AAJ,BBK,BBL,
     4 FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL)
C
C     ----- ZERO OUT FIRST TIME AROUND -----
C
      IF(.NOT.FIRST) GO TO 600
      CALL JKDCLR(FINT,IJKLG)  
      FIRST=.FALSE.
  600 CONTINUE
C
C     ----- COMPUTE DERIVATIVE INTEGRALS -----
C
      IF(NDER .EQ. 1) THEN
C
      IF(NUMG*NROOTS.LT.MINVEC)
     1 CALL DINTS(NUMG,NROOTS,IJKLG,FINT,
     2 GIJKL,FI,FJ,FK,FL,
     3 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
      IF(NUMG*NROOTS.GE.MINVEC)
     1 CALL DINTV(NUMG,NROOTS,IJKLG,FINT,
     2 GIJKL,FI,FJ,FK,FL,
     3 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
C
      ELSE IF(NDER .EQ. 2) THEN      
C
      IF(NUMG*NROOTS.LT.MINVEC)
     1 CALL DDINTS(NUMG,NROOTS,IJKLG,FINT,
     2 GIJKL,FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL,
     3 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
      IF(NUMG*NROOTS.GE.MINVEC)
     1 CALL DDINTV(NUMG,NROOTS,IJKLG,FINT,
     2 GIJKL,FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL,
     3 XY,XZ,YZ,X,Y,Z,SJ,SK,SL,DIJSI,DIJSJ,DKLSK,DKLSL,DAB)
C
      END IF
C
      IF(LAST) GO TO 1000
      NG=0
      GO TO 200
 1000 CONTINUE
      IF(NUMG.EQ.0.AND.FIRST) RETURN
C
C     ----- PROCESS DERIVATIVE INTEGRALS -----
C
      IF(NDER .EQ. 1) THEN
         CALL JDINV (FINT,IJKLG,DE,NC,DF,DFV,L1,L2,
     *               DDA,DDB,DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
      ELSE IF (NDER .EQ. 2) THEN 
         CALL JDDINV(FINT,IJKLG,DE,FC,NC,DF,DFV,L1,L2,
     *               DDA,DDB,DDC,DSHL,SHLJ,SHLK,V,GD,DLAG,TBDM)
      END IF
C 
      RETURN
      END
C*MODULE HSS2   *DECK DDXYZV
C>
C>     @brief   Fock derivative matrix for 2-ei
C>     @details construct two integral elememnts
C>
C>     @author Yuji Imafuku
C>
C>   @param GI       integral for I
C>   @param GIJ      integral for IJ
C>   @param GIJK     integral for IJK
C>   @param GIJKL    integral for IJKL
C>   @param NG       number of indice
C>   @param NIMAX    max number of I
C>   @param NJMAX    max number of J
C>   @param NKMAX    max number of K
C>   @param NLMAX    max number of l
C>   @param NI       number of I
C>   @param NJ       number of J
C>   @param NK       number of K
C>   @param NL       number of L
C>   @param AAI      element of I integral
C>   @param AAJ      element of J integral
C>   @param AAK      element of K integral
C>   @param AAL      element of L integral
C>   @param FI       element of I integral
C>   @param FJ       element of J integral
C>   @param FK       element of K integral
C>   @param FL       element of L integral
C>   @param SII   derivative elements
C>   @param SJJ   derivative elements
C>   @param SKK   derivative elements
C>   @param SLL   derivative elements
C>   @param SIJ   derivative elements
C>   @param SIK   derivative elements
C>   @param SIL   derivative elements
C>   @param SJK   derivative elements
C>   @param SJL   derivative elements
C>   @param SKL   derivative elements
      SUBROUTINE DDXYZV(GI,GIJ,GIJK,GIJKL,HIJK,HIJKL,FIJK,FIJKL, 
     1 NG,NIMAX,NJMAX,NKMAX,NLMAX,NI,NJ,NK,NL,AAI,AAJ,AAK,AAL,
     2 FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL IS,JS,KS,LS,IP,JP,KP,LP
      COMMON /DERPAR/ IDER,JDER,KDER,LDER,NDER
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
C
C     ----- VERSION 1 -----
C
      DIMENSION GIJKL(NG,NLMAX,NKMAX*NJMAX*NIMAX)
      DIMENSION  GIJK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION   GIJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION    GI(NG,NLMAX*NKMAX*NJMAX,NIMAX)
      DIMENSION HIJKL(NG,NLMAX,NKMAX*NJMAX,NIMAX)
      DIMENSION  HIJK(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION FIJKL(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION  FIJK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION   AAI(NG)
      DIMENSION   AAJ(NG)
      DIMENSION   AAK(NG)
      DIMENSION   AAL(NG)
      DIMENSION    FI(NG,NLMAX*NKMAX*NJMAX,NIMAX)
      DIMENSION    FJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION    FK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION    FL(NG,NLMAX,NKMAX*NJMAX*NIMAX)
      DIMENSION   SII(NG,NLMAX*NKMAX*NJMAX,NIMAX)
      DIMENSION   SJJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION   SKK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION   SLL(NG,NLMAX,NKMAX*NJMAX*NIMAX)
      DIMENSION   SIJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION   SIK(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION   SIL(NG,NLMAX,NKMAX*NJMAX,NIMAX)
      DIMENSION   SJK(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION   SJL(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION   SKL(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DATA THREE  /3.0D+00/
C
      IS=NI.EQ.1
      JS=NJ.EQ.1
      KS=NK.EQ.1
      LS=NL.EQ.1
      IP=NI.EQ.2
      JP=NJ.EQ.2
      KP=NK.EQ.2
      LP=NL.EQ.2
C
      IF(NDER.EQ.1) GO TO 1000
C
C     ----- FIRST AND SECOND DERIVATIVES -----
C
      IF(SKIPI) GO TO 100
C
C     ----- -FI- AND -SII- -----
C
      DO  10 IG =1,NG
      DO  10 LKJ=1,NLMAX*NKMAX*NJMAX
       FI(IG,LKJ,1)=  GI(IG,LKJ,2)*AAI(IG)
      SII(IG,LKJ,1)=( GI(IG,LKJ,3)*AAI(IG)
     1               -GI(IG,LKJ,1)        )*AAI(IG)
   10 CONTINUE
      IF(IS) GO TO 100
      DO  20 IG =1,NG
      DO  20 LKJ=1,NLMAX*NKMAX*NJMAX
       FI(IG,LKJ,2)= GI(IG,LKJ,3)*AAI(IG)
     1              -GI(IG,LKJ,1)
      SII(IG,LKJ,2)=(GI(IG,LKJ,4)*AAI(IG)
     1              -GI(IG,LKJ,2)*THREE  )*AAI(IG)
   20 CONTINUE
      IF(IP) GO TO 100
      DO  30 IG =1,NG
      DO  30 I  =3,NI
      DO  30 LKJ=1,NLMAX*NKMAX*NJMAX
       FI(IG,LKJ,I)= GI(IG,LKJ,I+1)*AAI(IG)
     1              -GI(IG,LKJ,I-1)*DBLE(I-1)
      SII(IG,LKJ,I)=(GI(IG,LKJ,I+2)*AAI(IG)
     1              -GI(IG,LKJ,I  )*DBLE(I+I-1)     )*AAI(IG)
     2              +GI(IG,LKJ,I-2)*DBLE((I-1)*(I-2))
   30 CONTINUE
C
  100 CONTINUE
      IF(SKIPJ) GO TO 200
C
C     ----- -FJ- AND -SJJ- -----
C
      DO 110 IG=1,NG
      DO 110 I =1,NIMAX
      DO 110 LK=1,NLMAX*NKMAX
       FJ(IG,LK,1,I)=  GIJ(IG,LK,2,I)*AAJ(IG)
      SJJ(IG,LK,1,I)=( GIJ(IG,LK,3,I)*AAJ(IG)
     1                -GIJ(IG,LK,1,I)        )*AAJ(IG)
  110 CONTINUE
      IF(JS) GO TO 200
      DO 120 IG=1,NG
      DO 120 I =1,NIMAX
      DO 120 LK=1,NLMAX*NKMAX
       FJ(IG,LK,2,I)= GIJ(IG,LK,3,I)*AAJ(IG)
     1               -GIJ(IG,LK,1,I)
      SJJ(IG,LK,2,I)=(GIJ(IG,LK,4,I)*AAJ(IG)
     1               -GIJ(IG,LK,2,I)*THREE  )*AAJ(IG)
  120 CONTINUE
      IF(JP) GO TO 200
      DO 130 IG=1,NG
      DO 130 I =1,NIMAX
      DO 130 J =3,NJ
      DO 130 LK=1,NLMAX*NKMAX
       FJ(IG,LK,J,I)= GIJ(IG,LK,J+1,I)*AAJ(IG)
     1               -GIJ(IG,LK,J-1,I)*DBLE(J-1)
      SJJ(IG,LK,J,I)=(GIJ(IG,LK,J+2,I)*AAJ(IG)
     1               -GIJ(IG,LK,J  ,I)*DBLE(J+J-1)     )*AAJ(IG)
     2               +GIJ(IG,LK,J-2,I)*DBLE((J-1)*(J-2))
  130 CONTINUE
C
  200 CONTINUE
      IF(SKIPK) GO TO 300
C
C     ----- -FK- AND -SKK- -----
C
      DO 210 IG=1,NG
      DO 210 JI=1,NJMAX*NIMAX
      DO 210 L =1,NLMAX
       FK(IG,L,1,JI)=  GIJK(IG,L,2,JI)*AAK(IG)
      SKK(IG,L,1,JI)=( GIJK(IG,L,3,JI)*AAK(IG)
     1                -GIJK(IG,L,1,JI)        )*AAK(IG)
  210 CONTINUE
      IF(KS) GO TO 300
      DO 220 IG=1,NG
      DO 220 JI=1,NJMAX*NIMAX
      DO 220 L =1,NLMAX
       FK(IG,L,2,JI)= GIJK(IG,L,3,JI)*AAK(IG)
     1               -GIJK(IG,L,1,JI)
      SKK(IG,L,2,JI)=(GIJK(IG,L,4,JI)*AAK(IG)
     1               -GIJK(IG,L,2,JI)*THREE  )*AAK(IG)
  220 CONTINUE
      IF(KP) GO TO 300
      DO 230 IG=1,NG
      DO 230 JI=1,NJMAX*NIMAX
      DO 230 K =3,NK
      DO 230 L =1,NLMAX
       FK(IG,L,K,JI)= GIJK(IG,L,K+1,JI)*AAK(IG)
     1               -GIJK(IG,L,K-1,JI)*DBLE(K-1)
      SKK(IG,L,K,JI)=(GIJK(IG,L,K+2,JI)*AAK(IG)
     1               -GIJK(IG,L,K  ,JI)*DBLE(K+K-1)     )*AAK(IG)
     2               +GIJK(IG,L,K-2,JI)*DBLE((K-1)*(K-2))
  230 CONTINUE
C
  300 CONTINUE
      IF(SKIPL) GO TO 400
C
C     ----- -FL- AND -SLL- -----
C
      DO 310 IG =1,NG
      DO 310 KJI=1,NKMAX*NJMAX*NIMAX
       FL(IG,1,KJI)=  GIJKL(IG,2,KJI)*AAL(IG)
      SLL(IG,1,KJI)=( GIJKL(IG,3,KJI)*AAL(IG)
     1               -GIJKL(IG,1,KJI)        )*AAL(IG)
  310 CONTINUE
      IF(LS) GO TO 400
      DO 320 IG =1,NG
      DO 320 KJI=1,NKMAX*NJMAX*NIMAX
       FL(IG,2,KJI)= GIJKL(IG,3,KJI)*AAL(IG)
     1              -GIJKL(IG,1,KJI)
      SLL(IG,2,KJI)=(GIJKL(IG,4,KJI)*AAL(IG)
     1              -GIJKL(IG,2,KJI)*THREE  )*AAL(IG)
  320 CONTINUE
      IF(LP) GO TO 400
      DO 330 IG =1,NG
      DO 330 KJI=1,NKMAX*NJMAX*NIMAX
      DO 330 L  =3,NL
       FL(IG,L,KJI)= GIJKL(IG,L+1,KJI)*AAL(IG)
     1              -GIJKL(IG,L-1,KJI)*DBLE(L-1)
      SLL(IG,L,KJI)=(GIJKL(IG,L+2,KJI)*AAL(IG)
     1              -GIJKL(IG,L  ,KJI)*DBLE(L+L-1)     )*AAL(IG)
     2              +GIJKL(IG,L-2,KJI)*DBLE((L-1)*(L-2))
  330 CONTINUE
C
  400 CONTINUE
      IF(SKIPI) GO TO 700
      IF(SKIPJ) GO TO 500
C
C     ----- -SIJ- -----
C
      DO 410 IG=1,NG
      DO 410 LK=1,NLMAX*NKMAX
  410 SIJ(IG,LK,1,1)=GIJ(IG,LK,2,2)*AAJ(IG)*AAI(IG)
      IF(JS) GO TO 430
      DO 420 IG=1,NG
      DO 420 J =2,NJ
      DO 420 LK=1,NLMAX*NKMAX
      SIJ(IG,LK,J,1)=( GIJ(IG,LK,J+1,2)*AAJ(IG)
     1                -GIJ(IG,LK,J-1,2)*DBLE(J-1))*AAI(IG)
  420 CONTINUE
  430 IF(IS) GO TO 500
      DO 440 IG=1,NG
      DO 440 I =2,NI
      DO 440 LK=1,NLMAX*NKMAX
      SIJ(IG,LK,1,I)=( GIJ(IG,LK,2,I+1)*AAI(IG)
     1                -GIJ(IG,LK,2,I-1)*DBLE(I-1))*AAJ(IG)
  440 CONTINUE
      IF(JS) GO TO 500
      DO 450 IG=1,NG
      DO 450 I =2,NI
      DO 450 J =2,NJ
      DO 450 LK=1,NLMAX*NKMAX
      SIJ(IG,LK,J,I)=( GIJ(IG,LK,J+1,I+1)*AAJ(IG)
     1                -GIJ(IG,LK,J-1,I+1)*DBLE(J-1))*AAI(IG)
     2              +(-GIJ(IG,LK,J+1,I-1)*AAJ(IG)
     3                +GIJ(IG,LK,J-1,I-1)*DBLE(J-1))*DBLE(I-1)
  450 CONTINUE
C
  500 CONTINUE
      IF(SKIPK) GO TO 600
C
C     ----- -SIK- -----
C
      DO 510 IG=1,NG
      DO 510 J =1,NJMAX
      DO 510 L =1,NLMAX
  510 SIK(IG,L,1,J,1)=HIJK(IG,L,2,J,2)*AAK(IG)*AAI(IG)
      IF(KS) GO TO 530
      DO 520 IG=1,NG
      DO 520 J =1,NJMAX
      DO 520 K =2,NK
      DO 520 L =1,NLMAX
      SIK(IG,L,K,J,1)=( HIJK(IG,L,K+1,J,2)*AAK(IG)
     1                 -HIJK(IG,L,K-1,J,2)*DBLE(K-1))*AAI(IG)
  520 CONTINUE
  530 IF(IS) GO TO 600
      DO 540 IG=1,NG
      DO 540 I =2,NI
      DO 540 J =1,NJMAX
      DO 540 L =1,NLMAX
      SIK(IG,L,1,J,I)=( HIJK(IG,L,2,J,I+1)*AAI(IG)
     1                 -HIJK(IG,L,2,J,I-1)*DBLE(I-1))*AAK(IG)
  540 CONTINUE
      IF(KS) GO TO 600
      DO 550 IG=1,NG
      DO 550 I =2,NI
      DO 550 J =1,NJMAX
      DO 550 K =2,NK
      DO 550 L =1,NLMAX
      SIK(IG,L,K,J,I)=( HIJK(IG,L,K+1,J,I+1)*AAK(IG)
     1                 -HIJK(IG,L,K-1,J,I+1)*DBLE(K-1))*AAI(IG)
     2               +(-HIJK(IG,L,K+1,J,I-1)*AAK(IG)
     3                 +HIJK(IG,L,K-1,J,I-1)*DBLE(K-1))*DBLE(I-1)
  550 CONTINUE
C
  600 CONTINUE
      IF(SKIPL) GO TO 700
C
C     ----- -SIL- -----
C
      DO 610 IG=1,NG
      DO 610 KJ=1,NKMAX*NJMAX
  610 SIL(IG,1,KJ,1)=HIJKL(IG,2,KJ,2)*AAL(IG)*AAI(IG)
      IF(LS) GO TO 630
      DO 620 IG=1,NG
      DO 620 KJ=1,NKMAX*NJMAX
      DO 620 L =2,NL
      SIL(IG,L,KJ,1)=( HIJKL(IG,L+1,KJ,2)*AAL(IG)
     1                -HIJKL(IG,L-1,KJ,2)*DBLE(L-1))*AAI(IG)
  620 CONTINUE
  630 IF(IS) GO TO 700
      DO 640 IG=1,NG
      DO 640 I =2,NI
      DO 640 KJ=1,NKMAX*NJMAX
      SIL(IG,1,KJ,I)=( HIJKL(IG,2,KJ,I+1)*AAI(IG)
     1                -HIJKL(IG,2,KJ,I-1)*DBLE(I-1))*AAL(IG)
  640 CONTINUE
      IF(LS) GO TO 700
      DO 650 IG=1,NG
      DO 650 I =2,NI
      DO 650 KJ=1,NKMAX*NJMAX
      DO 650 L =2,NL
      SIL(IG,L,KJ,I)=( HIJKL(IG,L+1,KJ,I+1)*AAL(IG)
     1                -HIJKL(IG,L-1,KJ,I+1)*DBLE(L-1))*AAI(IG)
     2              +(-HIJKL(IG,L+1,KJ,I-1)*AAL(IG)
     3                +HIJKL(IG,L-1,KJ,I-1)*DBLE(L-1))*DBLE(I-1)
  650 CONTINUE
C
  700 CONTINUE
      IF(SKIPJ) GO TO 900
      IF(SKIPK) GO TO 800
C
C     ----- -SJK- -----
C
      DO 710 IG=1,NG
      DO 710 I =1,NIMAX
      DO 710 L =1,NLMAX
  710 SJK(IG,L,1,1,I)=HIJK(IG,L,2,2,I)*AAK(IG)*AAJ(IG)
      IF(KS) GO TO 730
      DO 720 IG=1,NG
      DO 720 I =1,NIMAX
      DO 720 K =2,NK
      DO 720 L =1,NLMAX
      SJK(IG,L,K,1,I)=( HIJK(IG,L,K+1,2,I)*AAK(IG)
     1                 -HIJK(IG,L,K-1,2,I)*DBLE(K-1))*AAJ(IG)
  720 CONTINUE
  730 IF(JS) GO TO 800
      DO 740 IG=1,NG
      DO 740 I =1,NIMAX
      DO 740 J =2,NJ
      DO 740 L =1,NLMAX
      SJK(IG,L,1,J,I)=( HIJK(IG,L,2,J+1,I)*AAJ(IG)
     1                 -HIJK(IG,L,2,J-1,I)*DBLE(J-1))*AAK(IG)
  740 CONTINUE
      IF(KS) GO TO 800
      DO 750 IG=1,NG
      DO 750 I =1,NIMAX
      DO 750 J =2,NJ
      DO 750 K =2,NK
      DO 750 L =1,NLMAX
      SJK(IG,L,K,J,I)=( HIJK(IG,L,K+1,J+1,I)*AAK(IG)
     1                 -HIJK(IG,L,K-1,J+1,I)*DBLE(K-1))*AAJ(IG)
     2               +(-HIJK(IG,L,K+1,J-1,I)*AAK(IG)
     3                 +HIJK(IG,L,K-1,J-1,I)*DBLE(K-1))*DBLE(J-1)
  750 CONTINUE
C
  800 CONTINUE
      IF(SKIPL) GO TO 900
C
C     ----- -SJL- -----
C
      DO 810 IG=1,NG
      DO 810 I =1,NIMAX
      DO 810 K =1,NKMAX
  810 SJL(IG,1,K,1,I)=FIJKL(IG,2,K,2,I)*AAL(IG)*AAJ(IG)
      IF(LS) GO TO 830
      DO 820 IG=1,NG
      DO 820 I =1,NIMAX
      DO 820 K =1,NKMAX
      DO 820 L =2,NL
      SJL(IG,L,K,1,I)=( FIJKL(IG,L+1,K,2,I)*AAL(IG)
     1                 -FIJKL(IG,L-1,K,2,I)*DBLE(L-1))*AAJ(IG)
  820 CONTINUE
  830 IF(JS) GO TO 900
      DO 840 IG=1,NG
      DO 840 I =1,NIMAX
      DO 840 J =2,NJ
      DO 840 K =1,NKMAX
      SJL(IG,1,K,J,I)=( FIJKL(IG,2,K,J+1,I)*AAJ(IG)
     1                 -FIJKL(IG,2,K,J-1,I)*DBLE(J-1))*AAL(IG)
  840 CONTINUE
      IF(LS) GO TO 900
      DO 850 IG=1,NG
      DO 850 I =1,NIMAX
      DO 850 J =2,NJ
      DO 850 K =1,NKMAX
      DO 850 L =2,NL
      SJL(IG,L,K,J,I)=( FIJKL(IG,L+1,K,J+1,I)*AAL(IG)
     1                 -FIJKL(IG,L-1,K,J+1,I)*DBLE(L-1))*AAJ(IG)
     2               +(-FIJKL(IG,L+1,K,J-1,I)*AAL(IG)
     3                 +FIJKL(IG,L-1,K,J-1,I)*DBLE(L-1))*DBLE(J-1)
  850 CONTINUE
C
  900 CONTINUE
      IF(SKIPK) GO TO 990
      IF(SKIPL) GO TO 990
C
C     ----- -SKL- -----
C
      DO 910 IG=1,NG
      DO 910 JI=1,NJMAX*NIMAX
  910 SKL(IG,1,1,JI)=FIJK(IG,2,2,JI)*AAL(IG)*AAK(IG)
      IF(LS) GO TO 930
      DO 920 IG=1,NG
      DO 920 JI=1,NJMAX*NIMAX
      DO 920 L =2,NL
      SKL(IG,L,1,JI)=( FIJK(IG,L+1,2,JI)*AAL(IG)
     1                -FIJK(IG,L-1,2,JI)*DBLE(L-1))*AAK(IG)
  920 CONTINUE
  930 IF(KS) GO TO 990
      DO 940 IG=1,NG
      DO 940 JI=1,NJMAX*NIMAX
      DO 940 K =2,NK
      SKL(IG,1,K,JI)=( FIJK(IG,2,K+1,JI)*AAK(IG)
     1                -FIJK(IG,2,K-1,JI)*DBLE(K-1))*AAL(IG)
  940 CONTINUE
      IF(LS) GO TO 990
      DO 950 IG=1,NG
      DO 950 JI=1,NJMAX*NIMAX
      DO 950 K =2,NK
      DO 950 L =2,NL
      SKL(IG,L,K,JI)=( FIJK(IG,L+1,K+1,JI)*AAL(IG)
     1                -FIJK(IG,L-1,K+1,JI)*DBLE(L-1))*AAK(IG)
     2              +(-FIJK(IG,L+1,K-1,JI)*AAL(IG)
     3                +FIJK(IG,L-1,K-1,JI)*DBLE(L-1))*DBLE(K-1)
  950 CONTINUE
C
  990 CONTINUE
      RETURN
 1000 CONTINUE
C
C     ----- FIRST DERIVATIVES ONLY -----
C
      IF(SKIPI) GO TO 1030
C
C     ----- -FI- ONLY -----
C
      DO 1010 IG =1,NG
      DO 1010 LKJ=1,NLMAX*NKMAX*NJMAX
       FI(IG,LKJ,1)=  GI(IG,LKJ,2)*AAI(IG)
 1010 CONTINUE
      IF(IS) GO TO 1030
      DO 1020 IG =1,NG
      DO 1020 I  =2,NI
      DO 1020 LKJ=1,NLMAX*NKMAX*NJMAX
       FI(IG,LKJ,I)= GI(IG,LKJ,I+1)*AAI(IG)
     1              -GI(IG,LKJ,I-1)*DBLE(I-1)
 1020 CONTINUE
C
 1030 CONTINUE
      IF(SKIPJ) GO TO 1130
C
C     ----- -FJ- ONLY -----
C
      DO 1110 IG=1,NG
      DO 1110 I =1,NIMAX
      DO 1110 LK=1,NLMAX*NKMAX
       FJ(IG,LK,1,I)=  GIJ(IG,LK,2,I)*AAJ(IG)
 1110 CONTINUE
      IF(JS) GO TO 1130
      DO 1120 IG=1,NG
      DO 1120 I =1,NIMAX
      DO 1120 J =2,NJ
      DO 1120 LK=1,NLMAX*NKMAX
       FJ(IG,LK,J,I)= GIJ(IG,LK,J+1,I)*AAJ(IG)
     1               -GIJ(IG,LK,J-1,I)*DBLE(J-1)
 1120 CONTINUE
C
 1130 CONTINUE
      IF(SKIPK) GO TO 1230
C
C     ----- -FK- ONLY -----
C
      DO 1210 IG=1,NG
      DO 1210 JI=1,NJMAX*NIMAX
      DO 1210 L =1,NLMAX
       FK(IG,L,1,JI)=  GIJK(IG,L,2,JI)*AAK(IG)
 1210 CONTINUE
      IF(KS) GO TO 1230
      DO 1220 IG=1,NG
      DO 1220 JI=1,NJMAX*NIMAX
      DO 1220 K =2,NK
      DO 1220 L =1,NLMAX
       FK(IG,L,K,JI)= GIJK(IG,L,K+1,JI)*AAK(IG)
     1               -GIJK(IG,L,K-1,JI)*DBLE(K-1)
 1220 CONTINUE
C
 1230 CONTINUE
      IF(SKIPL) GO TO 1330
C
C     ----- -FL- AND -SLL- -----
C
      DO 1310 IG =1,NG
      DO 1310 KJI=1,NKMAX*NJMAX*NIMAX
       FL(IG,1,KJI)=  GIJKL(IG,2,KJI)*AAL(IG)
 1310 CONTINUE
      IF(LS) GO TO 1330
      DO 1320 IG =1,NG
      DO 1320 KJI=1,NKMAX*NJMAX*NIMAX
      DO 1320 L  =2,NL
       FL(IG,L,KJI)= GIJKL(IG,L+1,KJI)*AAL(IG)
     1              -GIJKL(IG,L-1,KJI)*DBLE(L-1)
 1320 CONTINUE
C
 1330 CONTINUE
      RETURN
      END
C*MODULE HSS2   *DECK DDXYZS
C>     @brief   Fock derivative matrix for CPHF
C>
C>     @details construct integral elememnts
C>
C>     @author Yuji Imafuku 
C>
C>   @param GI       integral for I
C>   @param GIJ      integral for IJ
C>   @param GIJK     integral for IJK
C>   @param GIJKL    integral for IJKL
C>   @param NG       number of indice
C>   @param NIMAX    max number of I
C>   @param NJMAX    max number of J
C>   @param NKMAX    max number of K
C>   @param NLMAX    max number of l
C>   @param NI       number of I
C>   @param NJ       number of J
C>   @param NK       number of K
C>   @param NL       number of L
C>   @param AAI      element of I integral
C>   @param AAJ      element of J integral
C>   @param AAK      element of K integral
C>   @param AAL      element of L integral
C>   @param FI       element of I integral
C>   @param FJ       element of J integral
C>   @param FK       element of K integral
C>   @param FL       element of L integral
C>   @param SII   derivative elements
C>   @param SJJ   derivative elements
C>   @param SKK   derivative elements
C>   @param SLL   derivative elements
C>   @param SIJ   derivative elements
C>   @param SIK   derivative elements
C>   @param SIL   derivative elements
C>   @param SJK   derivative elements
C>   @param SJL   derivative elements
C>   @param SKL   derivative elements
      SUBROUTINE DDXYZS(GI,GIJ,GIJK,GIJKL,HIJK,HIJKL,FIJK,FIJKL,
     1 NG,NIMAX,NJMAX,NKMAX,NLMAX,NI,NJ,NK,NL,AAI,AAJ,AAK,AAL,
     2 FI,FJ,FK,FL,SII,SJJ,SKK,SLL,SIJ,SIK,SIL,SJK,SJL,SKL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL
      LOGICAL IS,JS,KS,LS,IP,JP,KP,LP
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /DERPAR/ IDER,JDER,KDER,LDER,NDER
      DIMENSION GIJKL(NG,NLMAX,NKMAX*NJMAX*NIMAX)
      DIMENSION  GIJK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION   GIJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION    GI(NG,NLMAX*NKMAX*NJMAX,NIMAX)
      DIMENSION HIJKL(NG,NLMAX,NKMAX*NJMAX,NIMAX)
      DIMENSION  HIJK(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION FIJKL(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION  FIJK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION   AAI(NG)
      DIMENSION   AAJ(NG)
      DIMENSION   AAK(NG)
      DIMENSION   AAL(NG)
      DIMENSION    FI(NG,NLMAX*NKMAX*NJMAX,NIMAX)
      DIMENSION    FJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION    FK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION    FL(NG,NLMAX,NKMAX*NJMAX*NIMAX)
      DIMENSION   SII(NG,NLMAX*NKMAX*NJMAX,NIMAX)
      DIMENSION   SJJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION   SKK(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DIMENSION   SLL(NG,NLMAX,NKMAX*NJMAX*NIMAX)
      DIMENSION   SIJ(NG,NLMAX*NKMAX,NJMAX,NIMAX)
      DIMENSION   SIK(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION   SIL(NG,NLMAX,NKMAX*NJMAX,NIMAX)
      DIMENSION   SJK(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION   SJL(NG,NLMAX,NKMAX,NJMAX,NIMAX)
      DIMENSION   SKL(NG,NLMAX,NKMAX,NJMAX*NIMAX)
      DATA THREE  /3.0D+00/
C
      IS=NI.EQ.1
      JS=NJ.EQ.1
      KS=NK.EQ.1
      LS=NL.EQ.1
      IP=NI.EQ.2
      JP=NJ.EQ.2
      KP=NK.EQ.2
      LP=NL.EQ.2
C
      IF(NDER.EQ.1) GO TO 1000
C
C     ----- FIRST AND SECOND DERIVATIVES -----
C
      IF(SKIPI) GO TO 40
C
C     ----- -FI- AND -SII- -----
C
      DO  10 LKJ=1,NLMAX*NKMAX*NJMAX
      DO  10 IG =1,NG
       FI(IG,LKJ,1)=  GI(IG,LKJ,2)*AAI(IG)
      SII(IG,LKJ,1)=( GI(IG,LKJ,3)*AAI(IG)
     1               -GI(IG,LKJ,1)        )*AAI(IG)
   10 CONTINUE
      IF(IS) GO TO 40
      DO  20 LKJ=1,NLMAX*NKMAX*NJMAX
      DO  20 IG =1,NG
       FI(IG,LKJ,2)= GI(IG,LKJ,3)*AAI(IG)
     1              -GI(IG,LKJ,1)
      SII(IG,LKJ,2)=(GI(IG,LKJ,4)*AAI(IG)
     1              -GI(IG,LKJ,2)*THREE  )*AAI(IG)
   20 CONTINUE
      IF(IP) GO TO 40
      DO  30 I  =3,NI
      DO  30 LKJ=1,NLMAX*NKMAX*NJMAX
      DO  30 IG =1,NG
       FI(IG,LKJ,I)= GI(IG,LKJ,I+1)*AAI(IG)
     1              -GI(IG,LKJ,I-1)*DBLE(I-1)
      SII(IG,LKJ,I)=(GI(IG,LKJ,I+2)*AAI(IG)
     1              -GI(IG,LKJ,I  )*DBLE(I+I-1)     )*AAI(IG)
     2              +GI(IG,LKJ,I-2)*DBLE((I-1)*(I-2))
   30 CONTINUE
C
   40 CONTINUE
      IF(SKIPJ) GO TO 140
C
C     ----- -FJ- AND -SJJ- -----
C
      DO 110 I =1,NIMAX
      DO 110 LK=1,NLMAX*NKMAX
      DO 110 IG=1,NG
       FJ(IG,LK,1,I)=  GIJ(IG,LK,2,I)*AAJ(IG)
      SJJ(IG,LK,1,I)=( GIJ(IG,LK,3,I)*AAJ(IG)
     1                -GIJ(IG,LK,1,I)        )*AAJ(IG)
  110 CONTINUE
      IF(JS) GO TO 140
      DO 120 I =1,NIMAX
      DO 120 LK=1,NLMAX*NKMAX
      DO 120 IG=1,NG
       FJ(IG,LK,2,I)= GIJ(IG,LK,3,I)*AAJ(IG)
     1               -GIJ(IG,LK,1,I)
      SJJ(IG,LK,2,I)=(GIJ(IG,LK,4,I)*AAJ(IG)
     1               -GIJ(IG,LK,2,I)*THREE  )*AAJ(IG)
  120 CONTINUE
      IF(JP) GO TO 140
      DO 130 I =1,NIMAX
      DO 130 J =3,NJ
      DO 130 LK=1,NLMAX*NKMAX
      DO 130 IG=1,NG
       FJ(IG,LK,J,I)= GIJ(IG,LK,J+1,I)*AAJ(IG)
     1               -GIJ(IG,LK,J-1,I)*DBLE(J-1)
      SJJ(IG,LK,J,I)=(GIJ(IG,LK,J+2,I)*AAJ(IG)
     1               -GIJ(IG,LK,J  ,I)*DBLE(J+J-1)     )*AAJ(IG)
     2               +GIJ(IG,LK,J-2,I)*DBLE((J-1)*(J-2))
  130 CONTINUE
C
  140 CONTINUE
      IF(SKIPK) GO TO 240
C
C     ----- -FK- AND -SKK- -----
C
      DO 210 JI=1,NJMAX*NIMAX
      DO 210 L =1,NLMAX
      DO 210 IG=1,NG
       FK(IG,L,1,JI)=  GIJK(IG,L,2,JI)*AAK(IG)
      SKK(IG,L,1,JI)=( GIJK(IG,L,3,JI)*AAK(IG)
     1                -GIJK(IG,L,1,JI)        )*AAK(IG)
  210 CONTINUE
      IF(KS) GO TO 240
      DO 220 JI=1,NJMAX*NIMAX
      DO 220 L =1,NLMAX
      DO 220 IG=1,NG
       FK(IG,L,2,JI)= GIJK(IG,L,3,JI)*AAK(IG)
     1               -GIJK(IG,L,1,JI)
      SKK(IG,L,2,JI)=(GIJK(IG,L,4,JI)*AAK(IG)
     1               -GIJK(IG,L,2,JI)*THREE  )*AAK(IG)
  220 CONTINUE
      IF(KP) GO TO 240
      DO 230 JI=1,NJMAX*NIMAX
      DO 230 K =3,NK
      DO 230 L =1,NLMAX
      DO 230 IG=1,NG
       FK(IG,L,K,JI)= GIJK(IG,L,K+1,JI)*AAK(IG)
     1               -GIJK(IG,L,K-1,JI)*DBLE(K-1)
      SKK(IG,L,K,JI)=(GIJK(IG,L,K+2,JI)*AAK(IG)
     1               -GIJK(IG,L,K  ,JI)*DBLE(K+K-1)     )*AAK(IG)
     2               +GIJK(IG,L,K-2,JI)*DBLE((K-1)*(K-2))
  230 CONTINUE
C
  240 CONTINUE
      IF(SKIPL) GO TO 340
C
C     ----- -FL- AND -SLL- -----
C
      DO 310 KJI=1,NKMAX*NJMAX*NIMAX
      DO 310 IG =1,NG
       FL(IG,1,KJI)=  GIJKL(IG,2,KJI)*AAL(IG)
      SLL(IG,1,KJI)=( GIJKL(IG,3,KJI)*AAL(IG)
     1               -GIJKL(IG,1,KJI)        )*AAL(IG)
  310 CONTINUE
      IF(LS) GO TO 340
      DO 320 KJI=1,NKMAX*NJMAX*NIMAX
      DO 320 IG =1,NG
       FL(IG,2,KJI)= GIJKL(IG,3,KJI)*AAL(IG)
     1              -GIJKL(IG,1,KJI)
      SLL(IG,2,KJI)=(GIJKL(IG,4,KJI)*AAL(IG)
     1              -GIJKL(IG,2,KJI)*THREE  )*AAL(IG)
  320 CONTINUE
      IF(LP) GO TO 340
      DO 330 KJI=1,NKMAX*NJMAX*NIMAX
      DO 330 L  =3,NL
      DO 330 IG =1,NG
       FL(IG,L,KJI)= GIJKL(IG,L+1,KJI)*AAL(IG)
     1              -GIJKL(IG,L-1,KJI)*DBLE(L-1)
      SLL(IG,L,KJI)=(GIJKL(IG,L+2,KJI)*AAL(IG)
     1              -GIJKL(IG,L  ,KJI)*DBLE(L+L-1)     )*AAL(IG)
     2              +GIJKL(IG,L-2,KJI)*DBLE((L-1)*(L-2))
  330 CONTINUE
C
  340 CONTINUE
      IF(SKIPI) GO TO 660
      IF(SKIPJ) GO TO 460
C
C     ----- -SIJ- -----
C
      DO 410 LK=1,NLMAX*NKMAX
      DO 410 IG=1,NG
  410 SIJ(IG,LK,1,1)=GIJ(IG,LK,2,2)*AAJ(IG)*AAI(IG)
      IF(JS) GO TO 430
      DO 420 J =2,NJ
      DO 420 LK=1,NLMAX*NKMAX
      DO 420 IG=1,NG
      SIJ(IG,LK,J,1)=( GIJ(IG,LK,J+1,2)*AAJ(IG)
     1                -GIJ(IG,LK,J-1,2)*DBLE(J-1))*AAI(IG)
  420 CONTINUE
  430 IF(IS) GO TO 460
      DO 440 I =2,NI
      DO 440 LK=1,NLMAX*NKMAX
      DO 440 IG=1,NG
      SIJ(IG,LK,1,I)=( GIJ(IG,LK,2,I+1)*AAI(IG)
     1                -GIJ(IG,LK,2,I-1)*DBLE(I-1))*AAJ(IG)
  440 CONTINUE
      IF(JS) GO TO 460
      DO 450 I =2,NI
      DO 450 J =2,NJ
      DO 450 LK=1,NLMAX*NKMAX
      DO 450 IG=1,NG
      SIJ(IG,LK,J,I)=( GIJ(IG,LK,J+1,I+1)*AAJ(IG)
     1                -GIJ(IG,LK,J-1,I+1)*DBLE(J-1))*AAI(IG)
     2              +(-GIJ(IG,LK,J+1,I-1)*AAJ(IG)
     3                +GIJ(IG,LK,J-1,I-1)*DBLE(J-1))*DBLE(I-1)
  450 CONTINUE
C
  460 CONTINUE
      IF(SKIPK) GO TO 560
C
C     ----- -SIK- -----
C
      DO 510 J =1,NJMAX
      DO 510 L =1,NLMAX
      DO 510 IG=1,NG
  510 SIK(IG,L,1,J,1)=HIJK(IG,L,2,J,2)*AAK(IG)*AAI(IG)
      IF(KS) GO TO 530
      DO 520 J =1,NJMAX
      DO 520 K =2,NK
      DO 520 L =1,NLMAX
      DO 520 IG=1,NG
      SIK(IG,L,K,J,1)=( HIJK(IG,L,K+1,J,2)*AAK(IG)
     1                 -HIJK(IG,L,K-1,J,2)*DBLE(K-1))*AAI(IG)
  520 CONTINUE
  530 IF(IS) GO TO 560
      DO 540 I =2,NI
      DO 540 J =1,NJMAX
      DO 540 L =1,NLMAX
      DO 540 IG=1,NG
      SIK(IG,L,1,J,I)=( HIJK(IG,L,2,J,I+1)*AAI(IG)
     1                 -HIJK(IG,L,2,J,I-1)*DBLE(I-1))*AAK(IG)
  540 CONTINUE
      IF(KS) GO TO 560
      DO 550 I =2,NI
      DO 550 J =1,NJMAX
      DO 550 K =2,NK
      DO 550 L =1,NLMAX
      DO 550 IG=1,NG
      SIK(IG,L,K,J,I)=( HIJK(IG,L,K+1,J,I+1)*AAK(IG)
     1                 -HIJK(IG,L,K-1,J,I+1)*DBLE(K-1))*AAI(IG)
     2               +(-HIJK(IG,L,K+1,J,I-1)*AAK(IG)
     3                 +HIJK(IG,L,K-1,J,I-1)*DBLE(K-1))*DBLE(I-1)
  550 CONTINUE
C
  560 CONTINUE
      IF(SKIPL) GO TO 660
C
C     ----- -SIL- -----
C
      DO 610 KJ=1,NKMAX*NJMAX
      DO 610 IG=1,NG
  610 SIL(IG,1,KJ,1)=HIJKL(IG,2,KJ,2)*AAL(IG)*AAI(IG)
      IF(LS) GO TO 630
      DO 620 KJ=1,NKMAX*NJMAX
      DO 620 L =2,NL
      DO 620 IG=1,NG
      SIL(IG,L,KJ,1)=( HIJKL(IG,L+1,KJ,2)*AAL(IG)
     1                -HIJKL(IG,L-1,KJ,2)*DBLE(L-1))*AAI(IG)
  620 CONTINUE
  630 IF(IS) GO TO 660
      DO 640 I =2,NI
      DO 640 KJ=1,NKMAX*NJMAX
      DO 640 IG=1,NG
      SIL(IG,1,KJ,I)=( HIJKL(IG,2,KJ,I+1)*AAI(IG)
     1                -HIJKL(IG,2,KJ,I-1)*DBLE(I-1))*AAL(IG)
  640 CONTINUE
      IF(LS) GO TO 660
      DO 650 I =2,NI
      DO 650 KJ=1,NKMAX*NJMAX
      DO 650 L =2,NL
      DO 650 IG=1,NG
      SIL(IG,L,KJ,I)=( HIJKL(IG,L+1,KJ,I+1)*AAL(IG)
     1                -HIJKL(IG,L-1,KJ,I+1)*DBLE(L-1))*AAI(IG)
     2              +(-HIJKL(IG,L+1,KJ,I-1)*AAL(IG)
     3                +HIJKL(IG,L-1,KJ,I-1)*DBLE(L-1))*DBLE(I-1)
  650 CONTINUE
C
  660 CONTINUE
      IF(SKIPJ) GO TO 860
      IF(SKIPK) GO TO 760
C
C     ----- -SJK- -----
C
      DO 710 I =1,NIMAX
      DO 710 L =1,NLMAX
      DO 710 IG=1,NG
  710 SJK(IG,L,1,1,I)=HIJK(IG,L,2,2,I)*AAK(IG)*AAJ(IG)
      IF(KS) GO TO 730
      DO 720 I =1,NIMAX
      DO 720 K =2,NK
      DO 720 L =1,NLMAX
      DO 720 IG=1,NG
      SJK(IG,L,K,1,I)=( HIJK(IG,L,K+1,2,I)*AAK(IG)
     1                 -HIJK(IG,L,K-1,2,I)*DBLE(K-1))*AAJ(IG)
  720 CONTINUE
  730 IF(JS) GO TO 760
      DO 740 I =1,NIMAX
      DO 740 J =2,NJ
      DO 740 L =1,NLMAX
      DO 740 IG=1,NG
      SJK(IG,L,1,J,I)=( HIJK(IG,L,2,J+1,I)*AAJ(IG)
     1                 -HIJK(IG,L,2,J-1,I)*DBLE(J-1))*AAK(IG)
  740 CONTINUE
      IF(KS) GO TO 760
      DO 750 I =1,NIMAX
      DO 750 J =2,NJ
      DO 750 K =2,NK
      DO 750 L =1,NLMAX
      DO 750 IG=1,NG
      SJK(IG,L,K,J,I)=( HIJK(IG,L,K+1,J+1,I)*AAK(IG)
     1                 -HIJK(IG,L,K-1,J+1,I)*DBLE(K-1))*AAJ(IG)
     2               +(-HIJK(IG,L,K+1,J-1,I)*AAK(IG)
     3                 +HIJK(IG,L,K-1,J-1,I)*DBLE(K-1))*DBLE(J-1)
  750 CONTINUE
C
  760 CONTINUE
      IF(SKIPL) GO TO 860
C
C     ----- -SJL- -----
C
      DO 810 I =1,NIMAX
      DO 810 K =1,NKMAX
      DO 810 IG=1,NG
  810 SJL(IG,1,K,1,I)=FIJKL(IG,2,K,2,I)*AAL(IG)*AAJ(IG)
      IF(LS) GO TO 830
      DO 820 I =1,NIMAX
      DO 820 K =1,NKMAX
      DO 820 L =2,NL
      DO 820 IG=1,NG
      SJL(IG,L,K,1,I)=( FIJKL(IG,L+1,K,2,I)*AAL(IG)
     1                 -FIJKL(IG,L-1,K,2,I)*DBLE(L-1))*AAJ(IG)
  820 CONTINUE
  830 IF(JS) GO TO 860
      DO 840 I =1,NIMAX
      DO 840 J =2,NJ
      DO 840 K =1,NKMAX
      DO 840 IG=1,NG
      SJL(IG,1,K,J,I)=( FIJKL(IG,2,K,J+1,I)*AAJ(IG)
     1                 -FIJKL(IG,2,K,J-1,I)*DBLE(J-1))*AAL(IG)
  840 CONTINUE
      IF(LS) GO TO 860
      DO 850 I =1,NIMAX
      DO 850 J =2,NJ
      DO 850 K =1,NKMAX
      DO 850 L =2,NL
      DO 850 IG=1,NG
      SJL(IG,L,K,J,I)=( FIJKL(IG,L+1,K,J+1,I)*AAL(IG)
     1                 -FIJKL(IG,L-1,K,J+1,I)*DBLE(L-1))*AAJ(IG)
     2               +(-FIJKL(IG,L+1,K,J-1,I)*AAL(IG)
     3                 +FIJKL(IG,L-1,K,J-1,I)*DBLE(L-1))*DBLE(J-1)
  850 CONTINUE
C
  860 CONTINUE
      IF(SKIPK) GO TO 960
      IF(SKIPL) GO TO 960
C
C     ----- -SKL- -----
C
      DO 910 JI=1,NJMAX*NIMAX
      DO 910 IG=1,NG
  910 SKL(IG,1,1,JI)=FIJK(IG,2,2,JI)*AAL(IG)*AAK(IG)
      IF(LS) GO TO 930
      DO 920 JI=1,NJMAX*NIMAX
      DO 920 L =2,NL
      DO 920 IG=1,NG
      SKL(IG,L,1,JI)=( FIJK(IG,L+1,2,JI)*AAL(IG)
     1                -FIJK(IG,L-1,2,JI)*DBLE(L-1))*AAK(IG)
  920 CONTINUE
  930 IF(KS) GO TO 960
      DO 940 JI=1,NJMAX*NIMAX
      DO 940 K =2,NK
      DO 940 IG=1,NG
      SKL(IG,1,K,JI)=( FIJK(IG,2,K+1,JI)*AAK(IG)
     1                -FIJK(IG,2,K-1,JI)*DBLE(K-1))*AAL(IG)
  940 CONTINUE
      IF(LS) GO TO 960
      DO 950 JI=1,NJMAX*NIMAX
      DO 950 K =2,NK
      DO 950 L =2,NL
      DO 950 IG=1,NG
      SKL(IG,L,K,JI)=( FIJK(IG,L+1,K+1,JI)*AAL(IG)
     1                -FIJK(IG,L-1,K+1,JI)*DBLE(L-1))*AAK(IG)
     2              +(-FIJK(IG,L+1,K-1,JI)*AAL(IG)
     3                +FIJK(IG,L-1,K-1,JI)*DBLE(L-1))*DBLE(K-1)
  950 CONTINUE
C
  960 CONTINUE
      RETURN
 1000 CONTINUE
C
C     ----- FIRST DERIVATIVES ONLY -----
C
      IF(SKIPI) GO TO 1030
C
C     ----- -FI- ONLY -----
C
      DO 1010 LKJ=1,NLMAX*NKMAX*NJMAX
      DO 1010 IG =1,NG
       FI(IG,LKJ,1)=  GI(IG,LKJ,2)*AAI(IG)
 1010 CONTINUE
      IF(IS) GO TO 1030
      DO 1020 I  =2,NI
      DO 1020 LKJ=1,NLMAX*NKMAX*NJMAX
      DO 1020 IG =1,NG
       FI(IG,LKJ,I)= GI(IG,LKJ,I+1)*AAI(IG)
     1              -GI(IG,LKJ,I-1)*DBLE(I-1)
 1020 CONTINUE
C
 1030 CONTINUE
      IF(SKIPJ) GO TO 1130
C
C     ----- -FJ- ONLY -----
C
      DO 1110 I =1,NIMAX
      DO 1110 LK=1,NLMAX*NKMAX
      DO 1110 IG=1,NG
       FJ(IG,LK,1,I)=  GIJ(IG,LK,2,I)*AAJ(IG)
 1110 CONTINUE
      IF(JS) GO TO 1130
      DO 1120 I =1,NIMAX
      DO 1120 J =2,NJ
      DO 1120 LK=1,NLMAX*NKMAX
      DO 1120 IG=1,NG
       FJ(IG,LK,J,I)= GIJ(IG,LK,J+1,I)*AAJ(IG)
     1               -GIJ(IG,LK,J-1,I)*DBLE(J-1)
 1120 CONTINUE
C
 1130 CONTINUE
      IF(SKIPK) GO TO 1230
C
C     ----- -FK- ONLY -----
C
      DO 1210 JI=1,NJMAX*NIMAX
      DO 1210 L =1,NLMAX
      DO 1210 IG=1,NG
       FK(IG,L,1,JI)=  GIJK(IG,L,2,JI)*AAK(IG)
 1210 CONTINUE
      IF(KS) GO TO 1230
      DO 1220 JI=1,NJMAX*NIMAX
      DO 1220 K =2,NK
      DO 1220 L =1,NLMAX
      DO 1220 IG=1,NG
       FK(IG,L,K,JI)= GIJK(IG,L,K+1,JI)*AAK(IG)
     1               -GIJK(IG,L,K-1,JI)*DBLE(K-1)
 1220 CONTINUE
C
 1230 CONTINUE
      IF(SKIPL) GO TO 1330
C
C     ----- -FL- AND -SLL- -----
C
      DO 1310 KJI=1,NKMAX*NJMAX*NIMAX
      DO 1310 IG =1,NG
       FL(IG,1,KJI)=  GIJKL(IG,2,KJI)*AAL(IG)
 1310 CONTINUE
      IF(LS) GO TO 1330
      DO 1320 KJI=1,NKMAX*NJMAX*NIMAX
      DO 1320 L  =2,NL
      DO 1320 IG =1,NG
       FL(IG,L,KJI)= GIJKL(IG,L+1,KJI)*AAL(IG)
     1              -GIJKL(IG,L-1,KJI)*DBLE(L-1)
 1320 CONTINUE
C
 1330 CONTINUE
      RETURN
      END
C*MODULE HSS2   *DECK JKDEND
C>     @brief   Fock derivative matrix for CPHF
C>
C>     @details construct final product
C>
C>     @author Hiroya Nakata
C>
C>    @param II  indice
C>
      SUBROUTINE JKDEND(II)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000 )
C
      COMMON /INTTYP/ NPOPLE,NHONDO
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /RESTAR/ TIMLIM,NREST,NREC,INTLOC,IST,JST,KST,LST
      COMMON /TMVALS/ TI,TX,TIM
C
C     ----- GET RESTART DATA -----
C
      IF(II.EQ.NSHELL) GO TO 10
      NREST=4
      IST=II+1
      JST=1
      KST=1
      LST=1
      IHONDO=0
      IF(NPOPLE.EQ.0) IHONDO=1
      GO TO 20
   10 NREST=0
      IST=1
      JST=1
      KST=1
      LST=1
   20 CONTINUE
C
      IF(NREST.EQ.0) RETURN
C
C     ----- CHECK CPU TIME AND EXIT IF NEEDED -----
C
      CALL TEXIT(0,NREST)
      IF(TIM.LT.TIMLIM) RETURN
      WRITE(IW,9998) NREST,IHONDO
      WRITE(IW,9999)
      CALL TEXIT(1,NREST)
      RETURN
 9999 FORMAT(' ... WARNING ... THIS JOB MUST BE RESTARTED ... ')
 9998 FORMAT(' ... RESTART PARAMETERS ... ',/,
     1 ' IN -CNTRL- NREST = ',I2,' IN -INTGRL- NHONDO = ',I2)
      END
C*MODULE HSS2   *DECK DENCLU
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param  II     indice for atomic orbital
C>     @param  JJ     indice for atomic orbital 
C>     @param  KK     indice for atomic orbital 
C>     @param  LL     indice for atomic orbital 
C>     @param  Q4     scale factor
C>     @param  RHFTYP RHF
C>     @param  DAB    density matrix
C>     @param  IA     indices
C>     @param  DA     density matrix for alpha
C>     @param  DB     density matrix for beta
C>     @param  DABMAx max density
      SUBROUTINE DENCLU(II,JJ,KK,LL,Q4,RHFTYP,IA,DA,DB,DAB,DABMAX) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
      LOGICAL RHFTYP
      LOGICAL LCFLAG,LRINT
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL OUT,DBG
C
      COMMON /DFTPAR/ DFTTYP(20),EXENA,EXENB,EXENC,
     *                IDFT34,NAUXFUN,NAUXSHL
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /NLRC  / LCFLAG,EMU,EMU2,LRFILE
      COMMON /NLRCF / LRINT
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /SHLEQU/IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLLMN/IGXYZ(4,35),JGXYZ(4,35),KGXYZ(4,35),LGXYZ(4,35)
      COMMON /SHLNRM/PNRM(84)
      DIMENSION IA(1),DA(1),DB(1),DAB(1)
      DATA ZERO     /0.0D+00/
      DATA PT5,FOUR /0.5D+00,4.0D+00/
C
      HFSCAL=DFTTYP(3)
      CSCALT=1.0D+00
      IF(LCFLAG) THEN
         IF(LRINT) THEN
            HFSCAL=1.0D+00
            CSCALT=0.0D+00
         ELSE
            HFSCAL=0.0D+00
            CSCALT=1.0D+00
         ENDIF
      ENDIF
C
      MINI=KMIN(II)
      MINJ=KMIN(JJ)
      MINK=KMIN(KK)
      MINL=KMIN(LL)
      MAXI=KMAX(II)
      MAXJ=KMAX(JJ)
      MAXK=KMAX(KK)
      MAXL=KMAX(LL)
      LOCI=KLOC(II)-MINI
      LOCJ=KLOC(JJ)-MINJ
      LOCK=KLOC(KK)-MINK
      LOCL=KLOC(LL)-MINL
C
      DABMAX=ZERO
      DO 500 I=MINI,MAXI
      PI=PNRM(I)
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 400 J=MINJ,JMAX
      PIJ=PI*PNRM(J)
       MAX=MAXK
      IF(IJEQKL)  MAX=I
      DO 300 K=MINK, MAX
      PIJK=PIJ*PNRM(K)
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 200 L=MINL,LMAX
      PIJKL=PIJK*PNRM(L)
      I1=LOCI+I
      I2=LOCJ+J
      I3=LOCK+K
      I4=LOCL+L
      IF(I1.GE.I2) GO TO 10
      N=I1
      I1=I2
      I2=N
   10 IF(I3.GE.I4) GO TO 20
      N=I3
      I3=I4
      I4=N
   20 IF(I1-I3) 30,40,50
   30 N=I1
      I1=I3
      I3=N
      N=I2
      I2=I4
      I4=N
      GO TO 50
   40 IF(I2.LT.I4) GO TO 30
   50 CONTINUE
      MIJ=IA(I1)+I2
      MIK=IA(I1)+I3
      MIL=IA(I1)+I4
      MKL=IA(I3)+I4
      IF(I2.LT.I3) GO TO 60
      MJK=IA(I2)+I3
      MJL=IA(I2)+I4
      GO TO 80
   60 MJK=IA(I3)+I2
      IF(I2.LT.I4) GO TO 70
      MJL=IA(I2)+I4
      GO TO 80
   70 MJL=IA(I4)+I2
   80 CONTINUE
      DFAC= DA(MIJ)*DA(MKL)*FOUR*CSCALT
     1     -DA(MIK)*DA(MJL)*HFSCAL
     2     -DA(MIL)*DA(MJK)*HFSCAL
      IF(.NOT. RHFTYP) DFAC=DFAC-DB(MIK)*DB(MJL)*HFSCAL
     1                          -DB(MIL)*DB(MJK)*HFSCAL
      IF(I2.EQ.I1             ) DFAC=DFAC*PT5
      IF(I4.EQ.I3             ) DFAC=DFAC*PT5
      IF(I3.EQ.I1.AND.I4.EQ.I2) DFAC=DFAC*PT5
      IF( ABS(DFAC).GT.DABMAX) DABMAX= ABS(DFAC)
      NN=IGXYZ(1,I)+JGXYZ(1,J)+KGXYZ(1,K)+LGXYZ(1,L)
      DAB(NN)=DFAC*PIJKL*Q4
      IF(DBG) WRITE(IW,9999) II,JJ,KK,LL,I,J,K,L,NN,DFAC
  200 CONTINUE
  300 CONTINUE
  400 CONTINUE
  500 CONTINUE
      RETURN
 9999 FORMAT(' -DENCLU- ',4I4,4I3,I5,D20.12)
      END
C*MODULE HSS2   *DECK DENROH
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param  II     indice for atomic orbital
C>     @param  JJ     indice for atomic orbital 
C>     @param  KK     indice for atomic orbital 
C>     @param  LL     indice for atomic orbital 
C>     @param  Q4     scale factor
C>     @param  NOCORE Number of core
C>     @param  NOOPEN number of open shell
C>     @param  IA     Indice
C>     @param  DC     Density matrix
C>     @param  V      Orbital
C>     @param  NDIM   Number of dimension
C>     @param  DAB    Density matrix
C>     @param  DABMAX Max density
      SUBROUTINE DENROH(II,JJ,KK,LL,Q4,NOCORE,NOOPEN,
     1 IA,DC,V,NDIM,DAB,DABMAX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000, MXAO=8192)
      LOGICAL NOCORE,NOOPEN
      LOGICAL OUT,DBG
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /SHLLMN/ IGXYZ(4,35),JGXYZ(4,35),KGXYZ(4,35),LGXYZ(4,35)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLNRM/ PNRM(84)
      DIMENSION IA(1),DC(1),V(NDIM,1),DAB(1)
      DATA ZERO,PT5,TWO,EIGHT /0.0D+00,0.5D+00,2.0D+00,8.0D+00/
      DATA PT125,PT25,ONE     /0.125D+00,0.25D+00,1.0D+00/
C
      MINI=KMIN(II)
      MINJ=KMIN(JJ)
      MINK=KMIN(KK)
      MINL=KMIN(LL)
      MAXI=KMAX(II)
      MAXJ=KMAX(JJ)
      MAXK=KMAX(KK)
      MAXL=KMAX(LL)
      LOCI=KLOC(II)-MINI
      LOCJ=KLOC(JJ)-MINJ
      LOCK=KLOC(KK)-MINK
      LOCL=KLOC(LL)-MINL
C
      DABMAX=ZERO
      DO 500 I=MINI,MAXI
      PI=PNRM(I)
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 400 J=MINJ,JMAX
      PIJ=PI*PNRM(J)
       MAX=MAXK
      IF(IJEQKL)  MAX=I
      DO 300 K=MINK, MAX
      PIJK=PIJ*PNRM(K)
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 200 L=MINL,LMAX
      PIJKL=PIJK*PNRM(L)
      I1=LOCI+I
      I2=LOCJ+J
      I3=LOCK+K
      I4=LOCL+L
      IF(I1.GE.I2) GO TO 10
      N=I1
      I1=I2
      I2=N
   10 IF(I3.GE.I4) GO TO 20
      N=I3
      I3=I4
      I4=N
   20 IF(I1-I3) 30,40,50
   30 N=I1
      I1=I3
      I3=N
      N=I2
      I2=I4
      I4=N
      GO TO 50
   40 IF(I2.LT.I4) GO TO 30
   50 CONTINUE
      MIJ=IA(I1)+I2
      MIK=IA(I1)+I3
      MIL=IA(I1)+I4
      MKL=IA(I3)+I4
      IF(I2.LT.I3) GO TO 60
      MJK=IA(I2)+I3
      MJL=IA(I2)+I4
      GO TO 80
   60 MJK=IA(I3)+I2
      IF(I2.LT.I4) GO TO 70
      MJL=IA(I2)+I4
      GO TO 80
   70 MJL=IA(I4)+I2
   80 CONTINUE
      DFAC = ZERO
      IF(NOCORE) GO TO 100
      DFAC = DFAC + TWO* DC(MIJ)*DC(MKL)
     1            - PT5*(DC(MIK)*DC(MJL) + DC(MIL)*DC(MJK))
      IF(NOOPEN) GO TO 120
      NCO1 = NCO + 1
      DO 90 IO = NCO1,NMOGVB
      DFAC = DFAC +     (DC(MIJ)*V(I3,IO)*V(I4,IO)
     1                  +DC(MKL)*V(I1,IO)*V(I2,IO))
     1            -PT25*(V(I2,IO)*(DC(MIK)*V(I4,IO)
     1                            +DC(MIL)*V(I3,IO))
     1                  +V(I1,IO)*(DC(MJL)*V(I3,IO)
     1                            +DC(MJK)*V(I4,IO)))
   90 CONTINUE
  100 CONTINUE
      IF(NOOPEN) GO TO 120
      NCO1 = NCO + 1
      DO 110  IO = NCO1,NMOGVB
      IOF=NCONF(IO)-1
      DO 110  JO = NCO1,NMOGVB
      JOF=NCONF(JO)-1
      IOF0=MAX0(IOF,JOF)
      JOF0=MIN0(IOF,JOF)
      IOJO=IA(IOF0)+JOF0
      DFAC = DFAC +
     1                    PT5 *V(I1,IO)*V(I2,IO)*V(I3,JO)*V(I4,JO)
     1 +PT125*(BETA(IOJO)-ONE)*V(I1,IO)*V(I2,JO)*
     1                        (V(I3,IO)*V(I4,JO)+V(I4,IO)*V(I3,JO))
  110 CONTINUE
  120 CONTINUE
C
      IF(I2.EQ.I1             ) DFAC=DFAC*PT5
      IF(I4.EQ.I3             ) DFAC=DFAC*PT5
      IF(I3.EQ.I1.AND.I4.EQ.I2) DFAC=DFAC*PT5
      DFAC=DFAC*EIGHT*Q4
      IF( ABS(DFAC).GT.DABMAX) DABMAX= ABS(DFAC)
      NN=IGXYZ(1,I)+JGXYZ(1,J)+KGXYZ(1,K)+LGXYZ(1,L)
      DAB(NN)=DFAC*PIJKL
      IF(DBG) WRITE(IW,9999) II,JJ,KK,LL,I,J,K,L,NN,DFAC
  200 CONTINUE
  300 CONTINUE
  400 CONTINUE
  500 CONTINUE
      RETURN
 9999 FORMAT(' -DENROH- ',4I4,4I3,I5,F20.12)
      END
C*MODULE HSS2   *DECK DENGVB
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param  II     indice for atomic orbital
C>     @param  JJ     indice for atomic orbital 
C>     @param  KK     indice for atomic orbital 
C>     @param  LL     indice for atomic orbital 
C>     @param  Q4     scale factor
C>     @param  NOCORE Number of core
C>     @param  NOOPEN number of open shell
C>     @param  NOPAIR number of pair
      SUBROUTINE DENGVB(II,JJ,KK,LL,Q4,NOCORE,NOOPEN,NOPAIR, 
     1 IA,DC,V,NDIM,DAB,DABMAX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000, MXAO=8192)
      LOGICAL NOCORE,NOOPEN,NOPAIR
      LOGICAL OUT,DBG
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NMOGVB,NCONF(MXAO),NHAM
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /SHLLMN/ IGXYZ(4,35),JGXYZ(4,35),KGXYZ(4,35),LGXYZ(4,35)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLNRM/ PNRM(84)
C
      DIMENSION IA(1),DC(1),V(NDIM,1),DAB(1)
      DATA ZERO,PT5,EIGHT /0.0D+00,0.5D+00,8.0D+00/
C
      MINI=KMIN(II)
      MINJ=KMIN(JJ)
      MINK=KMIN(KK)
      MINL=KMIN(LL)
      MAXI=KMAX(II)
      MAXJ=KMAX(JJ)
      MAXK=KMAX(KK)
      MAXL=KMAX(LL)
      LOCI=KLOC(II)-MINI
      LOCJ=KLOC(JJ)-MINJ
      LOCK=KLOC(KK)-MINK
      LOCL=KLOC(LL)-MINL
C
      DABMAX=ZERO
      DO 500 I=MINI,MAXI
      PI=PNRM(I)
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 400 J=MINJ,JMAX
      PIJ=PI*PNRM(J)
       MAX=MAXK
      IF(IJEQKL)  MAX=I
      DO 300 K=MINK, MAX
      PIJK=PIJ*PNRM(K)
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 200 L=MINL,LMAX
      PIJKL=PIJK*PNRM(L)
      I1=LOCI+I
      I2=LOCJ+J
      I3=LOCK+K
      I4=LOCL+L
      IF(I1.GE.I2) GO TO 10
      N=I1
      I1=I2
      I2=N
   10 IF(I3.GE.I4) GO TO 20
      N=I3
      I3=I4
      I4=N
   20 IF(I1-I3) 30,40,50
   30 N=I1
      I1=I3
      I3=N
      N=I2
      I2=I4
      I4=N
      GO TO 50
   40 IF(I2.LT.I4) GO TO 30
   50 CONTINUE
      MIJ=IA(I1)+I2
      MIK=IA(I1)+I3
      MIL=IA(I1)+I4
      MKL=IA(I3)+I4
      IF(I2.LT.I3) GO TO 60
      MJK=IA(I2)+I3
      MJL=IA(I2)+I4
      GO TO 80
   60 MJK=IA(I3)+I2
      IF(I2.LT.I4) GO TO 70
      MJL=IA(I2)+I4
      GO TO 80
   70 MJL=IA(I4)+I2
   80 CONTINUE
      DFAC = ZERO
C
C            CONTRIBUTION FROM CLOSED SHELLS
C
      IF(NOCORE) GO TO 100
      DFAC = DFAC + ALPHA(1)* DC(MIJ)*DC(MKL) +
     1          PT5* BETA(1)*(DC(MIK)*DC(MJL) + DC(MIL)*DC(MJK))
C
C            INTERACTION BETWEEN CORE AND OPEN/PAIR SHELLS
C
      IF(NOOPEN.AND.NOPAIR) GO TO 120
      NCO1 = NCO + 1
      DO 90 IO = NCO1,NMOGVB
      IOJO = IA(NCONF(IO)) + 1
      DFAC = DFAC + ALPHA(IOJO)*(DC(MIJ)*V(I3,IO)*V(I4,IO)
     1                          +DC(MKL)*V(I1,IO)*V(I2,IO)) +
     1 PT5*BETA(IOJO)*(V(I2,IO)*(DC(MIK)*V(I4,IO)
     1                          +DC(MIL)*V(I3,IO)) +
     1                 V(I1,IO)*(DC(MJL)*V(I3,IO)
     1                          +DC(MJK)*V(I4,IO)))
   90 CONTINUE
C
C            INTERACTION BETWEEN OPEN/PAIR AND OPEN/PAIR SHELLS
C
  100 CONTINUE
      IF(NOOPEN.AND.NOPAIR) GO TO 120
      NCO1 = NCO + 1
      DO 110 IO = NCO1,NMOGVB
      DO 110 JO = NCO1,NMOGVB
      IOF = NCONF(IO)
      JOF = NCONF(JO)
      IOJO = IA(IOF) + JOF
      IF(JOF.GT.IOF) IOJO = IA(JOF) + IOF
      DFAC = DFAC +
     1       ALPHA(IOJO)*V(I1,IO)*V(I2,IO)*V(I3,JO)*V(I4,JO) +
     1   PT5* BETA(IOJO)*V(I1,IO)*V(I2,JO)*
     1                  (V(I3,IO)*V(I4,JO)+V(I4,IO)*V(I3,JO))
  110 CONTINUE
  120 CONTINUE
C
      IF(I2.EQ.I1             ) DFAC=DFAC*PT5
      IF(I4.EQ.I3             ) DFAC=DFAC*PT5
      IF(I3.EQ.I1.AND.I4.EQ.I2) DFAC=DFAC*PT5
      DFAC=DFAC*EIGHT*Q4
      IF( ABS(DFAC).GT.DABMAX) DABMAX= ABS(DFAC)
      NN=IGXYZ(1,I)+JGXYZ(1,J)+KGXYZ(1,K)+LGXYZ(1,L)
      DAB(NN)=DFAC*PIJKL
      IF(DBG) WRITE(IW,9999) II,JJ,KK,LL,I,J,K,L,NN,DFAC
  200 CONTINUE
  300 CONTINUE
  400 CONTINUE
  500 CONTINUE
      RETURN
 9999 FORMAT(' -DABGVB- ',4I4,4I3,I5,F20.12)
      END
C*MODULE HSS2   *DECK DENMC
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param  II     indice for atomic orbital
C>     @param  JJ     indice for atomic orbital 
C>     @param  KK     indice for atomic orbital 
C>     @param  LL     indice for atomic orbital 
C>     @param  Q4     scale factor
C>     @param  DC     Density matrix
C>     @param  DV     Density matrix for vec
C>     @param  DM2    Density matrix
C>     @param  NOCORE Number of core
C>     @param  NCI    number CI 
C>     @param  MAXSHL Max shell
C>     @param  DAB    Density matrix  
C>     @param  DABMAX Max density matrix  
      SUBROUTINE DENMC(II,JJ,KK,LL,Q4,DC,DV,DM2, 
     1                 NCORBS,NCI,MAXSHL,DAB,DABMAX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000, MXAO=8192)
      LOGICAL OUT,DBG
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /SHLLMN/ IGXYZ(4,35),JGXYZ(4,35),KGXYZ(4,35),LGXYZ(4,35)
      COMMON /SHLNRM/ PNRM(84)
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      DIMENSION DC(1),DV(1)
      DIMENSION DM2(MAXSHL,MAXSHL,MAXSHL,MAXSHL)
      DIMENSION DAB(1)
      DATA ZERO,PT5,FOUR /0.0D+00,0.5D+00,4.0D+00/
      DATA PT25   /0.25D+00/
C
      MINI=KMIN(II)
      MINJ=KMIN(JJ)
      MINK=KMIN(KK)
      MINL=KMIN(LL)
      MAXI=KMAX(II)
      MAXJ=KMAX(JJ)
      MAXK=KMAX(KK)
      MAXL=KMAX(LL)
      LOCI=KLOC(II)-KMIN(II)
      LOCJ=KLOC(JJ)-KMIN(JJ)
      LOCK=KLOC(KK)-KMIN(KK)
      LOCL=KLOC(LL)-KMIN(LL)
C
      DABMAX=ZERO
      DO 500 I=MINI,MAXI
      PI=PNRM(I)
      JMAX=MAXJ
      IF(IIEQJJ) JMAX=I
      DO 400 J=MINJ,JMAX
      PIJ=PI*PNRM(J)
       MAX=MAXK
      IF(IJEQKL)  MAX=I
      DO 300 K=MINK, MAX
      PIJK=PIJ*PNRM(K)
      LMAX=MAXL
      IF(KKEQLL           ) LMAX=K
      IF(IJEQKL.AND.K.EQ.I) LMAX=J
      DO 200 L=MINL,LMAX
      PIJKL=PIJK*PNRM(L)
C
      I1=LOCI+I
      I2=LOCJ+J
      I3=LOCK+K
      I4=LOCL+L
       IF(I1.LT.I2) THEN
         N =I1
         I1=I2
         I2=N
       ENDIF
       IF(I3.LT.I4) THEN
         N =I3
         I3=I4
         I4=N
       ENDIF
       IF(I1-I3) 10,20,30
   10    N =I1
         I1=I3
         I3=N
         N =I2
         I2=I4
         I4=N
      GO TO 30
   20  IF(I2.LT.I4) GO TO 10
   30 CONTINUE
      MIJ=IA(I1)+I2
      MIK=IA(I1)+I3
      MIL=IA(I1)+I4
      MKL=IA(I3)+I4
       IF(I2.LT.I3) GO TO 40
         MJK=IA(I2)+I3
         MJL=IA(I2)+I4
       GO TO 60
   40 MJK=IA(I3)+I2
       IF(I2.LT.I4) GO TO 50
         MJL=IA(I2)+I4
       GO TO 60
   50 MJL=IA(I4)+I2
   60 CONTINUE
      DFAC = ZERO
C
C      -----  CONTRIBUTION CORE - CORE  ---------
C
      IF(NCORBS.EQ.0) GO TO 70
C
      DFAC = DFAC +       DC(MIJ)*DC(MKL)
     1            - PT25*(DC(MIK)*DC(MJL) + DC(MIL)*DC(MJK))
C
      IF(NCI.EQ.0) GO TO 80
C
C      -----  CONTRIBUTION CORE - VALENCE ---------
C
      DFAC = DFAC +       DC(MIJ)*DV(MKL)
     1            +       DC(MKL)*DV(MIJ)
     2            - PT25*(DC(MIK)*DV(MJL)
     3                   +DC(MIL)*DV(MJK)
     4                   +DC(MJK)*DV(MIL)
     5                   +DC(MJL)*DV(MIK))
C
C      -----  CONTRIBUTION VALENCE - VALENCE ---------
C
   70 CONTINUE
C
      DFAC= DFAC + DM2(I,J,K,L)
C
   80 CONTINUE
      IF(I2.EQ.I1             ) DFAC=DFAC*PT5
      IF(I4.EQ.I3             ) DFAC=DFAC*PT5
      IF(I3.EQ.I1.AND.I4.EQ.I2) DFAC=DFAC*PT5
      DFAC=DFAC*FOUR*Q4
      IF( ABS(DFAC).GT.DABMAX) DABMAX= ABS(DFAC)
      NN=IGXYZ(1,I)+JGXYZ(1,J)+KGXYZ(1,K)+LGXYZ(1,L)
      DAB(NN)=DFAC*PIJKL
      IF(DBG) WRITE(IW,9999) II,JJ,KK,LL,I,J,K,L,NN,DFAC,DM2(I,J,K,L)
  200 CONTINUE
  300 CONTINUE
  400 CONTINUE
  500 CONTINUE
      RETURN
 9999 FORMAT(' -DENMC - ',4I4,4I3,I5,E20.12,E20.12)
      END
C*MODULE HSS2   *DECK DENMCI
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   V     V integral
C>     @param  GIN    gradient contribution
C>     @param  GOUT   output file 
C>     @param  NCI    Number of CI
C>     @param  II     indice
C>     @param  NUM    Number of orbital
C>     @param  MAXSHL Max shell
      SUBROUTINE DENMCI(V,GIN,GOUT,NCI,II,NUM,MAXSHL)   
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
C
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      DIMENSION V(NUM,1)
      DIMENSION GIN(NCI,NCI,NCI,NCI)
      DIMENSION GOUT(MAXSHL,NCI,NCI,NCI)
      DATA ZERO /0.0D+00/
C
C     ----- PARTIAL TRANSFORMATION OF G(IJKL) TO G(MU,J,K,L) -----
C
      IX = KLOC(II)-KMIN(II)
      DO 30 L = 1, NCI
      DO 30 K = 1, NCI
      DO 30 J = 1, NCI
        DO 20 M = KMIN(II),KMAX(II)
        IN = IX + M
        DUM  = ZERO
        DO 10 I = 1, NCI
   10     DUM = DUM + GIN(I,J,K,L)* V(IN,I)
   20   GOUT(M,J,K,L)=DUM
   30 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DENMCJ
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   V     V integral
C>     @param  GIN    gradient contribution
C>     @param  GOUT   output file 
C>     @param  NCI    Number of CI
C>     @param  II     indice
C>     @param  JJ     indice
C>     @param  NUM    Number of orbital
C>     @param  MAXSHL Max shell
      SUBROUTINE DENMCJ(V,GIN,GOUT,NCI,II,JJ,NUM,MAXSHL) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
C
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      DIMENSION V(NUM,1)
      DIMENSION GIN(MAXSHL,NCI,NCI,NCI)
      DIMENSION GOUT(MAXSHL,MAXSHL,NCI,NCI)
      DATA ZERO /0.0D+00/
C
C     ----- PARTIAL TRANSFORMATION OF G(MU,JKL) IN G(MU,NU,K,L) -----
C
      JX = KLOC(JJ)-KMIN(JJ)
      DO 30 L = 1, NCI
      DO 30 K = 1, NCI
      DO 30 M = KMIN(II),KMAX(II)
        DO 20 N = KMIN(JJ),KMAX(JJ)
        JN = JX + N
        DUM  = ZERO
        DO 10 J = 1, NCI
   10     DUM = DUM + GIN(M,J,K,L) * V(JN,J)
   20   GOUT(M,N,K,L)=DUM
   30 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DENMCK
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   V     V integral
C>     @param  GIN    gradient contribution
C>     @param  GOUT   output file 
C>     @param  NCI    Number of CI
C>     @param  II     indice
C>     @param  JJ     indice
C>     @param  KK     indice
C>     @param  NUM    Number of orbital
C>     @param  MAXSHL Max shell
      SUBROUTINE DENMCK(V,GIN,GOUT,NCI,II,JJ,KK,NUM,MAXSHL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
C
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      DIMENSION V(NUM,1)
      DIMENSION GIN(MAXSHL,MAXSHL,NCI,NCI)
      DIMENSION GOUT(MAXSHL,MAXSHL,MAXSHL,NCI)
      DATA ZERO /0.0D+00/
C
C     ----- PARTIAL TRANSFORMATION OF G(M,N,KL) IN G(M,N,P,L) -----
C
      KX = KLOC(KK)-KMIN(KK)
      DO 30 L = 1, NCI
      DO 30 N = KMIN(JJ),KMAX(JJ)
      DO 30 M = KMIN(II),KMAX(II)
        DO 20 NP = KMIN(KK),KMAX(KK)
        KN = KX + NP
        DUM  = ZERO
        DO 10 K = 1, NCI
   10     DUM = DUM + GIN(M,N,K,L) * V(KN,K)
   20   GOUT(M,N,NP,L)=DUM
   30 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DENMCL
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   V     V integral
C>     @param  GIN    gradient contribution
C>     @param  GOUT   output file 
C>     @param  NCI    Number of CI
C>     @param  II     indice
C>     @param  JJ     indice
C>     @param  KK     indice
C>     @param  LL     indice
C>     @param  NUM    Number of orbital
C>     @param  MAXSHL Max shell
      SUBROUTINE DENMCL(V,GIN,GOUT,NCI,II,JJ,KK,LL,NUM,MAXSHL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGTOT=20000, MXSH=5000)
C
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      DIMENSION V(NUM,1)
      DIMENSION GIN(MAXSHL,MAXSHL,MAXSHL,NCI)
      DIMENSION GOUT(MAXSHL,MAXSHL,MAXSHL,MAXSHL)
      DATA ZERO /0.0D+00/
C
C     ----- FINAL TRANSFORMATION OF G(M,N,P,L) IN G(M,N,P,Q) -----
C
      LX = KLOC(LL)-KMIN(LL)
      DO 30 NP =KMIN(KK),KMAX(KK)
      DO 30 N  =KMIN(JJ),KMAX(JJ)
      DO 30 M  =KMIN(II),KMAX(II)
        DO 20 NQ =KMIN(LL),KMAX(LL)
        LN = LX + NQ
        DUM  = ZERO
        DO 10 L = 1, NCI
   10     DUM = DUM + GIN(M,N,NP,L) * V(LN,L)
   20   GOUT(M,N,NP,NQ)=DUM
   30 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK ONECHG
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   NIJG  Number of IJG
      SUBROUTINE ONECHG(NIJG)  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGSH =30,MXGSH2=MXGSH*MXGSH)
      PARAMETER (MXGTOT=20000, MXSH=5000,
     *            MXAO=8192)
      COMMON /DERMEM/ IWFN,ICLB,INIJG,IGINT,IFINT,ISINT,IIJKLG,
     1 IDAB,ICHRG,IXY,IXZ,IYZ,IX,IY,IZ,ISJ,ISK,ISL,IGIJKL,IGNKL,IGNM,
     2 IDIJ,IDKL,IB00,IB01,IB10,IC00,ID00,IF00,
     3 IAAI,IAAJ,IBBK,IBBL,IFI,IFJ,IFK,IFL,
     4 ISII,ISJJ,ISKK,ISLL,ISIJ,ISIK,ISIL,ISJK,ISJL,ISKL,
     5 IDIJSI,IDIJSJ,IDKLSK,IDKLSL,IABV,ICV,IRW
      COMMON /FMCOM / X(1)
      COMMON /IJDCHR/ ADCHRG(13,MXGSH2),DASI(MXGSH2),DASJ(MXGSH2),NIJ
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      DIMENSION NIJG(2,1)
C
C     ----- ONE-ELECTRON CHARGE DISTRIBUTION AND DERIVATIVES -----
C
      NIJ0=0
      DO 9000 II=1,NSHELL
      IIMOD=II
      DO 8000 JJ=1,II
      JJMOD=JJ
      ISH=IIMOD
      JSH=JJMOD
      CALL ONESHL(ISH,JSH)
      CALL OEDCHR
      IIJJ=IA(MAX0(IIMOD,JJMOD))+MIN0(IIMOD,JJMOD)
      NIJG(1,IIJJ)=NIJ0
      NIJG(2,IIJJ)=NIJ
c     write(6,'("check=",3I4)') IIJJ,NIJ0,NIJ
      IF(NIJ.EQ.0) GO TO 7000
      CALL OEDWR(X(ICHRG),NIJ0,ADCHRG,DASI,DASJ,NIJ)
 7000 CONTINUE
      NIJ0=NIJ0+NIJ
 8000 CONTINUE
 9000 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK ONESHL
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   ISH   ISH indice 
C>     @param   JSH   JSH indice
      SUBROUTINE ONESHL(ISH,JSH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGSH =30)
      PARAMETER (MXGTOT=20000, MXSH=5000, MXATM=2000)
      LOGICAL IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL EXPNDI,EXPNDK
C
      COMMON /INFOA / NAT,ICH,MUL,NUM,NX,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /NUMSHL/ NUMI,NUMJ,NUMK,NUML,IJ,KL,IJKL
      COMMON /SHLEQU/ IIEQJJ,KKEQLL,IJEQKL,IJGTKL,IJLTKL
      COMMON /SHLHSS/ GA(MXGSH),CCA(MXGSH),CCAS(MXGSH),
     1                GB(MXGSH),CCB(MXGSH),CCBS(MXGSH),
     1                GC(MXGSH),CCC(MXGSH),CCCS(MXGSH),
     1                GD(MXGSH),CCD(MXGSH),CCDS(MXGSH),
     1                XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRK,
     1                NGA,NGB,NGC,NGD
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLXPN/ EXPNDI,EXPNDK
      DIMENSION CSPDFG(MXGTOT,5)
      EQUIVALENCE (CSPDFG(1,1),CS(1))
C
      IIEQJJ=ISH.EQ.JSH
C
C     ----- ISHELL -----
C
      I=KATOM(ISH)
      XI=C(1,I)
      YI=C(2,I)
      ZI=C(3,I)
      I1=KSTART(ISH)
      I2=I1+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      NUMI=MAXI-MINI+1
      LOCI=KLOC(ISH)-MINI
      SPI=LIT.EQ.2.AND.MINI.EQ.1
      NGA=0
c     write(6,'("kngchk=",2I4)') I1,I2
      DO 10 I=I1,I2
      NGA=NGA+1
      GA(NGA)=EX(I)
      CCA(NGA)=CSPDFG(I,LIT)
      IF(SPI) CCAS(NGA)=CSPDFG(I,1)/CSPDFG(I,2)
   10 CONTINUE
C
C     ----- JSHELL -----
C
      J=KATOM(JSH)
      XJ=C(1,J)
      YJ=C(2,J)
      ZJ=C(3,J)
      J1=KSTART(JSH)
      J2=J1+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      NUMJ=MAXJ-MINJ+1
      LOCJ=KLOC(JSH)-MINJ
      SPJ=LJT.EQ.2.AND.MINJ.EQ.1
      NGB=0
      DO 20 J=J1,J2
      NGB=NGB+1
      GB(NGB)=EX(J)
      CCB(NGB)=CSPDFG(J,LJT)
      IF(SPJ) CCBS(NGB)=CSPDFG(J,1)/CSPDFG(J,2)
   20 CONTINUE
      RRI=((XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2)
      SPIJ=SPI.OR.SPJ
      EXPNDI=LIT.GE.LJT
      RETURN
      END
C*MODULE HSS2   *DECK OEDCHR
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
      SUBROUTINE OEDCHR  
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (MXGSH =30,MXGSH2=MXGSH*MXGSH)
      LOGICAL SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      LOGICAL EXPNDI,EXPNDK,OUT,DBG
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /IJDCHR/ ADCHRG(13,MXGSH2),DASI(MXGSH2),DASJ(MXGSH2),NIJ
      COMMON /SHLHSS/ GA(MXGSH),CCA(MXGSH),CCAS(MXGSH),   
     1                GB(MXGSH),CCB(MXGSH),CCBS(MXGSH),
     1                GC(MXGSH),CCC(MXGSH),CCCS(MXGSH),
     1                GD(MXGSH),CCD(MXGSH),CCDS(MXGSH),
     1                XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRK,
     1                NGA,NGB,NGC,NGD
      COMMON /SHLTYP/ SPI,SPJ,SPK,SPL,SPIJ,SPKL,SPIJKL
      COMMON /SHLXPN/ EXPNDI,EXPNDK
      DATA ONE /1.0D+00/
C
C     ----- -IJ- CHARGE DISTRIBUTION -----
C
      XC=XI
      YC=YI
      ZC=ZI
      DXIJ=XI-XJ
      DYIJ=YI-YJ
      DZIJ=ZI-ZJ
      IF(EXPNDI) GO TO 10
      XC=XJ
      YC=YJ
      ZC=ZJ
      DXIJ=XJ-XI
      DYIJ=YJ-YI
      DZIJ=ZJ-ZI
   10 CONTINUE
C
C     ----- - I- PRIMITIVE           -----
C
      NIJ=0
      DO 30 IA=1,NGA
      AI=GA(IA)
      ARRI=AI*RRI
      AXI=AI*XI
      AYI=AI*YI
      AZI=AI*ZI
      CCI=CCA(IA)
C
C     ----- - J- PRIMITIVE           -----
C
      DO 20 JB=1,NGB
      AJ=GB(JB)
      AA=AI+AJ
      AA1=ONE/AA
      DUM=AJ*ARRI*AA1
      IF(DUM.GT.RTOL) GO TO 20   
      DAEXPA=CCI*CCB(JB)* EXP(-DUM)*AA1
      DUM=  ABS(DAEXPA)
      IF(DUM.LE.DTOL) GO TO 20 
C
      NIJ=NIJ+1
      ADCHRG( 1,NIJ)= DAEXPA
      ADCHRG( 2,NIJ)= AA
      ADCHRG( 3,NIJ)=(AXI+AJ*XJ)*AA1
      ADCHRG( 4,NIJ)=(AYI+AJ*YJ)*AA1
      ADCHRG( 5,NIJ)=(AZI+AJ*ZJ)*AA1
      ADCHRG( 6,NIJ)= XC
      ADCHRG( 7,NIJ)= YC
      ADCHRG( 8,NIJ)= ZC
      ADCHRG( 9,NIJ)= DXIJ
      ADCHRG(10,NIJ)= DYIJ
      ADCHRG(11,NIJ)= DZIJ
      ADCHRG(12,NIJ)= AI+AI
      ADCHRG(13,NIJ)= AJ+AJ
      IF(SPI) DASI(NIJ)=CCAS(IA)
      IF(SPJ) DASJ(NIJ)=CCBS(JB)
C
   20 CONTINUE
   30 CONTINUE
      RETURN
      END
C*MODULE HSS2   *DECK OEDWR
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   DCHRG  integral
C>     @param   NIJ0   number of IJ
C>     @param   ADCHRG integral term
C>     @param   DASI   Density for I
C>     @param   DASJ   Density for J
C>     @param   NIJ    Number of IJ 
C>
      SUBROUTINE OEDWR(DCHRG,NIJ0,ADCHRG,DASI,DASJ,NIJ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION ADCHRG(13,1),DASI(1),DASJ(1)
      DIMENSION  DCHRG(15,1)
C
      DO 20 IJ=1,NIJ
      DO 10 I=1,13
   10 DCHRG( I,IJ+NIJ0)=ADCHRG(I,IJ)
      DCHRG(14,IJ+NIJ0)=DASI(IJ)
      DCHRG(15,IJ+NIJ0)=DASJ(IJ)
   20 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK ONERD
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>     @param   DCHRG  integral
C>     @param   NIJ0   number of IJ
C>     @param   ADCHRG integral term
C>     @param   DASI   Density for I
C>     @param   DASJ   Density for J
C>     @param   NIJ    Number of IJ 
C>
      SUBROUTINE ONERD(DCHRG,NIJ0,ADCHRG,DASI,DASJ,NIJ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION ADCHRG(13,1),DASI(1),DASJ(1)
      DIMENSION  DCHRG(15,1)
C
      DO 20 IJ=1,NIJ
      DO 10 I=1,13
   10 ADCHRG(I,IJ)=DCHRG( I,IJ+NIJ0)
      DASI(IJ)    =DCHRG(14,IJ+NIJ0)
      DASJ(IJ)    =DCHRG(15,IJ+NIJ0)
   20 CONTINUE
C
      RETURN
      END
C*MODULE HSS2   *DECK DDEFNL
C>
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>
C> @param  CALTYP    calculate type
C> @param  DHE       gradient
C> @param  HE        hessian
C> @param  DF        Fock derivative
C> @param  V         orbital
C> @param  DFMO      Molecular orbital fock derivative
C> @param  WRK       work
C> @param  SHLJ      shell J
C> @param  SHLK      shell K
C> @param  DHAM      density open-shell
C> @param  EPSA      orbital energy
C> @param  IA        indice
C> @param  MCPHF     logical for CPHF
C> @param  NFT18     number of record
C> @param  I36       rhf or uhf
C> @param  NAT       number of atom
C> @param  NHAM      number of harmonic
C> @param  L0        number of MO 
C> @param  L1        number of atomic orbital
C> @param  L2        triangular orbital
C> @param  L3        square matrix
C>
      SUBROUTINE DDEFNL(CALTYP,DHE,HE,DF,V,DFMO,WRK,SHLJ,SHLK,DHAM,
     *                  EPSA,IA,MCPHF,NFT18,I36,NAT,NHAM,L0,L1,L2,L3)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,UROHF,
     *        GVBTYP,ROGVB,MCCI,GUGACI,MCPHF
      LOGICAL GOPARR,DSKWRK,MASWRK
      LOGICAL OUT,DBG
      DIMENSION DHE(*),HE(*),V(*),DFMO(L2),WRK(L1),EPSA(L3),
     *          DF(L2,I36,NAT),IA(L1),DHAM(3,3,NAT),
     *          SHLJ(L2,NHAM,3,NAT),SHLK(L2,NHAM,3,NAT)
C
      PARAMETER (MXATM=2000)
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /FUNCT / EHF,EG(3*MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /RESTAR/ TIMLIM,NREST,NREC,INTLOC,IST,JST,KST,LST
      COMMON /SCFPAR/ NOCORE,NOOPEN,NOPAIR,RHFTYP,UHFTYP,ROHFTYP,
     *                UROHF,GVBTYP,ROGVB,MCCI,GUGACI
      DATA SDEFAULT/8HDEFAULT /
C
C     ----- THE END OF INTEGRAL CONTRIBUTIONS TO HESSIAN -----
C
      NREST=0
      IST=1
      JST=1
      KST=1
      LST=1
C
      IF(CALTYP.NE.SDEFAULT) RETURN
C
      NHE = 9*(NAT*NAT+NAT)/2
C
C     ----- OUTPUT THE FINISHED GRADIENT VECTOR -----
C
      NEG = 3*NAT
      CALL DCOPY(NEG,DHE,1,EG,1)
      CALL DAWRIT(IDAF,IODA,DHE,NEG,3,0)
C
C     ----- WRITE GRADIENT + HESSIAN WITH ALL NON-CPHF TERMS ----
C
      NDHE=NEG+NHE
      CALL DAWRIT(IDAF,IODA,DHE,NDHE,67,0)
C
      IF(OUT) THEN
         IF(MASWRK) WRITE(IW,9996)
         CALL HSSPRT(NAT,DHE,HE)
       END IF
C
C     ----- WRITE EACH ATOM'S DERIVATIVE FOCK MATRICES TO DISK -----
C     EACH IS TRANSFORMED TO THE MO BASIS FIRST.  IN GENERAL, THIS
C     MATRIX IS NOT SYMMETRIC, ALTHOUGH FOR RHF OR UHF IT IS.
C
      CALL DAREAD(IDAF,IODA,V,L3,15,0)
      IF(UHFTYP) CALL DAREAD(IDAF,IODA,V(L3+1),L3,19,0)
      IF(.not.UHFTYP.and.UROHF) CALL DAREAD(IDAF,IODA,V(L3+1),L3,15,0)
      IF(MCPHF) THEN
         CALL SEQREW(NFT18)
         DO 510 IAT=1,NAT
            DO 500 IXYZ=1,3
C
               IF(RHFTYP .OR. GUGACI) THEN
                  CALL TFTRI(DFMO,DF(1,IXYZ,IAT),V,WRK,L1,L1,L1)
                  CALL SQWRIT(NFT18,DFMO,L2)
                  IF(OUT) WRITE(IW,9997) 'AO',IAT,IXYZ
                  IF(OUT) CALL PRTRI(DF(1,IXYZ,IAT),L1)
               END IF
C
               IF(UROHF) THEN
                  IF(OUT) WRITE(IW,9997) 'AO',IAT,IXYZ
                  IF(OUT) CALL PRTRI(DF(1,IXYZ,IAT),L1)
                  CALL TFTRI(DFMO,DF(1,IXYZ,IAT),V,WRK,L1,L1,L1)
                  CALL SQWRIT(NFT18,DFMO,L2)
C
                  IF(OUT) WRITE(IW,9997) 'AO',IAT,IXYZ
                  IF(OUT) CALL PRTRI(DF(1,IXYZ+3,IAT),L1)
                  CALL TFTRI(DFMO,DF(1,IXYZ+3,IAT),V(L3+1),WRK,L1,L1,L1)
                  CALL SQWRIT(NFT18,DFMO,L2)
               END IF
C
C         THE MCSCF CODE IS CORRECT ONLY FOR THE 1 CSF CASE!
C
C              IF(MCCI) THEN
C                 IF(OUT) WRITE(IW,9997) 'AO',IAT,IXYZ
C                 IF(OUT) CALL PRTRI(DF(1,IXYZ,IAT),L1)
C                 CALL TFTRI(DFMO,DF(1,IXYZ,IAT),V,WRK,L1,L1,L1)
C                 CALL SQWRIT(NFT18,DFMO,L2)
C              END IF
C
  500       CONTINUE
  510    CONTINUE
C
c         IF(ROGVB) THEN
c            CALL JDDODF(EPSA,V,DF,DFMO,WRK,SHLJ,SHLK,DHAM,IA,
c     *                  NAT,NHAM,L1,L2,NFT18,OUT)
c         END IF
C
c    I think JDDODF need L0!
c     
         IF(ROGVB) THEN
            CALL JDDODF(EPSA,V,DF,DFMO,WRK,SHLJ,SHLK,DHAM,IA,
     *                  NAT,NHAM,L0,L1,L2,NFT18,OUT)
         END IF
         CALL SEQREW(NFT18)
      END IF
      RETURN
C
 9997 FORMAT(1X,'-DF- IN ',A2,' BASIS FOR ATOM',I4,'  COORD',I2)
 9996 FORMAT(/5X,33(1H-)/5X,'TWO ELECTRON GRADIENT AND HESSIAN'/
     *        5X,33(1H-)/)
      END
C*MODULE HSS2C   *DECK MCFNL
C>
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>
C> @param  DHE       gradient
C> @param  HE        hessian
C> @param  DLAG      Lagrangian term
C> @param  FCD       Fock derivative
C> @param  HCD       Fock derivative
C> @param  GD        integral
C> @param  FVD       Fock derivative
C> @param  VEC       orbital
C> @param  DFMO      Molecular orbital fock derivative
C> @param  MMOO      Derivative of MO
C> @param  IA        indice
C> @param  WRK       work
C> @param  L1        number of atomic orbital
C> @param  L2        triangular orbital
C> @param  NAT       number of atom
C> @param  NCOR      number of core
C> @param  NCI       number of CI
C> @param  NN2       Number of indice
C> @param  NFT18     Numbre of record
      SUBROUTINE MCFNL(DHE,HE,DE,DLAG,FCD,HCD,GD,FVD,VEC,
     *                 DMMO,IA,DFMO,WRK,L1,L2,NAT,NCOR,
     *                 NCI,NN2,NFT18)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL OUT,DBG
      LOGICAL GOPARR,DSKWRK,MASWRK
C
      DIMENSION DHE(*),HE(*),DE(*),
     *          DLAG(L1,L1,3*NAT),FCD(L2,3*NAT),
     *          HCD(3*NAT),GD(NN2,3*NAT),FVD(L2,3*NAT),VEC(L1,L1),
     *          DMMO(*),WRK(L1*L1),DFMO(L2)
      DIMENSION IA(L1)
C
      PARAMETER (MXATM=2000)
C
      COMMON /DSHLT / RTOL,DTOL,VTOL1,VTOL2,VTOLS,OUT,DBG
      COMMON /FUNCT / EHF,EG(3*MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /RESTAR/ TIMLIM,NREST,NREC,INTLOC,IST,JST,KST,LST
C
      PARAMETER (ZERO=0.0D+00,TWO=2.0D+00)
C
C     ----- THE END OF INTEGRAL CONTRIBUTIONS TO HESSIAN -----
C
      NREST=0
      IST=1
      JST=1
      KST=1
      LST=1
C
C     ----- OUTPUT THE FINISHED GRADIENT VECTOR -----
C
      NEG = 3*NAT
      CALL DCOPY(NEG,DE,1,EG,1)
      CALL DAWRIT(IDAF,IODA,DE,NEG,3,0)
C
C     ----- COPY HESSIAN MATRIX TO TRANSFORM SQUARE TO TRIANGLE -----
C
      NHE = 9*(NAT*NAT+NAT)/2
C
C     ----- WRITE GRADIENT + HESSIAN WITH ALL NON-CPHF TERMS ----
C
      NHE = 9*(NAT*NAT+NAT)/2
      NDHE=NEG+NHE
      CALL DAWRIT(IDAF,IODA,DHE,NDHE,67,0)
C
      IF(OUT) THEN
        IF(MASWRK) WRITE(IW,9996)
        CALL HSSPRT(NAT,DHE,HE)
      END IF
C
      L3 = L1*L1
      NXYZ = 3*NAT
      NOCC = NCOR+NCI
      CALL SEQREW(NFT18)
C
      DO 1000 IXYZ=1,NXYZ
C
C     COMPLETE TRANSFORMATION OF VALENCE PORTION OF DERIVATIVE
C     LAGRANGIAN
C
       CALL DCOPY(L3,DLAG(1,1,IXYZ),1,WRK,1)
       CALL VCLR(DLAG(1,1,IXYZ),1,L3)
C
       DO 50 J=1,NCI
         DO 50 I=1,L1
           DVAL = ZERO
           DO 40 MU=1,L1
             MUJ = (J-1)*L1 + MU
             DVAL = DVAL + VEC(MU,I)*WRK(MUJ)
   40      CONTINUE
         DLAG(I,J+NCOR,IXYZ) = DVAL
   50  CONTINUE
C
C     TRANSFORM DERIVATIVE CORE FOCK MATRIX INTO THE MO BASIS
C     AND WRITE TO FILE ALONG WITH DERIVATIVE ERIS
C
        DO 100 I=1,L1
          II = IA(I) + I
          FCD(II,IXYZ) = TWO*FCD(II,IXYZ)
          FVD(II,IXYZ) = TWO*FVD(II,IXYZ)
  100   CONTINUE
C
        CALL TFTRI(DFMO,FCD(1,IXYZ),VEC,WRK,L1,L1,L1)
        CALL SQWRIT(NFT18,DFMO,L2)
        CALL SQWRIT(NFT18,GD(1,IXYZ),NN2)
C
C     ADD DERIVATIVE CORE FOCK MATRIX CONTRIBUTION TO DERIVATIVE
C     LAGRANGIAN
C
      DO 600 I=1,L1
        DO 300 J=1,NCOR
          II = MAX(I,J)
          JJ = MIN(I,J)
          IJ = IA(II) + JJ
          DLAG(I,J,IXYZ) = DLAG(I,J,IXYZ) + TWO*DFMO(IJ)
  300   CONTINUE
C
        DO 500 J=NCOR+1,NOCC
          DVAL = ZERO
          DO 400 K=NCOR+1,NOCC
            JJ = MAX(J-NCOR,K-NCOR)
            KK = MIN(J-NCOR,K-NCOR)
            JK = IA(JJ) + KK
            II = MAX(I,K)
            KK = MIN(I,K)
            IK = IA(II) + KK
            DVAL = DVAL + DFMO(IK)*DMMO(JK)
  400     CONTINUE
          DLAG(I,J,IXYZ) = DLAG(I,J,IXYZ) + DVAL
C
  500   CONTINUE
  600 CONTINUE
C
C     ADD DERIVATIVE VALENCE FOCK MATRIX CONTRIBUTION TO DERIVATIVE
C     LAGRANGIAN
C
        CALL TFTRI(DFMO,FVD(1,IXYZ),VEC,WRK,L1,L1,L1)
C
        DO 700 I=1,L1
          DO 700 J=1,NCOR
            II = MAX(I,J)
            JJ = MIN(I,J)
            IJ = IA(II) + JJ
            DLAG(I,J,IXYZ) = DLAG(I,J,IXYZ) + DFMO(IJ)
  700   CONTINUE
C
C     WRITE DERIVATIVE LAGRANGIAN TO FILE
C
        CALL SQWRIT(NFT18,DLAG(1,1,IXYZ),L3)
C
 1000 CONTINUE
C
      CALL SEQREW(NFT18)
      CALL DAWRIT(IDAF,IODA,HCD,NXYZ,259,0)
C
      RETURN
 9996 FORMAT(/5X,33(1H-)/5X,'TWO ELECTRON GRADIENT AND HESSIAN'/
     *        5X,33(1H-)/)
      END
C*MODULE HSS2    *DECK DGLFCK
C>
C>     @brief   driver for 2-electron hess
C>
C>     @details preparation for Hessian
C>
C>     @author Yuji Imafuku 
C>
C>
C> @param  NC        number of coordinate
C> @param  DF        fock derivative matrix
C> @param  L1        number of atomic orbital
C> @param  L2        triangular orbital
      SUBROUTINE DGLFCK(NC,DF,L2,L1)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION DF(L2,NC)
      DATA PT5   /0.5D+00/
C
C     ----- WRITE DERIVATIVE FOCK MATRICES  -----
C     ----- OFF-DIAGONAL ARE DIVIDED BY 2.0 -----
C
C
      DO IC=1,NC
C
         IJ=0
         DO I=1,L1
            DO J=1,I
               IJ=IJ+1
               IF(J.NE.I) THEN    
                  DF(IJ,IC)=DF(IJ,IC)*PT5
               ENDIF
            ENDDO
         ENDDO
C
      ENDDO
C
      END
C
C*MODULE HSS2C   *DECK DENGCI
C>     @brief   driver for 2-electron hess
C>
C>     @details JKDIAT
C>
C>    @author Yuji Imahuku
C>    @param    II indice 
C>    @param    JJ indice 
C>    @param    KK indice 
C>    @param    LL indice 
C>    @param     D Density matrix
C>    @param    IX indice
C>    @param   DAB Density matrix
C>    @param   DABMAX  Density matrix
      SUBROUTINE DENGCI(II,JJ,KK,LL,D,IX,DAB,DABMAX)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL SKIPI,SKIPJ,SKIPK,SKIPL,PACK2E 
C
      DIMENSION D(*),IX(*),DAB(*)
      DIMENSION NDIF(4)
C
      PARAMETER (MXGTOT=20000, MXSH=5000)
C
      COMMON /CIJDD / NDMAX,ND,MD
      COMMON /DERSKP/ IIAT,JJAT,KKAT,LLAT,SKIPI,SKIPJ,SKIPK,SKIPL
      COMMON /INTFIL/ NINTMX,NHEX,NTUPL,PACK2E,INTTYP,IGRDTYP
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /PCKLAB/ LABSIZ
C
      PARAMETER (PT5=0.5D+00, ZERO=0.0D+00)
C
      DATA NFT16 /16/
C
C     ----- READ 2 BODY DENSITY ELEMENTS FROM DISK FOR MCSCF -----
C
      DABMAX = ZERO
      NDABI = 0
      NDABJ = 0
      NDABK = 0
      NDABL = 0
      MINI=KMIN(II)
      MINJ=KMIN(JJ)
      MINK=KMIN(KK)
      MINL=KMIN(LL)
      LOCI=KLOC(II)-MINI
      LOCJ=KLOC(JJ)-MINJ
      LOCK=KLOC(KK)-MINK
      LOCL=KLOC(LL)-MINL
c      CALL VCLR(DAB,1,NDAB)
C
C     ----- PERMUTE THE SHELLS THE SAME WAY AS JDDIAT DOES -----
C     PERMUTE HIGHEST ANGULAR MOMENTUM SHELL TO THE RIGHTMOST
C
      ITYP = KTYPE(II)
      JTYP = KTYPE(JJ)
      KTYP = KTYPE(KK)
      LTYP = KTYPE(LL)
      MAXTYP=MAX(ITYP,JTYP,KTYP,LTYP)
      IF(MAXTYP.NE.LTYP) GO TO 10
      NDENI=1
      NDENJ=2
      NDENK=3
      NDENL=4
      GO TO 40
   10 IF(MAXTYP.NE.KTYP) GO TO 20
      NDENI=1
      NDENJ=2
      NDENK=4
      NDENL=3
      GO TO 40
   20 IF(MAXTYP.NE.JTYP) GO TO 30
      NDENI=3
      NDENJ=4
      NDENK=1
      NDENL=2
      GO TO 40
   30 CONTINUE
      NDENI=3
      NDENJ=4
      NDENK=2
      NDENL=1
   40 CONTINUE
C
C     ----- NOW THE SKIPS, AT LEAST ONE WILL BE TRUE -----
C
      IF(SKIPL) THEN
         NDABI = NDENI
         NDABJ = NDENJ
         NDABK = NDENK
         NDABL = NDENL
         GO TO 100
      END IF
      IF(SKIPK) THEN
         NDABI = NDENI
         NDABJ = NDENJ
         NDABK = NDENL
         NDABL = NDENK
         GO TO 100
      END IF
      IF(SKIPJ) THEN
         NDABI = NDENK
         NDABJ = NDENL
         NDABK = NDENI
         NDABL = NDENJ
         GO TO 100
      END IF
      IF(SKIPI) THEN
         NDABI = NDENK
         NDABJ = NDENL
         NDABK = NDENJ
         NDABL = NDENI
      END IF
C
C     END OF DM2 FOR EACH SHELL IS INDICATED BY A ZERO LABEL AND
C     DENSITY ELEMENT, AND IN GENERAL MANY SHELL SETS LIVE IN A
C     SINGLE DISK BUFFER.  IF PART OF A BUFFER IS NOT YET PROCESSED
C     WE BRANCH TO 200, TO PROCESS VALUES REMAINING IN CURRENT BUFFER.
C
  100 CONTINUE
      IF(ND.GT.0) GO TO 200
C
C     ----- READ IN BUFFER OF -2DM- -----
C
  110 CONTINUE
      IF(MD.LE.0) RETURN
      CALL PREAD(NFT16,D,IX,MD,NINTMX)
      IF(MD.EQ.0) RETURN
      NDMAX=IABS(MD)
C
C     ----- SET UP -ABDENS- ARRAY -----
C
      ND=0
  200 CONTINUE
         ND=ND+1
         IF(ND.GT.NDMAX) GO TO 110
         VAL= D(ND)
C
         NPACK = ND
         IF (LABSIZ .EQ. 2) THEN
*I32        LABEL1 = IX( 2*NPACK - 1 )
*I32        LABEL2 = IX( 2*NPACK     )
*I32        IPACK = ISHFT( LABEL1, -16 )
*I32        JPACK = IAND( LABEL1, 65535 )
*I32        KPACK = ISHFT( LABEL2, -16 )
*I32        LPACK = IAND( LABEL2, 65535 )
*I64        LABEL = IX(NPACK)
*I64        IPACK = ISHFT( LABEL, -48 )
*I64        JPACK = IAND( ISHFT( LABEL, -32 ), 65535 )
*I64        KPACK = IAND( ISHFT( LABEL, -16 ), 65535 )
*I64        LPACK = IAND( LABEL, 65535 )
         ELSE IF (LABSIZ .EQ. 1) THEN
*I32        LABEL = IX(NPACK)
*I32        IPACK = ISHFT( LABEL, -24 )
*I32        JPACK = IAND( ISHFT( LABEL, -16 ), 255 )
*I32        KPACK = IAND( ISHFT( LABEL,  -8 ), 255 )
*I32        LPACK = IAND( LABEL, 255 )
*I64        IF ( MOD(NPACK,2) .EQ. 0 ) THEN
*I64           LABEL = IX( NPACK/2 )
*I64           IPACK = IAND( ISHFT( LABEL, -24 ), 255 )
*I64           JPACK = IAND( ISHFT( LABEL, -16 ), 255 )
*I64           KPACK = IAND( ISHFT( LABEL,  -8 ), 255 )
*I64           LPACK = IAND( LABEL, 255 )
*I64        ELSE
*I64           LABEL = IX( (NPACK/2)+1 )
*I64           IPACK = ISHFT( LABEL, -56 )
*I64           JPACK = IAND( ISHFT( LABEL, -48 ), 255 )
*I64           KPACK = IAND( ISHFT( LABEL, -40 ), 255 )
*I64           LPACK = IAND( ISHFT( LABEL, -32 ), 255 )
*I64        END IF
         END IF
C
C         ALL FOUR LABELS VANISHING IS END OF THIS SHELL'S 2PDM
C
         IF(IPACK.EQ.0) RETURN
C
         IG = IPACK + LOCI
         JG = JPACK + LOCJ
         KG = KPACK + LOCK
         LG = LPACK + LOCL
         NDIF(1)= IPACK-MINI
         NDIF(2)= JPACK-MINJ
         NDIF(3)= KPACK-MINK
         NDIF(4)= LPACK-MINL
         NIJKL = 216*NDIF(NDABI) + 36*NDIF(NDABJ)
     *         +   6*NDIF(NDABK) +    NDIF(NDABL) + 1
         IF(IG.EQ.KG  .AND.  JG.EQ.LG) VAL=VAL*PT5
         DAB(NIJKL)=VAL
         IF(ABS(VAL).GT.DABMAX) DABMAX=ABS(VAL)
      GO TO 200
      END

C*MODULE HSS2    *DECK MCTRN
C>     @brief   driver for 2-electron hess
C>
C>     @details JKDIAT
C>
C>    @author Yuji   Imahuku
C>    @param   TBDM  shell contribution
C>    @param    vec  orbital
C>    @param   HBDM  HB density
C>    @param     L1  Number of orbital
C>    @param     L2  Number of triangular matrix
C>    @param   ISH   indice 
C>    @param   JSH   indice 
C>    @param   KSH   indice 
C>    @param   LSH   indice 
      SUBROUTINE MCTRN(TBDM,VEC,HBDM,L1,L2,ISH,JSH,KSH,LSH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL IANDJ,KANDL
      PARAMETER (MXAO=8192,ZERO=0.0D+00)
C
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /MCPAR / NFZCX,NMCCOR,NCI,NOC,NORBX,NUM1
      COMMON /MCACT / MAXSHL,NNACT,MIJKL
      COMMON /SHLPAR/ LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1                MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL
C
      DIMENSION TBDM(MAXSHL*MAXSHL,NCI*MAXSHL,4)
      DIMENSION VEC(L1,L1), HBDM(L2,NNACT)
C
      NOCC = NMCCOR+NCI
      MVAL = 4*NCI*MAXSHL*MAXSHL*MAXSHL
      CALL VCLR(TBDM,1,MVAL)
C
      IANDJ =   ISH .EQ. JSH
      KANDL =   KSH .EQ. LSH
C
C     PERFORM PARTIAL THIRD-QUARTER BACK-TRANSFORMATION OF
C     TWO PARTICLE DENSITY MATRIX
C
      NKL = 0
C
      MAXLL = MAXL
C
      DO 2000 K=MINK,MAXK
        KNO = LOCK + K
        IF(KANDL) MAXLL = K
        DO 1000 L=MINL,MAXLL
          LNO = LOCL + L
          NKL = NKL + 1
          LG = MAX(LNO,KNO)
          KG = MIN(LNO,KNO)
          LKL = IA(LG) + KG
C
          DO 400 J=MINJ,MAXJ
            JNO = LOCJ + J
            DO 200 M=1,NCI
              DVAL = ZERO
              DO 100 N=NMCCOR+1,NOCC
                MG = MAX(M,N-NMCCOR)
                NG = MIN(M,N-NMCCOR)
                MN = IA(MG) + NG
                DVAL = DVAL + VEC(JNO,N)*HBDM(LKL,MN)
  100         CONTINUE
              MJ = (J-1)*NCI + M
              TBDM(NKL,MJ,1) = TBDM(NKL,MJ,1) + DVAL
  200       CONTINUE
  400     CONTINUE
C
          DO 800 I=MINI,MAXI
            INO = LOCI + I
            DO 600 M=1,NCI
              DVAL = ZERO
              DO 500 N=NMCCOR+1,NOCC
                MG = MAX(M,N-NMCCOR)
                NG = MIN(M,N-NMCCOR)
                MN = IA(MG) + NG
                DVAL = DVAL + VEC(INO,N)*HBDM(LKL,MN)
  500         CONTINUE
              MI = (I-1)*NCI + M
              TBDM(NKL,MI,2) = TBDM(NKL,MI,2) + DVAL
  600       CONTINUE
  800     CONTINUE
C
 1000   CONTINUE
 2000 CONTINUE
C
      NIJ = 0
      MAXJJ = MAXJ
C
      DO 5000 I=MINI,MAXI
        INO = LOCI + I
        IF(IANDJ) MAXJJ = I
        DO 4000 J=MINJ,MAXJJ
          JNO = LOCJ + J
          NIJ = NIJ + 1
          JG = MAX(JNO,INO)
          IG = MIN(JNO,INO)
          LIJ = IA(JG) + IG
C
          DO 3400 L=MINL,MAXL
            LNO = LOCL + L
            DO 3200 M=1,NCI
              DVAL = ZERO
              DO 3100 N=NMCCOR+1,NOCC
                MG = MAX(M,N-NMCCOR)
                NG = MIN(M,N-NMCCOR)
                MN = IA(MG) + NG
                DVAL = DVAL + VEC(LNO,N)*HBDM(LIJ,MN)
 3100         CONTINUE
              ML = (L-1)*NCI + M
              TBDM(NIJ,ML,3) = TBDM(NIJ,ML,3) + DVAL
 3200       CONTINUE
 3400     CONTINUE
C
          DO 3800 K=MINK,MAXK
            KNO = LOCK + K
            DO 3600 M=1,NCI
              DVAL = ZERO
              DO 3500 N=NMCCOR+1,NOCC
                MG = MAX(M,N-NMCCOR)
                NG = MIN(M,N-NMCCOR)
                MN = IA(MG) + NG
                DVAL = DVAL + VEC(KNO,N)*HBDM(LIJ,MN)
 3500         CONTINUE
              MK = (K-1)*NCI + M
              TBDM(NIJ,MK,4) = TBDM(NIJ,MK,4) + DVAL
 3600       CONTINUE
 3800     CONTINUE
C
 4000   CONTINUE
 5000 CONTINUE
C 
      RETURN
      END

C*MODULE HSS2    *DECK HSSWAB
C>     @brief   driver for 2-electron hess
C>
C>     @details JKDIAT
C>
C>    @author Yuji   Imahuku
C>    @param FCM force constant
C>    @param EH  Hessian
C>    @param NAT number of atom
      SUBROUTINE HSSWAB(FCM,EH,NAT)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION EH(3*NAT,3*NAT),FCM(*)
C
C     TRANSFORM FULL SQUARE HESSIAN TO TRIANGLE MATRIX.
C
      IJC=0
      DO 210 IAT=1,NAT
         DO 200 JAT=1,IAT
            DO 110 IC=1,3
               DO 100 JC=1,3
                  IJC=IJC+1
                  I=3*(IAT-1)+IC
                  J=3*(JAT-1)+JC
                  FCM(IJC)=EH(I,J)
  100          CONTINUE
  110       CONTINUE
  200    CONTINUE
  210 CONTINUE
      RETURN
      END
